// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IntPatch_PointLine_HeaderFile
#define _IntPatch_PointLine_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_IntPatch_PointLine.hxx>

#include <IntPatch_Line.hxx>
#include <Standard_Boolean.hxx>
#include <IntSurf_TypeTrans.hxx>
#include <IntSurf_Situation.hxx>
#include <Standard_Integer.hxx>
class Standard_DomainError;
class Standard_OutOfRange;
class IntSurf_PntOn2S;


//! Definition of an intersection line between two
//! surfaces.
//! A line defined by a set of points
//! (e.g. coming from a walking algorithm) as
//! defined in the class WLine or RLine (Restriction line).
class IntPatch_PointLine : public IntPatch_Line
{

public:

  
  //! Returns the number of intersection points.
  Standard_EXPORT virtual   Standard_Integer NbPnts()  const = 0;
  
  //! Returns the intersection point of range Index.
  Standard_EXPORT virtual  const  IntSurf_PntOn2S& Point (const Standard_Integer Index)  const = 0;




  DEFINE_STANDARD_RTTI(IntPatch_PointLine)

protected:

  
  //! To initialize the fields, when the transitions
  //! are In or Out.
  Standard_EXPORT IntPatch_PointLine(const Standard_Boolean Tang, const IntSurf_TypeTrans Trans1, const IntSurf_TypeTrans Trans2);
  
  //! To initialize the fields, when the transitions
  //! are Touch.
  Standard_EXPORT IntPatch_PointLine(const Standard_Boolean Tang, const IntSurf_Situation Situ1, const IntSurf_Situation Situ2);
  
  //! To initialize the fields, when the transitions
  //! are Undecided.
  Standard_EXPORT IntPatch_PointLine(const Standard_Boolean Tang);



private: 




};







#endif // _IntPatch_PointLine_HeaderFile
