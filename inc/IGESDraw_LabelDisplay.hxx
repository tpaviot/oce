// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESDraw_LabelDisplay_HeaderFile
#define _IGESDraw_LabelDisplay_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IGESDraw_LabelDisplay_HeaderFile
#include <Handle_IGESDraw_LabelDisplay.hxx>
#endif

#ifndef _Handle_IGESDraw_HArray1OfViewKindEntity_HeaderFile
#include <Handle_IGESDraw_HArray1OfViewKindEntity.hxx>
#endif
#ifndef _Handle_TColgp_HArray1OfXYZ_HeaderFile
#include <Handle_TColgp_HArray1OfXYZ.hxx>
#endif
#ifndef _Handle_IGESDimen_HArray1OfLeaderArrow_HeaderFile
#include <Handle_IGESDimen_HArray1OfLeaderArrow.hxx>
#endif
#ifndef _Handle_TColStd_HArray1OfInteger_HeaderFile
#include <Handle_TColStd_HArray1OfInteger.hxx>
#endif
#ifndef _Handle_IGESData_HArray1OfIGESEntity_HeaderFile
#include <Handle_IGESData_HArray1OfIGESEntity.hxx>
#endif
#ifndef _IGESData_LabelDisplayEntity_HeaderFile
#include <IGESData_LabelDisplayEntity.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_IGESData_ViewKindEntity_HeaderFile
#include <Handle_IGESData_ViewKindEntity.hxx>
#endif
#ifndef _Handle_IGESDimen_LeaderArrow_HeaderFile
#include <Handle_IGESDimen_LeaderArrow.hxx>
#endif
#ifndef _Handle_IGESData_IGESEntity_HeaderFile
#include <Handle_IGESData_IGESEntity.hxx>
#endif
class IGESDraw_HArray1OfViewKindEntity;
class TColgp_HArray1OfXYZ;
class IGESDimen_HArray1OfLeaderArrow;
class TColStd_HArray1OfInteger;
class IGESData_HArray1OfIGESEntity;
class Standard_DimensionMismatch;
class Standard_OutOfRange;
class IGESData_ViewKindEntity;
class gp_Pnt;
class IGESDimen_LeaderArrow;
class IGESData_IGESEntity;


//! defines IGESLabelDisplay, Type <402> Form <5> <br>
//!          in package IGESDraw <br>
//! <br>
//!          Permits one or more displays for the <br>
//!          entity labels of an entity <br>
class IGESDraw_LabelDisplay : public IGESData_LabelDisplayEntity {

public:

  
  Standard_EXPORT   IGESDraw_LabelDisplay();
  //! This method is used to set the fields of the class <br>
//!           LabelDisplay <br>
//!   - allViews             : Pointers to View Entities <br>
//!   - allTextLocations     : Coordinates of text locations in the views <br>
//!   - allLeaderEntities    : Pointers to Leader Entities in the views <br>
//!   - allLabelLevels       : Entity label level numbers in the views <br>
//!   - allDisplayedEntities : Pointers to the entities being displayed <br>
//! raises exception if Lengths of allViews, allTextLocations, <br>
//! allLeaderEntities, allLabelLevels and allDisplayedEntities are <br>
//! not same. <br>
  Standard_EXPORT     void Init(const Handle(IGESDraw_HArray1OfViewKindEntity)& allViews,const Handle(TColgp_HArray1OfXYZ)& allTextLocations,const Handle(IGESDimen_HArray1OfLeaderArrow)& allLeaderEntities,const Handle(TColStd_HArray1OfInteger)& allLabelLevels,const Handle(IGESData_HArray1OfIGESEntity)& allDisplayedEntities) ;
  //! returns the number of label placements in <me> <br>
  Standard_EXPORT     Standard_Integer NbLabels() const;
  //! returns the View entity indicated by ViewIndex <br>
//! raises an exception if ViewIndex <= 0 or ViewIndex > NbLabels(). <br>
  Standard_EXPORT     Handle_IGESData_ViewKindEntity ViewItem(const Standard_Integer ViewIndex) const;
  //! returns the 3d-Point coordinates of the text location, in the <br>
//! view indicated by ViewIndex <br>
//! raises an exception if ViewIndex <= 0 or ViewIndex > NbLabels(). <br>
  Standard_EXPORT     gp_Pnt TextLocation(const Standard_Integer ViewIndex) const;
  //! returns the Leader entity in the view indicated by ViewIndex <br>
//! raises an exception if ViewIndex <= 0 or ViewIndex > NbLabels(). <br>
  Standard_EXPORT     Handle_IGESDimen_LeaderArrow LeaderEntity(const Standard_Integer ViewIndex) const;
  //! returns the Entity label level number in the view indicated <br>
//! by ViewIndex <br>
//! raises an exception if ViewIndex <= 0 or ViewIndex > NbLabels(). <br>
  Standard_EXPORT     Standard_Integer LabelLevel(const Standard_Integer ViewIndex) const;
  //! returns the entity indicated by EntityIndex <br>
//! raises an exception if EntityIndex <= 0 or EntityIndex > NbLabels(). <br>
  Standard_EXPORT     Handle_IGESData_IGESEntity DisplayedEntity(const Standard_Integer EntityIndex) const;
  //! returns the transformed 3d-Point coordinates of the text <br>
//! location, in the view indicated by ViewIndex <br>
//! raises an exception if ViewIndex <= 0 or ViewIndex > NbLabels(). <br>
  Standard_EXPORT     gp_Pnt TransformedTextLocation(const Standard_Integer ViewIndex) const;




  DEFINE_STANDARD_RTTI(IGESDraw_LabelDisplay)

protected:




private: 


Handle_IGESDraw_HArray1OfViewKindEntity theViews;
Handle_TColgp_HArray1OfXYZ theTextLocations;
Handle_IGESDimen_HArray1OfLeaderArrow theLeaderEntities;
Handle_TColStd_HArray1OfInteger theLabelLevels;
Handle_IGESData_HArray1OfIGESEntity theDisplayedEntities;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
