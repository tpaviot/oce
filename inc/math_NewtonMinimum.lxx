// Created on: 1996-05-03
// Created by: Philippe MANGIN
// Copyright (c) 1996-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <StdFail_NotDone.hxx>

inline Standard_Boolean math_NewtonMinimum::IsDone() const 
{
  return Done;
}

inline const math_Vector& math_NewtonMinimum::Location() const 
{
   StdFail_NotDone_Raise_if(!Done, "NewtonMinimum");
   return TheLocation;
}

inline void math_NewtonMinimum::Location(math_Vector& Loc) const 
{
   StdFail_NotDone_Raise_if(!Done, "NewtonMinimum");
   Loc = TheLocation;
}

inline Standard_Real math_NewtonMinimum::Minimum() const 
{
   StdFail_NotDone_Raise_if(!Done, "NewtonMinimum");
   return TheMinimum;
}

inline const math_Vector& math_NewtonMinimum::Gradient() const 
{
   StdFail_NotDone_Raise_if(!Done, "NewtonMinimum");
   return TheGradient;
}

inline void math_NewtonMinimum::Gradient(math_Vector& Grad) const 
{
   StdFail_NotDone_Raise_if(!Done, "NewtonMinimum");
   Grad = TheGradient;
}

inline Standard_Integer math_NewtonMinimum::NbIterations() const 
{
   StdFail_NotDone_Raise_if(!Done, "NewtonMinimum");
   return nbiter;
}

