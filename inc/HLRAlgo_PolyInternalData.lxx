// Created on: 1993-01-11
// Created by: Christophe MARION
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <TColStd_HArray1OfInteger.hxx>
#include <TColStd_HArray1OfBoolean.hxx>
#include <TColStd_HArray1OfReal.hxx>
#include <TColgp_HArray1OfPnt.hxx>
#include <TColgp_HArray1OfPnt2d.hxx>
#include <TColgp_HArray1OfDir.hxx>
#include <HLRAlgo_HArray1OfTData.hxx>
#include <HLRAlgo_HArray1OfPISeg.hxx>
#include <HLRAlgo_HArray1OfPINod.hxx>

//=======================================================================
//function : DecTData
//purpose  : 
//=======================================================================

inline void HLRAlgo_PolyInternalData::DecTData ()
{ myNbTData--; }

//=======================================================================
//function : DecPISeg
//purpose  : 
//=======================================================================

inline void HLRAlgo_PolyInternalData::DecPISeg ()
{ myNbPISeg--; }

//=======================================================================
//function : DecPINod
//purpose  : 
//=======================================================================

inline void HLRAlgo_PolyInternalData::DecPINod ()
{ myNbPINod--; }

//=======================================================================
//function : NbTData
//purpose  : 
//=======================================================================

inline Standard_Integer
HLRAlgo_PolyInternalData::NbTData () const
{ return myNbTData; }

//=======================================================================
//function : NbPISeg
//purpose  : 
//=======================================================================

inline Standard_Integer
HLRAlgo_PolyInternalData::NbPISeg () const
{ return myNbPISeg; }

//=======================================================================
//function : NbPINod
//purpose  : 
//=======================================================================

inline Standard_Integer
HLRAlgo_PolyInternalData::NbPINod () const
{ return myNbPINod; }

//=======================================================================
//function : Planar
//purpose  : 
//=======================================================================

inline Standard_Boolean
HLRAlgo_PolyInternalData::Planar () const
{ return myPlanar; }

//=======================================================================
//function : Planar
//purpose  : 
//=======================================================================

inline void
HLRAlgo_PolyInternalData::Planar (const Standard_Boolean B)
{ myPlanar = B; }

//=======================================================================
//function : IntOutL
//purpose  : 
//=======================================================================

inline Standard_Boolean
HLRAlgo_PolyInternalData::IntOutL () const
{ return myIntOutL; }

//=======================================================================
//function : IntOutL
//purpose  : 
//=======================================================================

inline void
HLRAlgo_PolyInternalData::IntOutL (const Standard_Boolean B)
{ myIntOutL = B; }

//=======================================================================
//function : TData
//purpose  : 
//=======================================================================

inline HLRAlgo_Array1OfTData &
HLRAlgo_PolyInternalData::TData () const
{ return myTData->ChangeArray1(); }

//=======================================================================
//function : PINod
//purpose  : 
//=======================================================================

inline HLRAlgo_Array1OfPINod &
HLRAlgo_PolyInternalData::PINod () const
{ return myPINod->ChangeArray1(); }

//=======================================================================
//function : PISeg
//purpose  : 
//=======================================================================

inline HLRAlgo_Array1OfPISeg &
HLRAlgo_PolyInternalData::PISeg () const
{ return myPISeg->ChangeArray1(); }
