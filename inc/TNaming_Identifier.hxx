// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TNaming_Identifier_HeaderFile
#define _TNaming_Identifier_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _TDF_Label_HeaderFile
#include <TDF_Label.hxx>
#endif
#ifndef _TopoDS_Shape_HeaderFile
#include <TopoDS_Shape.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _TNaming_NameType_HeaderFile
#include <TNaming_NameType.hxx>
#endif
#ifndef _Handle_TNaming_NamedShape_HeaderFile
#include <Handle_TNaming_NamedShape.hxx>
#endif
#ifndef _TNaming_ListOfNamedShape_HeaderFile
#include <TNaming_ListOfNamedShape.hxx>
#endif
#ifndef _TopTools_ListOfShape_HeaderFile
#include <TopTools_ListOfShape.hxx>
#endif
class TNaming_NamedShape;
class TDF_Label;
class TopoDS_Shape;
class TNaming_Localizer;



class TNaming_Identifier  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   TNaming_Identifier(const TDF_Label& Lab,const TopoDS_Shape& S,const TopoDS_Shape& Context,const Standard_Boolean Geom);
  
  Standard_EXPORT   TNaming_Identifier(const TDF_Label& Lab,const TopoDS_Shape& S,const Handle(TNaming_NamedShape)& ContextNS,const Standard_Boolean Geom);
  
  Standard_EXPORT     Standard_Boolean IsDone() const;
  
  Standard_EXPORT     TNaming_NameType Type() const;
  
  Standard_EXPORT     Standard_Boolean IsFeature() ;
  
  Standard_EXPORT     Handle_TNaming_NamedShape Feature() const;
  
  Standard_EXPORT     void InitArgs() ;
  
  Standard_EXPORT     Standard_Boolean MoreArgs() const;
  
  Standard_EXPORT     void NextArg() ;
  
  Standard_EXPORT     Standard_Boolean ArgIsFeature() const;
  
  Standard_EXPORT     Handle_TNaming_NamedShape FeatureArg() ;
  
  Standard_EXPORT     TopoDS_Shape ShapeArg() ;
  
  Standard_EXPORT     TopoDS_Shape ShapeContext() const;
  
  Standard_EXPORT     Handle_TNaming_NamedShape NamedShapeOfGeneration() const;
  
  Standard_EXPORT     void AncestorIdentification(TNaming_Localizer& Localizer,const TopoDS_Shape& Context) ;
  
  Standard_EXPORT     void PrimitiveIdentification(TNaming_Localizer& Localizer,const Handle(TNaming_NamedShape)& NS) ;
  
  Standard_EXPORT     void GeneratedIdentification(TNaming_Localizer& Localizer,const Handle(TNaming_NamedShape)& NS) ;
  
  Standard_EXPORT     void Identification(TNaming_Localizer& Localizer,const Handle(TNaming_NamedShape)& NS) ;





protected:





private:

  
  Standard_EXPORT     void Init(const TopoDS_Shape& Context) ;


TDF_Label myTDFAcces;
TopoDS_Shape myShape;
Standard_Boolean myOneOnly;
Standard_Boolean myDone;
Standard_Boolean myIsFeature;
TNaming_NameType myType;
Handle_TNaming_NamedShape myFeature;
TNaming_ListOfNamedShape myPrimitiveArgs;
TopTools_ListOfShape myShapeArgs;
Handle_TNaming_NamedShape myNSContext;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
