// Created on: 1995-06-21
// Created by: Christophe MARION
// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
//function : PolyHidingData
//purpose  : 
//=======================================================================

inline HLRAlgo_PolyHidingData::HLRAlgo_PolyHidingData ()
{}

//=======================================================================
//function : Set
//purpose  : 
//=======================================================================

inline void
HLRAlgo_PolyHidingData::Set (const Standard_Integer Index,
			     const Standard_Integer Minim,
			     const Standard_Integer Maxim,
			     const Standard_Real A,
			     const Standard_Real B,
			     const Standard_Real C,
			     const Standard_Real D)
{
  myMinMax[0] = Index;
  myMinMax[1] = Minim;
  myMinMax[2] = Maxim;
  myPlan[0]  = A;
  myPlan[1]  = B;
  myPlan[2]  = C;
  myPlan[3]  = D;
}

//=======================================================================
//function : IndexAndMinMax
//purpose  : 
//=======================================================================

inline Standard_Address
HLRAlgo_PolyHidingData::IndexAndMinMax() const
{ return (Standard_Address)myMinMax; }

//=======================================================================
//function : Plan
//purpose  : 
//=======================================================================

inline Standard_Address
HLRAlgo_PolyHidingData::Plan() const
{ return (Standard_Address)myPlan; }
