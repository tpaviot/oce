// Created by: Peter KURNEV
// Copyright (c) 2010-2012 OPEN CASCADE SAS
// Copyright (c) 2007-2010 CEA/DEN, EDF R&D, OPEN CASCADE
// Copyright (c) 2003-2007 OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN, CEDRAT,
//                         EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


//=======================================================================
//function : 
//purpose  : 
//=======================================================================
  inline BOPAlgo_WireEdgeSet::BOPAlgo_WireEdgeSet()
{
}
//=======================================================================
//function : 
//purpose  : 
//=======================================================================
  inline BOPAlgo_WireEdgeSet::BOPAlgo_WireEdgeSet(const Handle(NCollection_BaseAllocator)& theAllocator)
:
  myStartShapes(theAllocator),
  myShapes(theAllocator)
{
}
//=======================================================================
//function : ~
//purpose  : 
//=======================================================================
  inline BOPAlgo_WireEdgeSet::~BOPAlgo_WireEdgeSet()
{
}
//=======================================================================
//function : Clear
//purpose  : 
//=======================================================================
  inline void BOPAlgo_WireEdgeSet::Clear()
{
  myStartShapes.Clear();
  myShapes.Clear();
}
//=======================================================================
//function : SetFace
//purpose  : 
//=======================================================================
  inline void BOPAlgo_WireEdgeSet::SetFace(const TopoDS_Face& aF)
{
  myFace=aF;
}
//=======================================================================
//function : Face
//purpose  : 
//=======================================================================
  inline const TopoDS_Face& BOPAlgo_WireEdgeSet::Face()const 
{
  return myFace;
}
//=======================================================================
//function : AddStartElement
//purpose  : 
//=======================================================================
  inline void BOPAlgo_WireEdgeSet::AddStartElement(const TopoDS_Shape& aE)
{
  myStartShapes.Append(aE);
}
//=======================================================================
//function : StartElements
//purpose  : 
//=======================================================================
  inline const BOPCol_ListOfShape& BOPAlgo_WireEdgeSet::StartElements()const
{
  return myStartShapes;
}
//=======================================================================
//function : AddShape
//purpose  : 
//=======================================================================
  inline void BOPAlgo_WireEdgeSet::AddShape(const TopoDS_Shape& aW)
{
  myShapes.Append(aW);
}
//=======================================================================
//function : Shapes
//purpose  : 
//=======================================================================
  inline const BOPCol_ListOfShape& BOPAlgo_WireEdgeSet::Shapes()const
{
  return myShapes;
}
