// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _HLRBRep_ThePolyhedronToolOfInterCSurf_HeaderFile
#define _HLRBRep_ThePolyhedronToolOfInterCSurf_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_Bnd_HArray1OfBox_HeaderFile
#include <Handle_Bnd_HArray1OfBox.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_OutOfRange;
class HLRBRep_ThePolyhedronOfInterCSurf;
class Bnd_Box;
class Bnd_HArray1OfBox;
class gp_Pnt;



class HLRBRep_ThePolyhedronToolOfInterCSurf  {
public:

  DEFINE_STANDARD_ALLOC

  
      static const Bnd_Box& Bounding(const HLRBRep_ThePolyhedronOfInterCSurf& thePolyh) ;
  
      static const Handle_Bnd_HArray1OfBox& ComponentsBounding(const HLRBRep_ThePolyhedronOfInterCSurf& thePolyh) ;
  
      static  Standard_Real DeflectionOverEstimation(const HLRBRep_ThePolyhedronOfInterCSurf& thePolyh) ;
  
      static  Standard_Integer NbTriangles(const HLRBRep_ThePolyhedronOfInterCSurf& thePolyh) ;
  
      static  void Triangle(const HLRBRep_ThePolyhedronOfInterCSurf& thePolyh,const Standard_Integer Index,Standard_Integer& P1,Standard_Integer& P2,Standard_Integer& P3) ;
  
      static const gp_Pnt& Point(const HLRBRep_ThePolyhedronOfInterCSurf& thePolyh,const Standard_Integer Index) ;
  
      static  Standard_Integer TriConnex(const HLRBRep_ThePolyhedronOfInterCSurf& thePolyh,const Standard_Integer Triang,const Standard_Integer Pivot,const Standard_Integer Pedge,Standard_Integer& TriCon,Standard_Integer& OtherP) ;
  
      static  Standard_Boolean IsOnBound(const HLRBRep_ThePolyhedronOfInterCSurf& thePolyh,const Standard_Integer Index1,const Standard_Integer Index2) ;
  
      static  Standard_Real GetBorderDeflection(const HLRBRep_ThePolyhedronOfInterCSurf& thePolyh) ;
  
  Standard_EXPORT   static  void Dump(const HLRBRep_ThePolyhedronOfInterCSurf& thePolyh) ;





protected:





private:





};

#define ThePolyhedron HLRBRep_ThePolyhedronOfInterCSurf
#define ThePolyhedron_hxx <HLRBRep_ThePolyhedronOfInterCSurf.hxx>
#define IntCurveSurface_PolyhedronTool HLRBRep_ThePolyhedronToolOfInterCSurf
#define IntCurveSurface_PolyhedronTool_hxx <HLRBRep_ThePolyhedronToolOfInterCSurf.hxx>

#include <IntCurveSurface_PolyhedronTool.lxx>

#undef ThePolyhedron
#undef ThePolyhedron_hxx
#undef IntCurveSurface_PolyhedronTool
#undef IntCurveSurface_PolyhedronTool_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
