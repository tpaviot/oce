// Created on: 1993-03-16
// Created by: Denis PASCAL
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.



#include <Standard_NoMoreObject.hxx>
#include <Standard_NoSuchObject.hxx>

//=======================================================================
//function : GraphDS_EdgesIterator
//purpose  : 
//=======================================================================

GraphDS_EdgesIterator::GraphDS_EdgesIterator ()
{
}


//=======================================================================
//function : GraphDS_EdgesIterator
//purpose  : 
//=======================================================================

GraphDS_EdgesIterator::GraphDS_EdgesIterator 
   (const GraphDS_DirectedGraph& G)
{
  Initialize (G);
}


//=======================================================================
//function : GraphDS_EdgesIterator
//purpose  : 
//=======================================================================

GraphDS_EdgesIterator::GraphDS_EdgesIterator 
   (const GraphDS_DirectedGraph& G,
    const Handle(GraphDS_Vertex)& V) 
{
  Initialize (G,V);
}


//=======================================================================
//function : Initialize
//purpose  : 
//=======================================================================

void GraphDS_EdgesIterator::Initialize
   (const GraphDS_DirectedGraph& G)
{
  myEdges.Initialize(G.myEdges);
}


//=======================================================================
//function : Initialize
//purpose  : 
//=======================================================================

void GraphDS_EdgesIterator::Initialize
   (const GraphDS_DirectedGraph&,
    const Handle(GraphDS_Vertex)& V) 
{
  myEdges.Initialize(V->GetEdges());
}


//=======================================================================
//function : More
//purpose  : 
//=======================================================================

Standard_Boolean GraphDS_EdgesIterator::More () const 
{
  return myEdges.More();
}


//=======================================================================
//function : Next
//purpose  : 
//=======================================================================

void GraphDS_EdgesIterator::Next ()  
{
  myEdges.Next();
}



//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

const Handle(GraphDS_Edge)& GraphDS_EdgesIterator::Value () const 
{ 
  return  *((Handle(GraphDS_Edge)*)& myEdges.Key());
  //return Handle(GraphDS_Edge)::DownCast(myEdges.Key());
}






