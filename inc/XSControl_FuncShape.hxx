// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _XSControl_FuncShape_HeaderFile
#define _XSControl_FuncShape_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_XSControl_WorkSession_HeaderFile
#include <Handle_XSControl_WorkSession.hxx>
#endif
#ifndef _Handle_TopTools_HSequenceOfShape_HeaderFile
#include <Handle_TopTools_HSequenceOfShape.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class XSControl_WorkSession;
class TopTools_HSequenceOfShape;
class TCollection_AsciiString;


//! Defines additionnal commands for XSControl to : <br>
//!           - control of initialisation (xinit, xnorm, newmodel) <br>
//!           - analyse of the result of a transfer (recorded in a <br>
//!             TransientProcess for Read, FinderProcess for Write) : <br>
//!             statistics, various lists (roots,complete,abnormal), what <br>
//!             about one specific entity, producing a model with the <br>
//!             abnormal result <br>
//! <br>
//!           This appendix of XSControl is compiled separately to distinguish <br>
//!           basic features from user callable forms <br>
class XSControl_FuncShape  {
public:

  DEFINE_STANDARD_ALLOC

  //! Defines and loads all functions which work on shapes for XSControl (as ActFunc) <br>
  Standard_EXPORT   static  void Init() ;
  //! Analyses a name as designating Shapes from a Vars or from <br>
//!           XSTEP transfer (last Transfer on Reading). <name> can be : <br>
//!           "*" : all the root shapes produced by last Transfer (Read) <br>
//!                 i.e. considers roots of the TransientProcess <br>
//!           a name : a name of a variable DRAW <br>
//! <br>
//!           Returns the count of designated Shapes. Their list is put in <br>
//!           <list>. If <list> is null, it is firstly created. Then it is <br>
//!           completed (Append without Clear) by the Shapes found <br>
//!           Returns 0 if no Shape could be found <br>
  Standard_EXPORT   static  Standard_Integer MoreShapes(const Handle(XSControl_WorkSession)& session,Handle(TopTools_HSequenceOfShape)& list,const Standard_CString name) ;
  //! Analyses given file name and variable name, with a default <br>
//!           name for variables. Returns resulting file name and variable <br>
//!           name plus status "file to read"(True) or "already read"(False) <br>
//!           In the latter case, empty resfile means no file available <br>
//! <br>
//!           If <file> is null or empty or equates ".", considers Session <br>
//!             and returned status is False <br>
//!           Else, returns resfile = file and status is True <br>
//!           If <var> is neither null nor empty, resvar = var <br>
//!           Else, the root part of <resfile> is considered, if defined <br>
//!           Else, <def> is taken <br>
  Standard_EXPORT   static  Standard_Boolean FileAndVar(const Handle(XSControl_WorkSession)& session,const Standard_CString file,const Standard_CString var,const Standard_CString def,TCollection_AsciiString& resfile,TCollection_AsciiString& resvar) ;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
