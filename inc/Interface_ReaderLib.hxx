// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Interface_ReaderLib_HeaderFile
#define _Interface_ReaderLib_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_Interface_NodeOfReaderLib_HeaderFile
#include <Handle_Interface_NodeOfReaderLib.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
#ifndef _Handle_Interface_ReaderModule_HeaderFile
#include <Handle_Interface_ReaderModule.hxx>
#endif
#ifndef _Handle_Interface_Protocol_HeaderFile
#include <Handle_Interface_Protocol.hxx>
#endif
#ifndef _Handle_Interface_GlobalNodeOfReaderLib_HeaderFile
#include <Handle_Interface_GlobalNodeOfReaderLib.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class Interface_NodeOfReaderLib;
class Standard_NoSuchObject;
class Standard_Transient;
class Interface_ReaderModule;
class Interface_Protocol;
class Interface_GlobalNodeOfReaderLib;



class Interface_ReaderLib  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   static  void SetGlobal(const Handle(Interface_ReaderModule)& amodule,const Handle(Interface_Protocol)& aprotocol) ;
  
  Standard_EXPORT   Interface_ReaderLib(const Handle(Interface_Protocol)& aprotocol);
  
  Standard_EXPORT   Interface_ReaderLib();
  
  Standard_EXPORT     void AddProtocol(const Handle(Standard_Transient)& aprotocol) ;
  
  Standard_EXPORT     void Clear() ;
  
  Standard_EXPORT     void SetComplete() ;
  
  Standard_EXPORT     Standard_Boolean Select(const Handle(Standard_Transient)& obj,Handle(Interface_ReaderModule)& module,Standard_Integer& CN) const;
  
  Standard_EXPORT     void Start() ;
  
  Standard_EXPORT     Standard_Boolean More() const;
  
  Standard_EXPORT     void Next() ;
  
  Standard_EXPORT    const Handle_Interface_ReaderModule& Module() const;
  
  Standard_EXPORT    const Handle_Interface_Protocol& Protocol() const;





protected:





private:



Handle_Interface_NodeOfReaderLib thelist;
Handle_Interface_NodeOfReaderLib thecurr;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
