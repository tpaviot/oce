// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _DBRep_HeaderFile
#define _DBRep_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _TopAbs_ShapeEnum_HeaderFile
#include <TopAbs_ShapeEnum.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class TopoDS_Shape;
class Draw_Interpretor;
class DBRep_Edge;
class DBRep_ListOfEdge;
class DBRep_Face;
class DBRep_ListOfFace;
class DBRep_HideData;
class DBRep_ListOfHideData;
class DBRep_DrawableShape;
class DBRep_IsoBuilder;
class DBRep_ListNodeOfListOfEdge;
class DBRep_ListIteratorOfListOfEdge;
class DBRep_ListNodeOfListOfFace;
class DBRep_ListIteratorOfListOfFace;
class DBRep_ListNodeOfListOfHideData;
class DBRep_ListIteratorOfListOfHideData;


//! Used to display BRep objects  using the DrawTrSurf <br>
//!          package. <br>
//!  The DrawableShape is a Display object build from a <br>
//!          Shape. <br>
//!  Provides methods to manage a directory of named shapes. <br>
//!          Provides a set of Draw commands for Shapes. <br>
class DBRep  {
public:

  DEFINE_STANDARD_ALLOC

  //! Creation of isoparametric curves. <br>//! Implements ProgressIndicator for DRAW <br>//! Sets  <S> in the  variable  <Name>.  Overwrite the <br>
//!          variable if already set. <br>
  Standard_EXPORT   static  void Set(const Standard_CString Name,const TopoDS_Shape& S) ;
  //! Returns the shape in the variable  <Name>. Returns <br>
//!          a null shape if the variable is not set or  not of <br>
//!          the given <Typ>.  If <Complain> is  True a message <br>
//!          is printed on cout if the variable is not set. <br>
  Standard_EXPORT   static  TopoDS_Shape Get(Standard_CString& Name,const TopAbs_ShapeEnum Typ = TopAbs_SHAPE,const Standard_Boolean Complain = Standard_False) ;
  //! Defines the basic commands. <br>
  Standard_EXPORT   static  void BasicCommands(Draw_Interpretor& theCommands) ;
  //! True if HLR, False if wireframe. <br>
  Standard_EXPORT   static  Standard_Boolean HLRMode() ;
  //! True if display Rg1Lines. <br>
  Standard_EXPORT   static  Standard_Boolean Rg1Mode() ;
  //! True if display RgNLines. <br>
  Standard_EXPORT   static  Standard_Boolean RgNMode() ;
  //! True if display HiddenLines. <br>
  Standard_EXPORT   static  Standard_Boolean HidMode() ;
  //! discretisation angle for edges. <br>
  Standard_EXPORT   static  Standard_Real HLRAngle() ;
  //! number of iso in U and V <br>
  Standard_EXPORT   static  Standard_Integer NbIsos() ;
  //! discretisation number of points for curves <br>//! set progress indicator <br>//! get progress indicator <br>
  Standard_EXPORT   static  Standard_Integer Discretisation() ;





protected:





private:




friend class DBRep_Edge;
friend class DBRep_ListOfEdge;
friend class DBRep_Face;
friend class DBRep_ListOfFace;
friend class DBRep_HideData;
friend class DBRep_ListOfHideData;
friend class DBRep_DrawableShape;
friend class DBRep_IsoBuilder;
friend class DBRep_ListNodeOfListOfEdge;
friend class DBRep_ListIteratorOfListOfEdge;
friend class DBRep_ListNodeOfListOfFace;
friend class DBRep_ListIteratorOfListOfFace;
friend class DBRep_ListNodeOfListOfHideData;
friend class DBRep_ListIteratorOfListOfHideData;

};





// other Inline functions and methods (like "C++: function call" methods)


#endif
