// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IntImpParGen_HeaderFile
#define _IntImpParGen_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _IntRes2d_Position_HeaderFile
#include <IntRes2d_Position.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class gp_Vec2d;
class IntRes2d_Transition;
class IntRes2d_Domain;
class gp_Pnt2d;
class IntImpParGen_ImpTool;
class IntImpParGen_ParTool;
class IntImpParGen_ImpParTool;
class IntImpParGen_Intersector;
class IntImpParGen_MyImpParTool;


//! Gives a generic algorithm to intersect Implicit Curves <br>
//!          and Bounded Parametric Curves. <br>
//! <br>
//!  Level: Internal <br>
//! <br>
//! All the methods of all the classes are Internal. <br>
class IntImpParGen  {
public:

  DEFINE_STANDARD_ALLOC

  //! Template class for an implicit  curve. <br>//! Template class for a tool on a parameterised curve. <br>//! Math function, instantiated inside the Intersector. <br>//! Tool used by the package IntCurve and IntImpParGen <br>
  Standard_EXPORT   static  void DetermineTransition(const IntRes2d_Position Pos1,gp_Vec2d& Tan1,const gp_Vec2d& Norm1,IntRes2d_Transition& Trans1,const IntRes2d_Position Pos2,gp_Vec2d& Tan2,const gp_Vec2d& Norm2,IntRes2d_Transition& Trans2,const Standard_Real Tol) ;
  
  Standard_EXPORT   static  Standard_Boolean DetermineTransition(const IntRes2d_Position Pos1,gp_Vec2d& Tan1,IntRes2d_Transition& Trans1,const IntRes2d_Position Pos2,gp_Vec2d& Tan2,IntRes2d_Transition& Trans2,const Standard_Real Tol) ;
  
  Standard_EXPORT   static  void DeterminePosition(IntRes2d_Position& Pos1,const IntRes2d_Domain& Dom1,const gp_Pnt2d& P1,const Standard_Real Tol) ;
  
  Standard_EXPORT   static  Standard_Real NormalizeOnDomain(Standard_Real& Par1,const IntRes2d_Domain& Dom1) ;





protected:





private:




friend class IntImpParGen_ImpTool;
friend class IntImpParGen_ParTool;
friend class IntImpParGen_ImpParTool;
friend class IntImpParGen_Intersector;
friend class IntImpParGen_MyImpParTool;

};





// other Inline functions and methods (like "C++: function call" methods)


#endif
