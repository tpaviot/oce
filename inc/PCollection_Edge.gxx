// Created on: 1991-05-30
// Created by: Denis PASCAL
// Copyright (c) 1991-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

//		<dp>
// Revised by:  Mireille MERCIEN
//              Sep,7 1992

#include <Standard_NoMoreObject.hxx>
#include <Standard_NoSuchObject.hxx>

//---------------------------------------------------------------------------
// Constructor
//---------------------------------------------------------------------------
PCollection_Edge::
     PCollection_Edge(const Handle(PCollection_Vertex)& Source, 
                     const Handle(PCollection_Vertex)& Destination, 
                     const Attribute& Value) 
{
  MyAttribute   = Value;
  MySource      = Source;
  MyDestination = Destination;
}

//---------------------------------------------------------------------------
// GetAttribute
//---------------------------------------------------------------------------
Attribute PCollection_Edge::GetAttribute () const 
{
  return MyAttribute;
}

//---------------------------------------------------------------------------
// SetAttribute
//---------------------------------------------------------------------------
void PCollection_Edge::SetAttribute (const Attribute& Value) 
{
  MyAttribute = Value;
}

//---------------------------------------------------------------------------
// Source
//---------------------------------------------------------------------------
Handle(PCollection_Vertex) PCollection_Edge::Source () const 
{
  return MySource;
}

//---------------------------------------------------------------------------
// Destination
//---------------------------------------------------------------------------
Handle(PCollection_Vertex) PCollection_Edge::Destination () const 
{
  return MyDestination;
}


//---------------------------------------------------------------------------
// SetSource
//---------------------------------------------------------------------------
void PCollection_Edge::SetSource (const Handle(PCollection_Vertex)& V)  
{
  MySource = V;
}

//---------------------------------------------------------------------------
// SetDestination
//---------------------------------------------------------------------------
void PCollection_Edge::SetDestination (const Handle(PCollection_Vertex)& V) 
{
  MyDestination = V;
}

//---------------------------------------------------------------------------
// Reverse
//---------------------------------------------------------------------------
void PCollection_Edge::Reverse () 
{
  Handle(PCollection_Edge) me = this;
  MyDestination->RemoveBackEdge(me);
  MySource->RemoveFrontEdge(me);
  MyDestination->AddFrontEdge(me);
  MySource->AddBackEdge(me);
  Handle (PCollection_Vertex) temp = MyDestination;
  MyDestination = MySource;
  MySource = temp;
}

//---------------------------------------------------------------------------
// IsLoop
//---------------------------------------------------------------------------
Boolean PCollection_Edge::IsLoop () const 
{
  return (MyDestination == MySource);
}








