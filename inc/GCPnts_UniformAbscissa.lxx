// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <StdFail_NotDone.hxx>
#include <TColStd_HArray1OfReal.hxx>

inline Standard_Boolean GCPnts_UniformAbscissa::IsDone () const
{
  return myDone;
}

inline Standard_Real GCPnts_UniformAbscissa::Abscissa () const
{ 
  StdFail_NotDone_Raise_if(!myDone, 
                             "GCPnts_UniformAbscissa::Abscissa()");
  return myAbscissa;
}

inline Standard_Integer GCPnts_UniformAbscissa::NbPoints () const
{ 
  StdFail_NotDone_Raise_if(!myDone, 
			 "GCPnts_UniformAbscissa::NbPoints()");
  return myNbPoints;
}


inline Standard_Real GCPnts_UniformAbscissa::Parameter
                      (const Standard_Integer Index) const
{ 
  StdFail_NotDone_Raise_if(!myDone, 
			 "GCPnts_UniformAbscissa::Parameter()");
  return myParams->Value(Index) ;
}






