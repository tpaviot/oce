// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

//#include <Interface_JaggedArray.ixx>

Interface_JaggedArray::Interface_JaggedArray
  (const Standard_Integer low, const Standard_Integer up)
: thelist (low,up)  {  Handle(Standard_Transient) nulo; thelist.Init(nulo);  }

    Standard_Integer  Interface_JaggedArray::Lower () const
      {  return thelist.Lower();  }

    Standard_Integer  Interface_JaggedArray::Upper () const
      {  return thelist.Upper();  }

    Standard_Integer  Interface_JaggedArray::Length () const
      {  return thelist.Length();  }

    void Interface_JaggedArray::SetValue
  (const Standard_Integer num, const Handle(TheKey)& val)
      {  thelist.SetValue(num,val);  }

    Handle(TheKey)  Interface_JaggedArray::Value
  (const Standard_Integer num) const
      {  return Handle(TheKey)::DownCast(thelist.Value(num));  }

//    Handle(TheKey)&  Interface_JaggedArray::ChangeValue
//  (const Standard_Integer num)
//      {  return thelist.ChangeValue(num);  }
