// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Contap_TheArcFunctionOfContour_HeaderFile
#define _Contap_TheArcFunctionOfContour_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_Adaptor2d_HCurve2d_HeaderFile
#include <Handle_Adaptor2d_HCurve2d.hxx>
#endif
#ifndef _Handle_Adaptor3d_HSurface_HeaderFile
#include <Handle_Adaptor3d_HSurface.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Contap_TFunction_HeaderFile
#include <Contap_TFunction.hxx>
#endif
#ifndef _gp_Dir_HeaderFile
#include <gp_Dir.hxx>
#endif
#ifndef _gp_Pnt_HeaderFile
#include <gp_Pnt.hxx>
#endif
#ifndef _TColgp_SequenceOfPnt_HeaderFile
#include <TColgp_SequenceOfPnt.hxx>
#endif
#ifndef _IntSurf_Quadric_HeaderFile
#include <IntSurf_Quadric.hxx>
#endif
#ifndef _math_FunctionWithDerivative_HeaderFile
#include <math_FunctionWithDerivative.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class Adaptor2d_HCurve2d;
class Adaptor3d_HSurface;
class Contap_HCurve2dTool;
class Adaptor3d_HSurfaceTool;
class Contap_TheSurfPropsOfContour;
class Contap_HContTool;
class gp_Dir;
class gp_Pnt;
class IntSurf_Quadric;



class Contap_TheArcFunctionOfContour  : public math_FunctionWithDerivative {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   Contap_TheArcFunctionOfContour();
  
  Standard_EXPORT     void Set(const Handle(Adaptor3d_HSurface)& S) ;
  
        void Set(const gp_Dir& Direction) ;
  
        void Set(const gp_Dir& Direction,const Standard_Real Angle) ;
  
        void Set(const gp_Pnt& Eye) ;
  
        void Set(const gp_Pnt& Eye,const Standard_Real Angle) ;
  
        void Set(const Handle(Adaptor2d_HCurve2d)& A) ;
  
  Standard_EXPORT     Standard_Boolean Value(const Standard_Real X,Standard_Real& F) ;
  
  Standard_EXPORT     Standard_Boolean Derivative(const Standard_Real X,Standard_Real& D) ;
  
  Standard_EXPORT     Standard_Boolean Values(const Standard_Real X,Standard_Real& F,Standard_Real& D) ;
  
  Standard_EXPORT     Standard_Integer NbSamples() const;
  
  Standard_EXPORT   virtual  Standard_Integer GetStateNumber() ;
  
       const gp_Pnt& Valpoint(const Standard_Integer Index) const;
  
  Standard_EXPORT    const IntSurf_Quadric& Quadric() const;





protected:





private:



Handle_Adaptor2d_HCurve2d myArc;
Handle_Adaptor3d_HSurface mySurf;
Standard_Real myMean;
Contap_TFunction myType;
gp_Dir myDir;
Standard_Real myCosAng;
gp_Pnt myEye;
gp_Pnt solpt;
TColgp_SequenceOfPnt seqpt;
IntSurf_Quadric myQuad;


};

#define TheArc Handle_Adaptor2d_HCurve2d
#define TheArc_hxx <Adaptor2d_HCurve2d.hxx>
#define TheSurface Handle_Adaptor3d_HSurface
#define TheSurface_hxx <Adaptor3d_HSurface.hxx>
#define TheArcTool Contap_HCurve2dTool
#define TheArcTool_hxx <Contap_HCurve2dTool.hxx>
#define TheSurfaceTool Adaptor3d_HSurfaceTool
#define TheSurfaceTool_hxx <Adaptor3d_HSurfaceTool.hxx>
#define TheSurfProps Contap_TheSurfPropsOfContour
#define TheSurfProps_hxx <Contap_TheSurfPropsOfContour.hxx>
#define TheContTool Contap_HContTool
#define TheContTool_hxx <Contap_HContTool.hxx>
#define Contap_ArcFunction Contap_TheArcFunctionOfContour
#define Contap_ArcFunction_hxx <Contap_TheArcFunctionOfContour.hxx>

#include <Contap_ArcFunction.lxx>

#undef TheArc
#undef TheArc_hxx
#undef TheSurface
#undef TheSurface_hxx
#undef TheArcTool
#undef TheArcTool_hxx
#undef TheSurfaceTool
#undef TheSurfaceTool_hxx
#undef TheSurfProps
#undef TheSurfProps_hxx
#undef TheContTool
#undef TheContTool_hxx
#undef Contap_ArcFunction
#undef Contap_ArcFunction_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
