// Created on: 1999-12-16
// Created by: Atelier CAS2000
// Copyright (c) 1999-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

inline void IntPatch_PrmPrmIntersection_T3Bits::Add(const Standard_Integer t)
{
  ((Standard_Integer *) p)[t>>5] |= (1<<(((unsigned int)t)&31));
}

inline Standard_Integer IntPatch_PrmPrmIntersection_T3Bits::Val(const Standard_Integer t) const
{
  return (((Standard_Integer *) p)[t>>5] & (1<<(((unsigned int)t)&31)));
}

inline void IntPatch_PrmPrmIntersection_T3Bits::Raz(const Standard_Integer t)
{
  ((Standard_Integer *) p)[t>>5] &= ~(1<<(((unsigned int)t)&31));
}
