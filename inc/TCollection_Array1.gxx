// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <Standard_DimensionMismatch.hxx>


//=======================================================================
//function : Init
//purpose  : 
//=======================================================================

void TCollection_Array1::Init (const Array1Item& V) {
  Array1Item* p = &ChangeValue(myLowerBound);
  const Standard_Integer n = Length();
  for(Standard_Integer i = 0; i < n; i++) {
    p[i] = V;
  }
}

//=======================================================================
//function : Assign
//purpose  : 
//=======================================================================

const TCollection_Array1& TCollection_Array1::Assign 
  (const TCollection_Array1& Right)
{
  if (&Right != this) {
    Standard_Integer max = Length() ;
    Standard_DimensionMismatch_Raise_if(max != Right.Length(),
					"DimensionMismatch in Array1::Operator=");
    
    Array1Item* p       = &ChangeValue(myLowerBound);
    const Array1Item* q = &Right.Value(Right.Lower());
    for (Standard_Integer i=0; i<max; i++){
      *p++ = *q++;
    }
  }
  return *this;
}





