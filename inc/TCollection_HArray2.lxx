// Created on: 1993-03-11
// Created by: Remi LEQUETTE
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
//function : TCollection_HArray2
//purpose  : 
//=======================================================================

inline TCollection_HArray2::TCollection_HArray2 (const Standard_Integer R1, 
                                                 const Standard_Integer R2,
                                                 const Standard_Integer C1, 
                                                 const Standard_Integer C2) :
       myArray(R1,R2,C1,C2)
{}


//=======================================================================
//function : TCollection_HArray2
//purpose  : 
//=======================================================================

inline TCollection_HArray2::TCollection_HArray2 (const Standard_Integer R1, 
                                                 const Standard_Integer R2,
                                                 const Standard_Integer C1, 
                                                 const Standard_Integer C2,
                                                 const ItemHArray2& V) :
       myArray(R1,R2,C1,C2)
{myArray.Init(V);}

//=======================================================================
//function : TCollection_HArray2
//purpose  : 
//=======================================================================

inline void TCollection_HArray2::Init(const ItemHArray2& V)
{ myArray.Init(V);}

//=======================================================================
//function : ColLength
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_HArray2::ColLength () const
{
   return myArray.ColLength();
}

//=======================================================================
//function : LowerCol
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_HArray2::LowerCol () const
{
   return myArray.LowerCol();
}

//=======================================================================
//function : LowerRow
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_HArray2::LowerRow () const
{
   return myArray.LowerRow();	
}

//=======================================================================
//function : RowLength
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_HArray2::RowLength () const
{
   return myArray.RowLength();
}

//=======================================================================
//function : UpperRow
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_HArray2::UpperRow () const
{
   return myArray.UpperRow();
}

//=======================================================================
//function : UpperCol
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_HArray2::UpperCol () const
{
   return myArray.UpperCol();
}

//=======================================================================
//function : SetValue
//purpose  : 
//=======================================================================

inline void TCollection_HArray2::SetValue ( const Standard_Integer Row,
					   const Standard_Integer Col,
					   const ItemHArray2& Value )
{
  myArray.SetValue(Row,Col,Value);
}

//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

inline const ItemHArray2& TCollection_HArray2::Value(const Standard_Integer Row,
                                                     const Standard_Integer Col) const
{
  return myArray(Row,Col);
}

//=======================================================================
//function : ChangeValue
//purpose  : 
//=======================================================================

inline ItemHArray2& TCollection_HArray2::ChangeValue(const Standard_Integer Row,
                                                     const Standard_Integer Col)
{
  return myArray(Row,Col);
}


//=======================================================================
//function : Array2
//purpose  : 
//=======================================================================

inline const TheArray2& TCollection_HArray2::Array2() const
{
  return myArray;
}

//=======================================================================
//function : ChangeArray2
//purpose  : 
//=======================================================================

inline TheArray2& TCollection_HArray2::ChangeArray2()
{
  return myArray;
}
