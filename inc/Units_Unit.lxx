// Created on: 1992-06-24
// Created by: Gilles DEBARBOUILLE
// Copyright (c) 1992-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <stdio.h>
#include <string.h>
#include <Standard_Stream.hxx>
#include <TCollection_HAsciiString.hxx>
#include <TCollection_AsciiString.hxx>

//=======================================================================
//function : Name
//purpose  : 
//=======================================================================

inline TCollection_AsciiString Units_Unit::Name() const
{
  return thename->String();
}

//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

inline Standard_Real Units_Unit::Value() const
{
  return thevalue;
}

//=======================================================================
//function : Quantity
//purpose  : 
//=======================================================================

inline Handle(Units_Quantity) Units_Unit::Quantity() const
{
  return thequantity;
}

//=======================================================================
//function : SymbolsSequence
//purpose  : 
//=======================================================================

inline Handle(TColStd_HSequenceOfHAsciiString) Units_Unit::SymbolsSequence() const
{
  return thesymbolssequence;
}

//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

inline void Units_Unit::Value(const Standard_Real avalue)
{
  thevalue = avalue;
}

//=======================================================================
//function : Quantity
//purpose  : 
//=======================================================================

inline void Units_Unit::Quantity(const Handle(Units_Quantity)& aquantity)
{
  thequantity = aquantity;
}
