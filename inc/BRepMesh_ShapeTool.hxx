// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepMesh_ShapeTool_HeaderFile
#define _BRepMesh_ShapeTool_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _TopExp_Explorer_HeaderFile
#include <TopExp_Explorer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _TopAbs_Orientation_HeaderFile
#include <TopAbs_Orientation.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _gp_Pnt_HeaderFile
#include <gp_Pnt.hxx>
#endif
#ifndef _Handle_Poly_Triangulation_HeaderFile
#include <Handle_Poly_Triangulation.hxx>
#endif
class Standard_NoSuchObject;
class TopoDS_Shape;
class TopoDS_Face;
class TopoDS_Edge;
class TopoDS_Vertex;
class Bnd_Box;
class gp_Pnt2d;
class BRepAdaptor_Curve;
class gp_Pnt;
class Poly_Triangulation;



class BRepMesh_ShapeTool  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   BRepMesh_ShapeTool();
  
        void Init(const TopoDS_Shape& S) ;
  
        Standard_Boolean MoreFace() ;
  
        void NextFace() ;
  
       const TopoDS_Face& CurrentFace() ;
  
        void Init(const TopoDS_Face& F) ;
  
        Standard_Boolean MoreEdge() ;
  
        void NextEdge() ;
  
       const TopoDS_Edge& CurrentEdge() ;
  
        void Init(const TopoDS_Edge& E) ;
  
  Standard_EXPORT     Standard_Boolean MoreInternalVertex() ;
  
        void NextInternalVertex() ;
  
       const TopoDS_Vertex& CurrentInternalVertex() ;
  
      static  TopAbs_Orientation Orientation(const TopoDS_Face& F) ;
  
      static  TopAbs_Orientation Orientation(const TopoDS_Edge& E) ;
  
  Standard_EXPORT   static  Bnd_Box Bound(const TopoDS_Face& F) ;
  
  Standard_EXPORT   static  Bnd_Box Bound(const TopoDS_Edge& E) ;
  
  Standard_EXPORT   static  TopoDS_Vertex FirstVertex(const TopoDS_Edge& E) ;
  
  Standard_EXPORT   static  TopoDS_Vertex LastVertex(const TopoDS_Edge& E) ;
  //! If there is  not First or Last vertex (infinite or <br>
//!          semi-infinite edge) return null shapes. <br>
  Standard_EXPORT   static  void Vertices(const TopoDS_Edge& E,TopoDS_Vertex& Vfirst,TopoDS_Vertex& Vlast) ;
  
      static  void Range(const TopoDS_Edge& E,const TopoDS_Face& F,Standard_Real& wFirst,Standard_Real& wLast) ;
  
      static  void UVPoints(const TopoDS_Edge& E,const TopoDS_Face& F,gp_Pnt2d& uvFirst,gp_Pnt2d& uvLast) ;
  
      static  Standard_Boolean Degenerated(const TopoDS_Edge& E) ;
  
      static  Standard_Real Tolerance(const TopoDS_Vertex& V) ;
  
      static  Standard_Real Parameter(const TopoDS_Vertex& V,const TopoDS_Edge& E,const TopoDS_Face& F) ;
  
  Standard_EXPORT   static  void Parameters(const TopoDS_Edge& E,const TopoDS_Face& F,const Standard_Real W,gp_Pnt2d& UV) ;
  
  Standard_EXPORT   static  void Locate(const BRepAdaptor_Curve& C,const Standard_Real W,Standard_Real& WFound,const gp_Pnt& p3d,gp_Pnt2d& UV) ;
  
      static  gp_Pnt Pnt(const TopoDS_Vertex& V) ;
  
  Standard_EXPORT   static  void AddInFace(const TopoDS_Face& F,Handle(Poly_Triangulation)& T) ;





protected:





private:



TopExp_Explorer theFIterator;
TopExp_Explorer theEIterator;
TopExp_Explorer theVIterator;


};


#include <BRepMesh_ShapeTool.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
