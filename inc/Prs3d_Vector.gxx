// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

#include <Graphic3d_Group.hxx>
#include <Graphic3d_AspectMarker3d.hxx>
#include <Graphic3d_AspectLine3d.hxx>
#include <Prs3d_Arrow.hxx>
#include <gp_Dir.hxx>
#include <Prs3d_LineAspect.hxx>
#include <gp_Vec.hxx>
#include <gp_Pnt.hxx>
#include <Graphic3d_ArrayOfSegments.hxx>


void Prs3d_Vector::Add(const Handle(Prs3d_Presentation)& aPresentation,
		       const anyVector&                  aVector,
		       const Handle(Prs3d_Drawer)&       aDrawer ) 
{
  gp_Pnt Pnt = VectorTool::Location(aVector);
  gp_Vec Vec = VectorTool::Vec(aVector);
  gp_Pnt Pnt2 = Pnt.Translated(Vec);

  Handle(Graphic3d_Group) G = Prs3d_Root::CurrentGroup(aPresentation);
  G->SetPrimitivesAspect(aDrawer->VectorAspect()->Aspect());

  Quantity_Color Col; Aspect_TypeOfLine Tol; Standard_Real W;
  aDrawer->VectorAspect()->Aspect()->Values(Col,Tol,W);

//
// Trace d'une petite sphere au debut du vecteur:
//
  Quantity_Length x1,y1,z1;
  Pnt.Coord(x1,y1,z1);
  Graphic3d_Vertex VTX(x1,y1,z1);
  Handle(Graphic3d_AspectMarker3d) Asp = new Graphic3d_AspectMarker3d(Aspect_TOM_BALL,Col,1.);
  G->SetPrimitivesAspect(Asp);
  G->Marker(VTX);

  Handle(Graphic3d_ArrayOfSegments) aPrims = new Graphic3d_ArrayOfSegments(2);
  aPrims->AddVertex(Pnt);
  aPrims->AddVertex(Pnt2);
  G->AddPrimitiveArray(aPrims);

  Prs3d_Arrow::Draw(aPresentation,Pnt2,gp_Dir(Vec),M_PI/180.*10.,Vec.Magnitude()/10.);
}
