// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//------------------------------------------------------------------------
//  HashCode
//------------------------------------------------------------------------
inline Standard_Integer HashCode(const TCollection_ExtendedString& theString,
                                 const Standard_Integer theUpper)
{
  return TCollection_ExtendedString::HashCode(theString, theUpper);
}

//------------------------------------------------------------------------
//  HashCode
//------------------------------------------------------------------------
inline Standard_Integer 
  TCollection_ExtendedString::HashCode (const TCollection_ExtendedString& theString,
                                        const Standard_Integer theUpper)
{
  return ::HashCode(theString.ToExtString(), theUpper);
}

//------------------------------------------------------------------------
//  IsEqual
//------------------------------------------------------------------------
inline Standard_Boolean
  TCollection_ExtendedString::IsEqual (const TCollection_ExtendedString& theString1,
                                       const TCollection_ExtendedString& theString2)
{
  return theString1.IsEqual(theString2);
}

//------------------------------------------------------------------------
//  IsEmpty
//------------------------------------------------------------------------
inline Standard_Boolean TCollection_ExtendedString::IsEmpty() const
{
  return mylength == 0;
}
