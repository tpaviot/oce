// Created on: 2008-01-24
// Created by: Sergey ZARITCHNY
// Copyright (c) 2008-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <TColStd_HPackedMapOfInteger.hxx>
//=======================================================================
//function : GetHMap
//purpose  : 
//=======================================================================
inline const Handle(TColStd_HPackedMapOfInteger)&  TDataStd_IntPackedMap::GetHMap () const
{
  return myMap;
}

//=======================================================================
//function : 
//purpose  : 
//=======================================================================

inline const TColStd_PackedMapOfInteger&  TDataStd_IntPackedMap::GetMap () const
{
  return  myMap->Map();
}

//=======================================================================
//function : IsEmpty
//purpose  : 
//=======================================================================
inline Standard_Boolean  TDataStd_IntPackedMap::IsEmpty() const
{
  return myMap->Map().IsEmpty();
}

//=======================================================================
//function : Extent
//purpose  : 
//=======================================================================
inline Standard_Integer TDataStd_IntPackedMap::Extent() const
{
  return myMap->Map().Extent();
}

//=======================================================================
//function : RemoveMap
//purpose  : 
//=======================================================================
inline void TDataStd_IntPackedMap::RemoveMap(void) 
{
  myMap.Nullify(); 
}


//=======================================================================
//function : SetDelta
//purpose  : 
//=======================================================================
inline void TDataStd_IntPackedMap::SetDelta(const Standard_Boolean isDelta) 
{
  myIsDelta = isDelta;
}
//=======================================================================
//function : GetDelta
//purpose  : 
//=======================================================================
inline Standard_Boolean TDataStd_IntPackedMap::GetDelta(void)  const
{
  return myIsDelta;
}
