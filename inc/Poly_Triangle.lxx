// Created on: 1995-03-06
// Created by: Laurent PAINNOT
// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <Standard_OutOfRange.hxx>

//=======================================================================
//function : Set
//purpose  : 
//=======================================================================

inline void Poly_Triangle::Set(const Standard_Integer Index, const Standard_Integer Node)
{
  Standard_OutOfRange_Raise_if(Index < 1 || Index > 3,NULL);
  myNodes[Index-1] = Node;
}

//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

inline Standard_Integer Poly_Triangle::Value(const Standard_Integer Index) const 
{
  Standard_OutOfRange_Raise_if(Index < 1 || Index > 3,NULL);
  return myNodes[Index-1];
}

//=======================================================================
//function : ChangeValue
//purpose  : 
//=======================================================================

inline Standard_Integer& Poly_Triangle::ChangeValue
(const Standard_Integer Index)
{
  Standard_OutOfRange_Raise_if(Index < 1 || Index > 3,NULL);
  return myNodes[Index-1];
}

