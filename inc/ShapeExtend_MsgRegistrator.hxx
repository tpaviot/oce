// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _ShapeExtend_MsgRegistrator_HeaderFile
#define _ShapeExtend_MsgRegistrator_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_ShapeExtend_MsgRegistrator_HeaderFile
#include <Handle_ShapeExtend_MsgRegistrator.hxx>
#endif

#ifndef _ShapeExtend_DataMapOfTransientListOfMsg_HeaderFile
#include <ShapeExtend_DataMapOfTransientListOfMsg.hxx>
#endif
#ifndef _ShapeExtend_DataMapOfShapeListOfMsg_HeaderFile
#include <ShapeExtend_DataMapOfShapeListOfMsg.hxx>
#endif
#ifndef _ShapeExtend_BasicMsgRegistrator_HeaderFile
#include <ShapeExtend_BasicMsgRegistrator.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
#ifndef _Message_Gravity_HeaderFile
#include <Message_Gravity.hxx>
#endif
class Standard_Transient;
class Message_Msg;
class TopoDS_Shape;
class ShapeExtend_DataMapOfTransientListOfMsg;
class ShapeExtend_DataMapOfShapeListOfMsg;


//! Attaches messages to the objects (generic Transient or shape). <br>
//!          The objects of this class are transmitted to the Shape Healing <br>
//!          algorithms so that they could collect messages occurred during <br>
//!          processing. <br>
//! <br>
//!          Messages are added to the Maps (stored as a field) that can be <br>
//!          used, for instance, by Data Exchange processors to attach those <br>
//!          messages to initial file entities. <br>
class ShapeExtend_MsgRegistrator : public ShapeExtend_BasicMsgRegistrator {

public:

  //! Creates an object. <br>
  Standard_EXPORT   ShapeExtend_MsgRegistrator();
  //! Sends a message to be attached to the object. <br>
//!          If the object is in the map then the message is added to the <br>
//!          list, otherwise the object is firstly added to the map. <br>
  Standard_EXPORT   virtual  void Send(const Handle(Standard_Transient)& object,const Message_Msg& message,const Message_Gravity gravity) ;
  //! Sends a message to be attached to the shape. <br>
//!          If the shape is in the map then the message is added to the <br>
//!          list, otherwise the shape is firstly added to the map. <br>
  Standard_EXPORT   virtual  void Send(const TopoDS_Shape& shape,const Message_Msg& message,const Message_Gravity gravity) ;
  //! Returns a Map of objects and message list <br>
       const ShapeExtend_DataMapOfTransientListOfMsg& MapTransient() const;
  //! Returns a Map of shapes and message list <br>
       const ShapeExtend_DataMapOfShapeListOfMsg& MapShape() const;




  DEFINE_STANDARD_RTTI(ShapeExtend_MsgRegistrator)

protected:




private: 


ShapeExtend_DataMapOfTransientListOfMsg myMapTransient;
ShapeExtend_DataMapOfShapeListOfMsg myMapShape;


};


#include <ShapeExtend_MsgRegistrator.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
