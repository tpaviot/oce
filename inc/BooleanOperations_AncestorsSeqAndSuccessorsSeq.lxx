// Created on: 2000-08-17
// Created by: Vincent DELOS
// Copyright (c) 2000-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.



//===========================================================================
//function : GetAncestor
//purpose  : 
//===========================================================================
inline  Standard_Integer BooleanOperations_AncestorsSeqAndSuccessorsSeq::GetAncestor
    (const Standard_Integer AncestorIndex) const
{
  return myAncestors.Value(AncestorIndex);
}


//===========================================================================
//function : GetSuccessor
//purpose  : 
//===========================================================================
  inline  Standard_Integer BooleanOperations_AncestorsSeqAndSuccessorsSeq::GetSuccessor
    (const Standard_Integer SuccessorIndex) const
{
  return mySuccessors.Value(SuccessorIndex);
}


//===========================================================================
//function : GetOrientation
//purpose  : 
//===========================================================================
  inline  TopAbs_Orientation BooleanOperations_AncestorsSeqAndSuccessorsSeq::GetOrientation
    (const Standard_Integer OrientationIndex) const
{
  return (TopAbs_Orientation)myOrientations.Value(OrientationIndex);
}

//===========================================================================
//function : NumberOfSuccessors
//purpose  : 
   //===========================================================================
  inline  Standard_Integer BooleanOperations_AncestorsSeqAndSuccessorsSeq::NumberOfSuccessors() const
{
  return mySuccessors.Length();
}

//===========================================================================
//function : NumberOfAncestors
//purpose  : 
//===========================================================================
  inline  Standard_Integer BooleanOperations_AncestorsSeqAndSuccessorsSeq::NumberOfAncestors() const
{
  return myAncestors.Length();
}

//===========================================================================
//function : SetNewAncestor
//purpose  : 
//===========================================================================
  inline  void BooleanOperations_AncestorsSeqAndSuccessorsSeq::SetNewAncestor
    (const Standard_Integer AncestorNumber)
{
  myAncestors.Append(AncestorNumber);
}

//===========================================================================
//function : SetNewSuccessor
//purpose  : 
//===========================================================================
  inline  void BooleanOperations_AncestorsSeqAndSuccessorsSeq::SetNewSuccessor
    (const Standard_Integer SuccessorNumber)
{
  mySuccessors.Append(SuccessorNumber);
}

//===========================================================================
//function : SetNewOrientation
//purpose  : 
//===========================================================================
  inline  void BooleanOperations_AncestorsSeqAndSuccessorsSeq::SetNewOrientation
    (const TopAbs_Orientation OrientationNumber)
{
  myOrientations.Append((Standard_Integer)OrientationNumber);
}
