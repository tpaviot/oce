// Created on: 1993-01-11
// Created by: Mireille MERCIEN
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


//----------------------------------------------------------------- 
// Constructor 
//----------------------------------------------------------------- 
PCollection_MapNode::PCollection_MapNode(const Key& aKey,
                         const Item& anItem,
                         const Handle(PCollection_MapNode)& aNext)
{
   myKey  = aKey;
   myItem = anItem;
   myNext = aNext;
}

//----------------------------------------------------------------- 
// GetKey
//----------------------------------------------------------------- 
Key PCollection_MapNode::GetKey() const 
{
   return myKey;
} 

//----------------------------------------------------------------- 
// Value
//----------------------------------------------------------------- 
Item PCollection_MapNode::Value() const 
{
   return myItem;
} 

//----------------------------------------------------------------- 
// Next
//----------------------------------------------------------------- 
Handle(PCollection_MapNode) PCollection_MapNode::Next() const 
{
   return myNext;
} 


//----------------------------------------------------------------- 
// SetKey
//----------------------------------------------------------------- 
void PCollection_MapNode::SetKey(const Key& aKey)  
{
   myKey = aKey;
} 


//----------------------------------------------------------------- 
// SetValue
//----------------------------------------------------------------- 
void PCollection_MapNode::SetValue(const Item& anItem) 
{
   myItem = anItem;
} 

//----------------------------------------------------------------- 
// SetNext
//----------------------------------------------------------------- 
void PCollection_MapNode::SetNext
                       (const Handle(PCollection_MapNode)& aNext)
{
   myNext = aNext;
} 

//----------------------------------------------------------------- 
// ShallowCopy : ShallowCopy redefinition
//----------------------------------------------------------------- 
Handle(Standard_Persistent) PCollection_MapNode::ShallowCopy() const
{
   Handle(PCollection_MapNode) TheCopy;
   TheCopy = new PCollection_MapNode(myKey,myItem,myNext);
   return TheCopy;
}

//----------------------------------------------------------------- 
// ShallowDump : ShallowDump redefinition
//----------------------------------------------------------------- 
void PCollection_MapNode::ShallowDump(Standard_OStream& S) const
{
  S << "begin class MapNode "<< endl;
  Handle(PCollection_MapNode) anode;
  anode = this;
  ::ShallowDump(anode->GetKey(),S);
  ::ShallowDump(anode->Value(),S);
  if (!myNext.IsNull()) myNext->ShallowDump(S);
  S << "end of class MapNode." << endl;
}







