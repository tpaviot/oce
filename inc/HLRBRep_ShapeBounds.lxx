// Created on: 1997-04-17
// Created by: Christophe MARION
// Copyright (c) 1997-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


//=======================================================================
//function : HLRBRep_ShapeBounds
//purpose  : 
//=======================================================================

inline HLRBRep_ShapeBounds::HLRBRep_ShapeBounds ()
{}

//=======================================================================
//function : Shape
//purpose  : 
//=======================================================================

inline void 
HLRBRep_ShapeBounds::Shape (const Handle(HLRTopoBRep_OutLiner)& S)
{ myShape = S; }

//=======================================================================
//function : Shape
//purpose  : 
//=======================================================================

inline const Handle(HLRTopoBRep_OutLiner) &
HLRBRep_ShapeBounds::Shape () const
{ return myShape; }

//=======================================================================
//function : ShapeData
//purpose  : 
//=======================================================================

inline void HLRBRep_ShapeBounds::
ShapeData (const Handle(MMgt_TShared)& SD)
{ myShapeData = SD; }

//=======================================================================
//function : ShapeData
//purpose  : 
//=======================================================================

inline const Handle(MMgt_TShared) & HLRBRep_ShapeBounds::ShapeData () const
{ return myShapeData; }

//=======================================================================
//function : NbOfIso
//purpose  : 
//=======================================================================

inline void HLRBRep_ShapeBounds::NbOfIso (const Standard_Integer nbIso)
{ myNbIso = nbIso; }

//=======================================================================
//function : NbOfIso
//purpose  : 
//=======================================================================

inline Standard_Integer HLRBRep_ShapeBounds::NbOfIso () const
{ return myNbIso; }

//=======================================================================
//function : MinMax
//purpose  : 
//=======================================================================

inline Standard_Address HLRBRep_ShapeBounds::MinMax () const
{ return (Standard_Address)&myMinMax; }
