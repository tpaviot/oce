// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _OSD_Directory_HeaderFile
#define _OSD_Directory_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _OSD_FileNode_HeaderFile
#include <OSD_FileNode.hxx>
#endif
class OSD_Path;
class OSD_Protection;


//! Management of directories <br>
class OSD_Directory  : public OSD_FileNode {
public:

  DEFINE_STANDARD_ALLOC

  //! Creates Directory object. <br>
//!          It is initiliazed to an empty name. <br>
  Standard_EXPORT   OSD_Directory();
  //! Creates Directory object initialized with Name. <br>
  Standard_EXPORT   OSD_Directory(const OSD_Path& Name);
  //! Creates (physically) a directory. <br>
//!          When a directory of the same name already exists, no error is <br>
//!          returned, and only <Protect> is applied to the existing directory. <br>
//! <br>
//!          If Build is used and <me> is instantiated without a name, <br>
//!          OSDError is raised. <br>
  Standard_EXPORT     void Build(const OSD_Protection& Protect) ;
  //! Creates a temporary Directory in current directory. <br>
//!          This directory is automatically removed when object dies. <br>
  Standard_EXPORT   static  OSD_Directory BuildTemporary() ;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
