// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IntCurveSurface_IntersectionPoint_HeaderFile
#define _IntCurveSurface_IntersectionPoint_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _gp_Pnt_HeaderFile
#include <gp_Pnt.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _IntCurveSurface_TransitionOnCurve_HeaderFile
#include <IntCurveSurface_TransitionOnCurve.hxx>
#endif
class gp_Pnt;


//! Definition of an interserction point between a <br>
//!          curve and a surface. <br>
class IntCurveSurface_IntersectionPoint  {
public:

  DEFINE_STANDARD_ALLOC

  //! Empty Constructor. <br>
  Standard_EXPORT   IntCurveSurface_IntersectionPoint();
  //! Create an IntersectionPoint. <br>
  Standard_EXPORT   IntCurveSurface_IntersectionPoint(const gp_Pnt& P,const Standard_Real USurf,const Standard_Real VSurf,const Standard_Real UCurv,const IntCurveSurface_TransitionOnCurve TrCurv);
  //! Set the fields of the current IntersectionPoint. <br>
  Standard_EXPORT     void SetValues(const gp_Pnt& P,const Standard_Real USurf,const Standard_Real VSurf,const Standard_Real UCurv,const IntCurveSurface_TransitionOnCurve TrCurv) ;
  //! Get the fields of the current IntersectionPoint. <br>
  Standard_EXPORT     void Values(gp_Pnt& P,Standard_Real& USurf,Standard_Real& VSurf,Standard_Real& UCurv,IntCurveSurface_TransitionOnCurve& TrCurv) const;
  //! returns the geometric point. <br>
       const gp_Pnt& Pnt() const;
  //! returns the U parameter on the surface. <br>
        Standard_Real U() const;
  //! returns the V parameter on the surface. <br>
        Standard_Real V() const;
  //! returns the parameter on the curve. <br>
        Standard_Real W() const;
  //! returns the Transition of the point. <br>
        IntCurveSurface_TransitionOnCurve Transition() const;
  //! Dump all the fields. <br>
  Standard_EXPORT     void Dump() const;





protected:





private:



gp_Pnt myP;
Standard_Real myUSurf;
Standard_Real myVSurf;
Standard_Real myUCurv;
IntCurveSurface_TransitionOnCurve myTrOnCurv;


};


#include <IntCurveSurface_IntersectionPoint.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
