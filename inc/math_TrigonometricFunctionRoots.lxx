// Copyright (c) 1997-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

// math_TrigonometricFunctionRoots.lxx

#include <StdFail_InfiniteSolutions.hxx>
#include <StdFail_NotDone.hxx>
#include <Standard_OutOfRange.hxx>

inline Standard_Boolean math_TrigonometricFunctionRoots::InfiniteRoots() const { return InfiniteStatus; }

inline Standard_Boolean math_TrigonometricFunctionRoots::IsDone() const 
{ return Done; }


inline Standard_OStream& operator<<(Standard_OStream& o, 
				    const math_TrigonometricFunctionRoots& T)
{
  T.Dump(o);
  return o;
}

inline Standard_Real math_TrigonometricFunctionRoots::Value(const Standard_Integer Index) const {
  StdFail_InfiniteSolutions_Raise_if(InfiniteStatus, " ");
  StdFail_NotDone_Raise_if(!Done, " ");
  Standard_OutOfRange_Raise_if(Index > NbSol, " ");
  return Sol(Index);
}

inline Standard_Integer math_TrigonometricFunctionRoots::NbSolutions() const {
  StdFail_InfiniteSolutions_Raise_if(InfiniteStatus, " ");
  StdFail_NotDone_Raise_if(!Done, " ");
  return NbSol;
}

