// Created on: 1992-08-18
// Created by: Herve LEGRAND
// Copyright (c) 1992-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <Standard_NotImplemented.hxx>
#include <HLRBRep_Curve.hxx>
#include <GeomAbs_Shape.hxx>

//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

inline void  HLRBRep_CLPropsATool::Value
  (const Standard_Address A, 
   const Standard_Real U,
   gp_Pnt2d& P)
{ P = ((HLRBRep_Curve*)A)->Value(U); }

//=======================================================================
//function : D1
//purpose  : 
//=======================================================================

inline void  HLRBRep_CLPropsATool::D1
  (const Standard_Address A, 
   const Standard_Real U,
   gp_Pnt2d& P,
   gp_Vec2d& V1)
{ ((HLRBRep_Curve*)A)->D1(U,P,V1); }

//=======================================================================
//function : D2
//purpose  : 
//=======================================================================

inline void  HLRBRep_CLPropsATool::D2
  (const Standard_Address A, 
   const Standard_Real U,
   gp_Pnt2d& P,
   gp_Vec2d& V1,
   gp_Vec2d& V2)
{ ((HLRBRep_Curve*)A)->D2(U, P, V1, V2); }

//=======================================================================
//function : D3
//purpose  : 
//=======================================================================

inline void  HLRBRep_CLPropsATool::D3
  (const Standard_Address A, 
   const Standard_Real U,
   gp_Pnt2d& P,
   gp_Vec2d& V1,
   gp_Vec2d& V2,
   gp_Vec2d& V3)
{ ((HLRBRep_Curve*)A)->D3(U, P, V1, V2, V3); }

//=======================================================================
//function : Continuity
//purpose  : 
//=======================================================================

inline Standard_Integer  HLRBRep_CLPropsATool::Continuity
  (const Standard_Address)
{ return GeomAbs_C2; }

//=======================================================================
//function : FirstParameter
//purpose  : 
//=======================================================================

inline Standard_Real  HLRBRep_CLPropsATool::FirstParameter
  (const Standard_Address A)
{ return ((HLRBRep_Curve*)A)->FirstParameter(); }

//=======================================================================
//function : LastParameter
//purpose  : 
//=======================================================================

inline Standard_Real  HLRBRep_CLPropsATool::LastParameter
  (const Standard_Address A)
{ return ((HLRBRep_Curve*)A)->LastParameter(); }
