// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESDraw_ViewsVisible_HeaderFile
#define _IGESDraw_ViewsVisible_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IGESDraw_ViewsVisible_HeaderFile
#include <Handle_IGESDraw_ViewsVisible.hxx>
#endif

#ifndef _Handle_IGESDraw_HArray1OfViewKindEntity_HeaderFile
#include <Handle_IGESDraw_HArray1OfViewKindEntity.hxx>
#endif
#ifndef _Handle_IGESData_HArray1OfIGESEntity_HeaderFile
#include <Handle_IGESData_HArray1OfIGESEntity.hxx>
#endif
#ifndef _IGESData_ViewKindEntity_HeaderFile
#include <IGESData_ViewKindEntity.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_IGESData_ViewKindEntity_HeaderFile
#include <Handle_IGESData_ViewKindEntity.hxx>
#endif
#ifndef _Handle_IGESData_IGESEntity_HeaderFile
#include <Handle_IGESData_IGESEntity.hxx>
#endif
class IGESDraw_HArray1OfViewKindEntity;
class IGESData_HArray1OfIGESEntity;
class Standard_OutOfRange;
class IGESData_ViewKindEntity;
class IGESData_IGESEntity;


//! Defines IGESViewsVisible, Type <402>, Form <3> <br>
//!           in package IGESDraw <br>
//! <br>
//!           If an entity is to be displayed in more than one views, <br>
//!           this class instance is used, which contains the Visible <br>
//!           views and the associated entity Displays. <br>
class IGESDraw_ViewsVisible : public IGESData_ViewKindEntity {

public:

  
  Standard_EXPORT   IGESDraw_ViewsVisible();
  //! This method is used to set the fields of the class <br>
//!           ViewsVisible <br>
//!       - allViewEntities  : All View kind entities <br>
//!       - allDisplayEntity : All entities whose display is specified <br>
  Standard_EXPORT     void Init(const Handle(IGESDraw_HArray1OfViewKindEntity)& allViewEntities,const Handle(IGESData_HArray1OfIGESEntity)& allDisplayEntity) ;
  //! Changes only the list of Displayed Entities (Null allowed) <br>
  Standard_EXPORT     void InitImplied(const Handle(IGESData_HArray1OfIGESEntity)& allDisplayEntity) ;
  //! Returns False (for a complex view) <br>
  Standard_EXPORT     Standard_Boolean IsSingle() const;
  //! returns the Number of views visible <br>
  Standard_EXPORT     Standard_Integer NbViews() const;
  //! returns the number of entities displayed in the Views or zero if <br>
//! no Entities specified in these Views <br>
  Standard_EXPORT     Standard_Integer NbDisplayedEntities() const;
  //! returns the Index'th ViewKindEntity Entity <br>
//! raises exception if Index  <= 0 or Index > NbViewsVisible() <br>
  Standard_EXPORT     Handle_IGESData_ViewKindEntity ViewItem(const Standard_Integer Index) const;
  //! returns the Index'th entity whose display is being specified by <br>
//! this associativity instance <br>
//! raises exception if Index  <= 0 or Index > NbEntityDisplayed() <br>
  Standard_EXPORT     Handle_IGESData_IGESEntity DisplayedEntity(const Standard_Integer Index) const;




  DEFINE_STANDARD_RTTI(IGESDraw_ViewsVisible)

protected:




private: 


Handle_IGESDraw_HArray1OfViewKindEntity theViewEntities;
Handle_IGESData_HArray1OfIGESEntity theDisplayEntity;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
