// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Graphic3d_HeaderFile
#define _Graphic3d_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_Graphic3d_GraphicDriver_HeaderFile
#include <Handle_Graphic3d_GraphicDriver.hxx>
#endif
#ifndef _Aspect_DisplayConnection_Handle_HeaderFile
#include <Aspect_DisplayConnection_Handle.hxx>
#endif
class Graphic3d_GraphicDriver;
class Graphic3d_Strips;
class Graphic3d_ArrayOfPrimitives;
class Graphic3d_ArrayOfPoints;
class Graphic3d_ArrayOfPolylines;
class Graphic3d_ArrayOfSegments;
class Graphic3d_ArrayOfPolygons;
class Graphic3d_ArrayOfTriangles;
class Graphic3d_ArrayOfTriangleStrips;
class Graphic3d_ArrayOfTriangleFans;
class Graphic3d_ArrayOfQuadrangles;
class Graphic3d_ArrayOfQuadrangleStrips;
class Graphic3d_AspectLine3d;
class Graphic3d_AspectFillArea3d;
class Graphic3d_AspectMarker3d;
class Graphic3d_AspectText3d;
class Graphic3d_Group;
class Graphic3d_MaterialAspect;
class Graphic3d_Structure;
class Graphic3d_GraphicDriver;
class Graphic3d_StructureManager;
class Graphic3d_DataStructureManager;
class Graphic3d_Plotter;
class Graphic3d_Vector;
class Graphic3d_ListOfPArray;
class Graphic3d_SequenceOfAddress;
class Graphic3d_SetOfGroup;
class Graphic3d_HSetOfGroup;
class Graphic3d_SequenceOfGroup;
class Graphic3d_HSequenceOfGroup;
class Graphic3d_MapOfStructure;
class Graphic3d_SequenceOfStructure;
class Graphic3d_HSequenceOfStructure;
class Graphic3d_Array1OfVector;
class Graphic3d_Array1OfVertex;
class Graphic3d_Array2OfVertex;
class Graphic3d_ListOfShortReal;
class Graphic3d_TextureRoot;
class Graphic3d_TextureMap;
class Graphic3d_Texture1D;
class Graphic3d_Texture2D;
class Graphic3d_TextureParams;
class Graphic3d_TextureEnv;
class Graphic3d_Texture1Dmanual;
class Graphic3d_Texture1Dsegment;
class Graphic3d_Texture2Dmanual;
class Graphic3d_Texture2Dplane;
class Graphic3d_ListNodeOfListOfPArray;
class Graphic3d_ListIteratorOfListOfPArray;
class Graphic3d_SequenceNodeOfSequenceOfAddress;
class Graphic3d_ListNodeOfSetListOfSetOfGroup;
class Graphic3d_ListIteratorOfSetListOfSetOfGroup;
class Graphic3d_SetListOfSetOfGroup;
class Graphic3d_SetIteratorOfSetOfGroup;
class Graphic3d_SequenceNodeOfSequenceOfGroup;
class Graphic3d_StdMapNodeOfMapOfStructure;
class Graphic3d_MapIteratorOfMapOfStructure;
class Graphic3d_SequenceNodeOfSequenceOfStructure;
class Graphic3d_ListNodeOfListOfShortReal;
class Graphic3d_ListIteratorOfListOfShortReal;


//! This package permits the creation of 3d graphic objects <br>
//!      in a visualiser. <br>
//!      These objects, called structures, are composed of groups of <br>
//!      primitives and attributes. <br>
//!      The group is the smallest editable element of a structure. <br>
//!      A structure can be displayed, erased, high-lighted. <br>
//!      A transformation can be applied to it. <br>
//!      Structures can be connected to form a tree of structures, <br>
//!      composed by transformations. <br>
//!      The visualiser permits global manipulation of structures. <br>
class Graphic3d  {
public:

  DEFINE_STANDARD_ALLOC

  //! Initialize graphic driver and returns Handle to it. <br>
  Standard_EXPORT   static  Handle_Graphic3d_GraphicDriver InitGraphicDriver(const Aspect_DisplayConnection_Handle& theDisplayConnection) ;





protected:





private:




friend class Graphic3d_Strips;
friend class Graphic3d_ArrayOfPrimitives;
friend class Graphic3d_ArrayOfPoints;
friend class Graphic3d_ArrayOfPolylines;
friend class Graphic3d_ArrayOfSegments;
friend class Graphic3d_ArrayOfPolygons;
friend class Graphic3d_ArrayOfTriangles;
friend class Graphic3d_ArrayOfTriangleStrips;
friend class Graphic3d_ArrayOfTriangleFans;
friend class Graphic3d_ArrayOfQuadrangles;
friend class Graphic3d_ArrayOfQuadrangleStrips;
friend class Graphic3d_AspectLine3d;
friend class Graphic3d_AspectFillArea3d;
friend class Graphic3d_AspectMarker3d;
friend class Graphic3d_AspectText3d;
friend class Graphic3d_Group;
friend class Graphic3d_MaterialAspect;
friend class Graphic3d_Structure;
friend class Graphic3d_GraphicDriver;
friend class Graphic3d_StructureManager;
friend class Graphic3d_DataStructureManager;
friend class Graphic3d_Plotter;
friend class Graphic3d_Vector;
friend class Graphic3d_ListOfPArray;
friend class Graphic3d_SequenceOfAddress;
friend class Graphic3d_SetOfGroup;
friend class Graphic3d_HSetOfGroup;
friend class Graphic3d_SequenceOfGroup;
friend class Graphic3d_HSequenceOfGroup;
friend class Graphic3d_MapOfStructure;
friend class Graphic3d_SequenceOfStructure;
friend class Graphic3d_HSequenceOfStructure;
friend class Graphic3d_Array1OfVector;
friend class Graphic3d_Array1OfVertex;
friend class Graphic3d_Array2OfVertex;
friend class Graphic3d_ListOfShortReal;
friend class Graphic3d_TextureRoot;
friend class Graphic3d_TextureMap;
friend class Graphic3d_Texture1D;
friend class Graphic3d_Texture2D;
friend class Graphic3d_TextureParams;
friend class Graphic3d_TextureEnv;
friend class Graphic3d_Texture1Dmanual;
friend class Graphic3d_Texture1Dsegment;
friend class Graphic3d_Texture2Dmanual;
friend class Graphic3d_Texture2Dplane;
friend class Graphic3d_ListNodeOfListOfPArray;
friend class Graphic3d_ListIteratorOfListOfPArray;
friend class Graphic3d_SequenceNodeOfSequenceOfAddress;
friend class Graphic3d_ListNodeOfSetListOfSetOfGroup;
friend class Graphic3d_ListIteratorOfSetListOfSetOfGroup;
friend class Graphic3d_SetListOfSetOfGroup;
friend class Graphic3d_SetIteratorOfSetOfGroup;
friend class Graphic3d_SequenceNodeOfSequenceOfGroup;
friend class Graphic3d_StdMapNodeOfMapOfStructure;
friend class Graphic3d_MapIteratorOfMapOfStructure;
friend class Graphic3d_SequenceNodeOfSequenceOfStructure;
friend class Graphic3d_ListNodeOfListOfShortReal;
friend class Graphic3d_ListIteratorOfListOfShortReal;

};





// other Inline functions and methods (like "C++: function call" methods)


#endif
