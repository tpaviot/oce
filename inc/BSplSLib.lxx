// Created on: 1993-11-25
// Created by: Bruno DUMORTIER
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <BSplCLib.hxx>
#include <TColgp_Array2OfPnt.hxx>
#include <TColStd_Array2OfReal.hxx>

//=======================================================================
//function : CoefsD0
//purpose  : 
//=======================================================================

inline void BSplSLib::CoefsD0(const Standard_Real U, 
			      const Standard_Real V, 
			      const TColgp_Array2OfPnt& Poles, 
			      const TColStd_Array2OfReal& Weights, 
			      gp_Pnt& Point)
{
  BSplSLib::CacheD0(U, V,
		    Poles.RowLength() - 1, Poles.ColLength() - 1, 
		    0., 0., 1., 1.,
		    Poles, Weights, Point);
}

//=======================================================================
//function : CoefsD1
//purpose  : 
//=======================================================================

inline void BSplSLib::CoefsD1(const Standard_Real U, 
			      const Standard_Real V, 
			      const TColgp_Array2OfPnt& Poles, 
			      const TColStd_Array2OfReal& Weights, 
			      gp_Pnt& Point, 
			      gp_Vec& VecU, 
			      gp_Vec& VecV)
{
  BSplSLib::CacheD1(U, V,
		    Poles.RowLength() - 1, Poles.ColLength() - 1, 
		    0., 0., 1., 1.,
		    Poles, Weights, Point, VecU, VecV);
}

//=======================================================================
//function : CoefsD2
//purpose  : 
//=======================================================================

inline void BSplSLib::CoefsD2(const Standard_Real U, 
			      const Standard_Real V, 
			      const TColgp_Array2OfPnt& Poles, 
			      const TColStd_Array2OfReal& Weights, 
			      gp_Pnt& Point,
			      gp_Vec& VecU, 
			      gp_Vec& VecV, 
			      gp_Vec& VecUU, 
			      gp_Vec& VecUV, 
			      gp_Vec& VecVV)
{
  BSplSLib::CacheD2(U, V,
		    Poles.RowLength() - 1, Poles.ColLength() - 1, 
		    0., 0., 1., 1.,
		    Poles, Weights, Point, VecU, VecV,
		    VecUU, VecUV, VecVV);
}


//=======================================================================
//function : PolesCoefficients
//purpose  : 
//=======================================================================

inline void BSplSLib::PolesCoefficients(const TColgp_Array2OfPnt& Poles, 
					TColgp_Array2OfPnt& CachePoles)
{
  BSplSLib::PolesCoefficients(Poles, BSplSLib::NoWeights(),
			      CachePoles, BSplSLib::NoWeights());
}

//=======================================================================
//function : NoWeights
//purpose  : 
//=======================================================================

inline TColStd_Array2OfReal&  BSplSLib::NoWeights()
{
  return (*((TColStd_Array2OfReal*) NULL));
}

