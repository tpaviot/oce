// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TDataStd_HeaderFile
#define _TDataStd_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
#ifndef _TDataStd_RealEnum_HeaderFile
#include <TDataStd_RealEnum.hxx>
#endif
class TDF_IDList;
class TDataStd_Current;
class TDataStd_Name;
class TDataStd_Comment;
class TDataStd_Integer;
class TDataStd_IntegerArray;
class TDataStd_Real;
class TDataStd_RealArray;
class TDataStd_ExtStringArray;
class TDataStd_UAttribute;
class TDataStd_TreeNode;
class TDataStd_ChildNodeIterator;
class TDataStd_Directory;
class TDataStd_NoteBook;
class TDataStd_Expression;
class TDataStd_Relation;
class TDataStd_Variable;
class TDataStd_DeltaOnModificationOfIntArray;
class TDataStd_DeltaOnModificationOfRealArray;
class TDataStd_DeltaOnModificationOfExtStringArray;
class TDataStd_DeltaOnModificationOfIntPackedMap;
class TDataStd_DeltaOnModificationOfByteArray;
class TDataStd_Tick;
class TDataStd_AsciiString;
class TDataStd_IntPackedMap;
class TDataStd_IntegerList;
class TDataStd_RealList;
class TDataStd_ExtStringList;
class TDataStd_BooleanList;
class TDataStd_ReferenceList;
class TDataStd_BooleanArray;
class TDataStd_ReferenceArray;
class TDataStd_ByteArray;
class TDataStd_NamedData;
class TDataStd_ListOfExtendedString;
class TDataStd_ListOfByte;
class TDataStd_LabelArray1;
class TDataStd_HLabelArray1;
class TDataStd_DataMapOfStringReal;
class TDataStd_DataMapOfStringString;
class TDataStd_DataMapOfStringByte;
class TDataStd_DataMapOfStringHArray1OfInteger;
class TDataStd_DataMapOfStringHArray1OfReal;
class TDataStd_HDataMapOfStringInteger;
class TDataStd_HDataMapOfStringReal;
class TDataStd_HDataMapOfStringString;
class TDataStd_HDataMapOfStringByte;
class TDataStd_HDataMapOfStringHArray1OfInteger;
class TDataStd_HDataMapOfStringHArray1OfReal;
class TDataStd_ListNodeOfListOfExtendedString;
class TDataStd_ListIteratorOfListOfExtendedString;
class TDataStd_ListNodeOfListOfByte;
class TDataStd_ListIteratorOfListOfByte;
class TDataStd_DataMapNodeOfDataMapOfStringReal;
class TDataStd_DataMapIteratorOfDataMapOfStringReal;
class TDataStd_DataMapNodeOfDataMapOfStringString;
class TDataStd_DataMapIteratorOfDataMapOfStringString;
class TDataStd_DataMapNodeOfDataMapOfStringByte;
class TDataStd_DataMapIteratorOfDataMapOfStringByte;
class TDataStd_DataMapNodeOfDataMapOfStringHArray1OfInteger;
class TDataStd_DataMapIteratorOfDataMapOfStringHArray1OfInteger;
class TDataStd_DataMapNodeOfDataMapOfStringHArray1OfReal;
class TDataStd_DataMapIteratorOfDataMapOfStringHArray1OfReal;


//!  This  package  defines   standard attributes for <br>
//!           modelling. <br>
//! These allow you to create and modify labels <br>
//! and attributes for many basic data types. <br>
//! Standard topological and visualization <br>
//! attributes have also been created. <br>
//! To find an attribute attached to a specific label, <br>
//! you use the GUID of the type of attribute you <br>
//! are looking for. To do this, first find this <br>
//! information using the method GetID as follows: Standard_GUID anID = <br>
//! MyAttributeClass::GetID(); <br>
//! Then, use the method Find for the label as follows: <br>
//! Standard_Boolean HasAttribute <br>
//! = <br>
//! aLabel.Find(anID,anAttribute); <br>
//! Note <br>
//! For information on the relations between this <br>
//! component of OCAF and the others, refer to the OCAF User's Guide. <br>
class TDataStd  {
public:

  DEFINE_STANDARD_ALLOC

  //! Appends to <anIDList> the list of the attributes <br>
//!          IDs of this package. CAUTION: <anIDList> is NOT <br>
//!          cleared before use. <br>
  Standard_EXPORT   static  void IDList(TDF_IDList& anIDList) ;
  //! Prints the name of the real dimension <DIM> as a String on <br>
//!          the Stream <S> and returns <S>. <br>
  Standard_EXPORT   static  Standard_OStream& Print(const TDataStd_RealEnum DIM,Standard_OStream& S) ;





protected:





private:




friend class TDataStd_Current;
friend class TDataStd_Name;
friend class TDataStd_Comment;
friend class TDataStd_Integer;
friend class TDataStd_IntegerArray;
friend class TDataStd_Real;
friend class TDataStd_RealArray;
friend class TDataStd_ExtStringArray;
friend class TDataStd_UAttribute;
friend class TDataStd_TreeNode;
friend class TDataStd_ChildNodeIterator;
friend class TDataStd_Directory;
friend class TDataStd_NoteBook;
friend class TDataStd_Expression;
friend class TDataStd_Relation;
friend class TDataStd_Variable;
friend class TDataStd_DeltaOnModificationOfIntArray;
friend class TDataStd_DeltaOnModificationOfRealArray;
friend class TDataStd_DeltaOnModificationOfExtStringArray;
friend class TDataStd_DeltaOnModificationOfIntPackedMap;
friend class TDataStd_DeltaOnModificationOfByteArray;
friend class TDataStd_Tick;
friend class TDataStd_AsciiString;
friend class TDataStd_IntPackedMap;
friend class TDataStd_IntegerList;
friend class TDataStd_RealList;
friend class TDataStd_ExtStringList;
friend class TDataStd_BooleanList;
friend class TDataStd_ReferenceList;
friend class TDataStd_BooleanArray;
friend class TDataStd_ReferenceArray;
friend class TDataStd_ByteArray;
friend class TDataStd_NamedData;
friend class TDataStd_ListOfExtendedString;
friend class TDataStd_ListOfByte;
friend class TDataStd_LabelArray1;
friend class TDataStd_HLabelArray1;
friend class TDataStd_DataMapOfStringReal;
friend class TDataStd_DataMapOfStringString;
friend class TDataStd_DataMapOfStringByte;
friend class TDataStd_DataMapOfStringHArray1OfInteger;
friend class TDataStd_DataMapOfStringHArray1OfReal;
friend class TDataStd_HDataMapOfStringInteger;
friend class TDataStd_HDataMapOfStringReal;
friend class TDataStd_HDataMapOfStringString;
friend class TDataStd_HDataMapOfStringByte;
friend class TDataStd_HDataMapOfStringHArray1OfInteger;
friend class TDataStd_HDataMapOfStringHArray1OfReal;
friend class TDataStd_ListNodeOfListOfExtendedString;
friend class TDataStd_ListIteratorOfListOfExtendedString;
friend class TDataStd_ListNodeOfListOfByte;
friend class TDataStd_ListIteratorOfListOfByte;
friend class TDataStd_DataMapNodeOfDataMapOfStringReal;
friend class TDataStd_DataMapIteratorOfDataMapOfStringReal;
friend class TDataStd_DataMapNodeOfDataMapOfStringString;
friend class TDataStd_DataMapIteratorOfDataMapOfStringString;
friend class TDataStd_DataMapNodeOfDataMapOfStringByte;
friend class TDataStd_DataMapIteratorOfDataMapOfStringByte;
friend class TDataStd_DataMapNodeOfDataMapOfStringHArray1OfInteger;
friend class TDataStd_DataMapIteratorOfDataMapOfStringHArray1OfInteger;
friend class TDataStd_DataMapNodeOfDataMapOfStringHArray1OfReal;
friend class TDataStd_DataMapIteratorOfDataMapOfStringHArray1OfReal;

};





// other Inline functions and methods (like "C++: function call" methods)


#endif
