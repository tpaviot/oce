// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BOPTColStd_ShapeWithRank_HeaderFile
#define _BOPTColStd_ShapeWithRank_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _TopoDS_Shape_HeaderFile
#include <TopoDS_Shape.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class TopoDS_Shape;



//!  The auxiliary class provides structure to store a shape <br>
//!  and its rank <br>
//! <br>
class BOPTColStd_ShapeWithRank  {
public:

  DEFINE_STANDARD_ALLOC

  
//! Empty constructor <br>
//! <br>
  Standard_EXPORT   BOPTColStd_ShapeWithRank();
  
//! Modifier <br>
//! <br>
  Standard_EXPORT     void SetShape(const TopoDS_Shape& aS) ;
  
//! Modifier <br>
//! <br>
  Standard_EXPORT     void SetRank(const Standard_Integer aR) ;
  
//! Selector <br>
//! <br>
  Standard_EXPORT    const TopoDS_Shape& Shape() const;
  
//! Selector <br>
//! <br>
  Standard_EXPORT     Standard_Integer Rank() const;
  //! Returns a HasCode value  for  the  Key <K>  in the <br>
//!          range 0..Upper. <br>
//! <br>
  Standard_EXPORT     Standard_Integer HashCode(const Standard_Integer Upper) const;
  //! Returns True  when the two  keys are the same. Two <br>
//!          same  keys  must   have  the  same  hashcode,  the <br>
//!          contrary is not necessary. <br>
//! <br>
  Standard_EXPORT     Standard_Boolean IsEqual(const BOPTColStd_ShapeWithRank& Other) const;





protected:





private:



TopoDS_Shape myShape;
Standard_Integer myRank;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
