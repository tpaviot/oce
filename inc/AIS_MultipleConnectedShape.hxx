// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _AIS_MultipleConnectedShape_HeaderFile
#define _AIS_MultipleConnectedShape_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_AIS_MultipleConnectedShape_HeaderFile
#include <Handle_AIS_MultipleConnectedShape.hxx>
#endif

#ifndef _TopoDS_Shape_HeaderFile
#include <TopoDS_Shape.hxx>
#endif
#ifndef _AIS_MultipleConnectedInteractive_HeaderFile
#include <AIS_MultipleConnectedInteractive.hxx>
#endif
#ifndef _AIS_KindOfInteractive_HeaderFile
#include <AIS_KindOfInteractive.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_Prs3d_Projector_HeaderFile
#include <Handle_Prs3d_Projector.hxx>
#endif
#ifndef _Handle_Prs3d_Presentation_HeaderFile
#include <Handle_Prs3d_Presentation.hxx>
#endif
#ifndef _Handle_Geom_Transformation_HeaderFile
#include <Handle_Geom_Transformation.hxx>
#endif
#ifndef _Handle_SelectMgr_Selection_HeaderFile
#include <Handle_SelectMgr_Selection.hxx>
#endif
#ifndef _Handle_PrsMgr_PresentationManager3d_HeaderFile
#include <Handle_PrsMgr_PresentationManager3d.hxx>
#endif
class Standard_NotImplemented;
class TopoDS_Shape;
class Prs3d_Projector;
class Prs3d_Presentation;
class Geom_Transformation;
class SelectMgr_Selection;
class PrsMgr_PresentationManager3d;


//! Constructs an Interactive Object connected to a list of <br>
//! Interactive Objects having a Shape. These include <br>
//! AIS_Shape, and AIS_ConnectedShape. <br>
//! Presentation of Hidden parts is calculated automatically. <br>
//! You define the Interactive Object by gathering <br>
//! together several other object presentations as in <br>
//! AIS_MultipleConnectedInteractive. <br>
class AIS_MultipleConnectedShape : public AIS_MultipleConnectedInteractive {

public:

  //! Initializes the shape aShape, a multiple connected <br>
//! Interactive Object grouping different <br>
//! projector-dependent representations of an entity. <br>
  Standard_EXPORT   AIS_MultipleConnectedShape(const TopoDS_Shape& aShape);
  
  Standard_EXPORT   virtual  AIS_KindOfInteractive Type() const;
  
  Standard_EXPORT   virtual  Standard_Integer Signature() const;
  //! Returns true is shape decomposition is accepted. <br>
  Standard_EXPORT   virtual  Standard_Boolean AcceptShapeDecomposition() const;
  //! Constructs the reference shape ashap. <br>
        void Set(const TopoDS_Shape& ashap) ;
  //! Returns the shape which is constructed in Set. <br>
       const TopoDS_Shape& Shape() const;




  DEFINE_STANDARD_RTTI(AIS_MultipleConnectedShape)

protected:

  
  Standard_EXPORT   virtual  void Compute(const Handle(Prs3d_Projector)& aProjector,const Handle(Prs3d_Presentation)& aPresentation) ;
  
  Standard_EXPORT   virtual  void Compute(const Handle(Prs3d_Projector)& aProjector,const Handle(Geom_Transformation)& aTrsf,const Handle(Prs3d_Presentation)& aPresentation) ;
  
  Standard_EXPORT   virtual  void ComputeSelection(const Handle(SelectMgr_Selection)& aSelection,const Standard_Integer aMode) ;



private: 

  
  Standard_EXPORT     void Compute(const Handle(Prs3d_Projector)& aProjector,const Handle(Prs3d_Presentation)& aPresentation,const TopoDS_Shape& aShape) ;
  //! this method is redefined virtual; <br>
//!          when the instance is connected to another <br>
//!          InteractiveObject,this method doesn't <br>
//!          compute anything, but just uses the <br>
//!          presentation of this last object, with <br>
//!          a transformation if there's one stored. <br>
  Standard_EXPORT   virtual  void Compute(const Handle(PrsMgr_PresentationManager3d)& aPresentationManager,const Handle(Prs3d_Presentation)& aPresentation,const Standard_Integer aMode = 0) ;

TopoDS_Shape myShape;


};


#include <AIS_MultipleConnectedShape.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
