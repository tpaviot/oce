// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TopOpeBRepDS_ShapeShapeInterference_HeaderFile
#define _TopOpeBRepDS_ShapeShapeInterference_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_TopOpeBRepDS_ShapeShapeInterference_HeaderFile
#include <Handle_TopOpeBRepDS_ShapeShapeInterference.hxx>
#endif

#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _TopOpeBRepDS_Config_HeaderFile
#include <TopOpeBRepDS_Config.hxx>
#endif
#ifndef _TopOpeBRepDS_Interference_HeaderFile
#include <TopOpeBRepDS_Interference.hxx>
#endif
#ifndef _TopOpeBRepDS_Kind_HeaderFile
#include <TopOpeBRepDS_Kind.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
class TopOpeBRepDS_Transition;



class TopOpeBRepDS_ShapeShapeInterference : public TopOpeBRepDS_Interference {

public:

  //! a shape interfers on shape <G> with shape <S>. <br>
//! examples : <br>
//! create a ShapeShapeInterference describing : <br>
//! vertex V of edge E1 found on edge E2 : <br>
//! ST,S,GT,G = TopOpeBRepDS_EDGE,E2,TopOpeBRepDS_VERTEX,V <br>
//! <br>
//! create a ShapeShapeInterference describing <br>
//! vertex V of edge E found on face F : <br>
//! ST,S,GT,G = TopOpeBRepDS_FACE,F,TopOpeBRepDS_VERTEX,V <br>
//! <br>
//! <GBound> indicates if shape <G> is a bound of shape <S>. <br>
//! <br>
//! <SCC> : <br>
//! UNSH_GEOMETRY : <br>
//! 	 <S> and <Ancestor> have any types, <br>
//! 	 <S> and <Ancestor> don't share the same geometry <br>
//! SAME_ORIENTED : <br>
//! 	 <S> and <Ancestor> have identical types, <br>
//! 	 <S> and <Ancestor> orientations are IDENTICAL. <br>
//! DIFF_ORIENTED : <br>
//! 	 <S> and <Ancestor> have identical types, <br>
//! 	 <S> and <Ancestor> orientations are DIFFERENT. <br>
//! <br>
  Standard_EXPORT   TopOpeBRepDS_ShapeShapeInterference(const TopOpeBRepDS_Transition& T,const TopOpeBRepDS_Kind ST,const Standard_Integer S,const TopOpeBRepDS_Kind GT,const Standard_Integer G,const Standard_Boolean GBound,const TopOpeBRepDS_Config C);
  
  Standard_EXPORT     TopOpeBRepDS_Config Config() const;
  
  Standard_EXPORT     Standard_Boolean GBound() const;
  
  Standard_EXPORT     void SetGBound(const Standard_Boolean b) ;
  
  Standard_EXPORT   virtual  Standard_OStream& Dump(Standard_OStream& OS) const;




  DEFINE_STANDARD_RTTI(TopOpeBRepDS_ShapeShapeInterference)

protected:




private: 


Standard_Boolean myGBound;
TopOpeBRepDS_Config myC;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
