// Created on: 1993-03-11
// Created by: Remi LEQUETTE
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


//=======================================================================
//function : Length
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_HArray1::Length () const 
{
   return myArray.Length();
}

//=======================================================================
//function : Lower
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_HArray1::Lower () const 
{
   return myArray.Lower();
}

//=======================================================================
//function : Upper
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_HArray1::Upper () const 
{
   return myArray.Upper();
}

//=======================================================================
//function : SetValue
//purpose  : 
//=======================================================================

inline void TCollection_HArray1::SetValue (const Standard_Integer Index,
					   const ItemHArray1& Value)
{
   myArray.SetValue(Index,Value);
}

//=======================================================================
//function : Array1
//purpose  : 
//=======================================================================

inline const TheArray1& TCollection_HArray1::Array1() const
{
  return myArray;
}


//=======================================================================
//function : ChangeArray1
//purpose  : 
//=======================================================================

inline TheArray1& TCollection_HArray1::ChangeArray1() 
{
  return myArray;
}

//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

inline const ItemHArray1& TCollection_HArray1::Value(const Standard_Integer Index) const
{
  return myArray(Index);
}

//=======================================================================
//function : ChangeValue
//purpose  : 
//=======================================================================

inline ItemHArray1& TCollection_HArray1::ChangeValue(const Standard_Integer Index)
{
  return myArray(Index);
}


