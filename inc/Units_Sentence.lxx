// Created on: 1992-06-24
// Created by: Gilles DEBARBOUILLE
// Copyright (c) 1992-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.



#include <Units_TokensSequence.hxx>
#include <Units_Token.hxx>

//=======================================================================
//function : Sequence
//purpose  : 
//=======================================================================

inline Handle(Units_TokensSequence) Units_Sentence::Sequence() const
{
  return thesequenceoftokens;
}

//=======================================================================
//function : Sequence

//purpose  : 
//=======================================================================

inline void Units_Sentence::Sequence
  (const Handle(Units_TokensSequence)& asequenceoftokens)
{
  thesequenceoftokens=asequenceoftokens;
}


//=======================================================================
//function : IsDone
//purpose  : 
//=======================================================================

inline Standard_Boolean Units_Sentence::IsDone() const
{
  return thesequenceoftokens->Length()>0;
}


//=======================================================================
//function : Dump
//purpose  : 
//=======================================================================

inline void Units_Sentence::Dump() const
{
  Standard_Integer index;
  cout<<" UNIT SENTENCE with : "<<endl;
  for(index=1;index<=thesequenceoftokens->Length();index++)
    thesequenceoftokens->Value(index)->Dump(1,1);
}
