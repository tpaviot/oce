// Copyright (c) 1998-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

// SortTools_ShellSort.gxx
// cree le 04/11/91 par ASI
// Reference : Software Conponents with ADA, Grady Booch.

void SortTools_ShellSort::Sort(Array& TheArray, 
				      const Comparator& Comp) 
{

  Item    TempItem;
  Standard_Integer Outer;
  Standard_Integer Inner;
  Standard_Integer Inc = 1;

  for(;;) {
    if((9 * Inc) + 4 >= TheArray.Upper() - TheArray.Lower() + 1) break;
    Inc = (Inc * 3) + 1;
  }
  for(;;) {
    Outer = TheArray.Lower() + Inc;
    for(;;) {
      TempItem = TheArray(Outer);
      Inner = Outer;
      while (Comp.IsLower(TempItem, TheArray(Inner - Inc))) {
	TheArray(Inner) = TheArray(Inner - Inc);
	Inner = Inner - Inc;
	if(Inner - Inc < TheArray.Lower()) break;
      }
      TheArray(Inner) = TempItem;
      if(Outer + Inc > TheArray.Upper()) break;
      Outer = Outer + Inc;
    }
    if(Inc == 1) break;
    Inc = (Inc - 1) / 3;
  }
}





