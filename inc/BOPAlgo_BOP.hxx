// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BOPAlgo_BOP_HeaderFile
#define _BOPAlgo_BOP_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _BOPAlgo_Operation_HeaderFile
#include <BOPAlgo_Operation.hxx>
#endif
#ifndef _TopoDS_Shape_HeaderFile
#include <TopoDS_Shape.hxx>
#endif
#ifndef _BOPCol_ListOfShape_HeaderFile
#include <BOPCol_ListOfShape.hxx>
#endif
#ifndef _BOPCol_MapOfShape_HeaderFile
#include <BOPCol_MapOfShape.hxx>
#endif
#ifndef _BOPAlgo_Builder_HeaderFile
#include <BOPAlgo_Builder.hxx>
#endif
#ifndef _BOPCol_BaseAllocator_HeaderFile
#include <BOPCol_BaseAllocator.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _BOPCol_IndexedDataMapOfShapeListOfShape_HeaderFile
#include <BOPCol_IndexedDataMapOfShapeListOfShape.hxx>
#endif
class TopoDS_Shape;
class BOPAlgo_PaveFiller;



class BOPAlgo_BOP  : public BOPAlgo_Builder {
public:

  DEFINE_STANDARD_ALLOC

  //!  Empty constructor <br>
  Standard_EXPORT   BOPAlgo_BOP();
Standard_EXPORT virtual ~BOPAlgo_BOP();
  
  Standard_EXPORT   BOPAlgo_BOP(const BOPCol_BaseAllocator& theAllocator);
  //!  Clears internal fields and arguments <br>
  Standard_EXPORT   virtual  void Clear() ;
  //!  Adds Object argument of the operation <br>
  Standard_EXPORT   virtual  void AddArgument(const TopoDS_Shape& theShape) ;
  //!  Adds Tool argument of the operation <br>
  Standard_EXPORT   virtual  void AddTool(const TopoDS_Shape& theShape) ;
  
  Standard_EXPORT    const TopoDS_Shape& Object() const;
  
  Standard_EXPORT    const TopoDS_Shape& Tool() const;
  
  Standard_EXPORT     void SetOperation(const BOPAlgo_Operation theOperation) ;
  
  Standard_EXPORT     BOPAlgo_Operation Operation() const;





protected:

  
  Standard_EXPORT   virtual  void CheckData() ;
  //!  Provides preparing actions <br>
  Standard_EXPORT   virtual  void Prepare() ;
  //!  Performs calculations using prepared Filler <br>
//!           object theDSF <br>
  Standard_EXPORT   virtual  void PerformInternal(const BOPAlgo_PaveFiller& thePF) ;
  
  Standard_EXPORT     void BuildShape() ;
  
  Standard_EXPORT     void BuildRC() ;
  
  Standard_EXPORT     void BuildSolid() ;
  
  Standard_EXPORT     void BuildSection() ;
  
  Standard_EXPORT     Standard_Boolean IsBoundSplits(const TopoDS_Shape& theS,BOPCol_IndexedDataMapOfShapeListOfShape& theMEF) ;


Standard_Integer myNbArgs;
BOPAlgo_Operation myOperation;
TopoDS_Shape myArgs[2];
Standard_Integer myDims[2];
TopoDS_Shape myRC;
BOPCol_ListOfShape myTools;
BOPCol_MapOfShape myMapTools;


private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
