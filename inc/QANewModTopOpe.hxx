// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _QANewModTopOpe_HeaderFile
#define _QANewModTopOpe_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _TopAbs_ShapeEnum_HeaderFile
#include <TopAbs_ShapeEnum.hxx>
#endif
class TopoDS_Shape;
class TopoDS_Compound;
class QANewModTopOpe_Tools;
class QANewModTopOpe_Limitation;
class QANewModTopOpe_Intersection;
class QANewModTopOpe_Glue;
class QANewModTopOpe_ReShaper;


//!  QANewModTopOpe  package  provides  classes  for  limitation, gluing <br>
//!           and removing "floating" shapes. <br>
class QANewModTopOpe  {
public:

  DEFINE_STANDARD_ALLOC

  //! to remove  "floating" objects from compound. <br>
//! "floating" objects are wires, edges, vertices that do not belong <br>
//! solids, shells or faces. <br>//! to check if TheS is valid or not. <br>
//! in difference with BRepCheck_Analizer, this method allows <br>
//! some  kind of  non-manifold shapes <br>
  Standard_EXPORT   static  Standard_Boolean IsValid(const TopoDS_Shape& TheS,const Standard_Boolean GeomControls = Standard_True) ;
  //! to check if TheS is manifol or not. <br>
//! manifold shape is valid SOLID, SHELL, WIRE, EDGE, VERTEX without internal <br>
//! subshapes - faces, wires, edges and vertices that have INTERNAL orientation <br>
//! For SHELL there are additional conditions: orientations of faces must <br>
//! corresponds each other, each edge must be shared not more then two faces. <br>
//! COMPSOLID is non manifold by default. <br>
//! COMPOUND conciders to  be manifold if: <br>
//! 1) all shapes in compound are manifold (see above mentioned definitions) <br>
//! 2) all shapes are fully disconnected - there are any shapes in  compound that <br>
//!    share common subshapes. <br>
  Standard_EXPORT   static  Standard_Boolean IsManifold(const TopoDS_Shape& TheS) ;
  //! to check if TheS is manifol or not. <br>
//! compound conciders to  be manifold if: <br>
//! 1) all shapes in compound are manifold (see comments for method IsManifold) <br>
//! 2) all shapes are fully disconnected - there are any shapes in  compound that <br>
//!    share common subshapes. <br>
  Standard_EXPORT   static  Standard_Boolean IsCompoundManifold(const TopoDS_Compound& TheS) ;
  //! to define if COMPOUND is homogeneous <br>
//! (consists of shapes of the same type) and return this shape type. <br>
//! If COMPOUND is mixed, method returns TopAbs_COMPOUND. <br>
//! If TheS is single shape (not COMPOUND), method returns its type. <br>
//! If COMPOUND contains nested compounds, it concideres to be homogeneous <br>
//! if all compounds consist of shapes of the same type. <br>
  Standard_EXPORT   static  TopAbs_ShapeEnum TypeOfShape(const TopoDS_Shape& TheS) ;
  //! to check if all subshapes in TheS, when TheS is COMPOUND, COMPSOLID, SHELL or WIRE, <br>
//! are linked through common faces, edges or  vertices. <br>
//! SOLID, FACE, EDGE, VERTEX concider to be connected by default. <br>
  Standard_EXPORT   static  Standard_Boolean IsConnected(const TopoDS_Shape& TheS) ;





protected:





private:




friend class QANewModTopOpe_Tools;
friend class QANewModTopOpe_Limitation;
friend class QANewModTopOpe_Intersection;
friend class QANewModTopOpe_Glue;
friend class QANewModTopOpe_ReShaper;

};





// other Inline functions and methods (like "C++: function call" methods)


#endif
