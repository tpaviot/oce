// Created on: 1996-11-26
// Created by: Philippe MANGIN
// Copyright (c) 1996-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.



#include <StdFail_NotDone.hxx>
#include <TColgp_HArray2OfPnt.hxx>
#include <TColgp_HArray1OfPnt2d.hxx>
#include <TColStd_HArray2OfReal.hxx>
#include <TColStd_HArray1OfReal.hxx>
#include <TColStd_HArray1OfInteger.hxx>


inline Standard_Boolean BRepBlend_AppSurface::IsDone() const
{
  return approx.IsDone();
}


inline Standard_Integer BRepBlend_AppSurface::UDegree() const
{
  return approx.UDegree();
}

inline Standard_Integer BRepBlend_AppSurface::VDegree() const
{
  return approx.VDegree();
}

inline const TColgp_Array2OfPnt& 
BRepBlend_AppSurface::SurfPoles() const
{
  return approx.SurfPoles();
}

inline const TColStd_Array2OfReal& 
BRepBlend_AppSurface::SurfWeights() const
{
  return approx.SurfWeights();
}


inline const TColStd_Array1OfReal& 
BRepBlend_AppSurface::SurfUKnots() const
{
   return approx.SurfUKnots(); 
}

inline const TColStd_Array1OfReal& 
BRepBlend_AppSurface::SurfVKnots() const
{
   return approx.SurfVKnots(); 
}

inline const TColStd_Array1OfInteger& 
BRepBlend_AppSurface::SurfUMults() const
{
   return approx.SurfUMults(); 
}

inline const TColStd_Array1OfInteger& 
BRepBlend_AppSurface::SurfVMults() const
{
  return approx.SurfVMults(); 
}

inline Standard_Integer BRepBlend_AppSurface::NbCurves2d() const
{
 return approx.NbCurves2d();
}

inline Standard_Integer BRepBlend_AppSurface::Curves2dDegree() const
{
  return approx.Curves2dDegree();
}

inline const TColgp_Array1OfPnt2d& 
BRepBlend_AppSurface::Curve2dPoles(const Standard_Integer Index) const
{
  return  approx.Curve2dPoles(Index);
}

inline const TColStd_Array1OfReal& 
BRepBlend_AppSurface::Curves2dKnots() const
{
   return approx.Curves2dKnots();
}

inline const TColStd_Array1OfInteger& 
BRepBlend_AppSurface::Curves2dMults () const
{
   return approx.Curves2dMults(); 
}


