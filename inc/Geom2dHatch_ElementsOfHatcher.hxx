// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Geom2dHatch_ElementsOfHatcher_HeaderFile
#define _Geom2dHatch_ElementsOfHatcher_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Geom2dHatch_MapOfElementsOfElementsOfHatcher_HeaderFile
#include <Geom2dHatch_MapOfElementsOfElementsOfHatcher.hxx>
#endif
#ifndef _Geom2dHatch_DataMapIteratorOfMapOfElementsOfElementsOfHatcher_HeaderFile
#include <Geom2dHatch_DataMapIteratorOfMapOfElementsOfElementsOfHatcher.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_Geom2dHatch_DataMapNodeOfMapOfElementsOfElementsOfHatcher_HeaderFile
#include <Handle_Geom2dHatch_DataMapNodeOfMapOfElementsOfElementsOfHatcher.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _TopAbs_Orientation_HeaderFile
#include <TopAbs_Orientation.hxx>
#endif
class Standard_DomainError;
class Standard_NoSuchObject;
class Geom2dHatch_ElementOfHatcher;
class TColStd_MapIntegerHasher;
class Geom2dAdaptor_Curve;
class Geom2dHatch_MapOfElementsOfElementsOfHatcher;
class Geom2dHatch_DataMapNodeOfMapOfElementsOfElementsOfHatcher;
class Geom2dHatch_DataMapIteratorOfMapOfElementsOfElementsOfHatcher;
class gp_Pnt2d;
class gp_Lin2d;



class Geom2dHatch_ElementsOfHatcher  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   Geom2dHatch_ElementsOfHatcher();
  
  Standard_EXPORT   Geom2dHatch_ElementsOfHatcher(const Geom2dHatch_ElementsOfHatcher& Other);
  
  Standard_EXPORT     void Clear() ;
~Geom2dHatch_ElementsOfHatcher()
{
  Clear();
}
  
  Standard_EXPORT     Standard_Boolean Bind(const Standard_Integer& K,const Geom2dHatch_ElementOfHatcher& I) ;
  
  Standard_EXPORT     Standard_Boolean IsBound(const Standard_Integer& K) const;
  
  Standard_EXPORT     Standard_Boolean UnBind(const Standard_Integer& K) ;
  
  Standard_EXPORT    const Geom2dHatch_ElementOfHatcher& Find(const Standard_Integer& K) const;
   const Geom2dHatch_ElementOfHatcher& operator()(const Standard_Integer& K) const
{
  return Find(K);
}
  
  Standard_EXPORT     Geom2dHatch_ElementOfHatcher& ChangeFind(const Standard_Integer& K) ;
    Geom2dHatch_ElementOfHatcher& operator()(const Standard_Integer& K) 
{
  return ChangeFind(K);
}
  
  Standard_EXPORT     Standard_Boolean Reject(const gp_Pnt2d& P) const;
  
  Standard_EXPORT     Standard_Boolean Segment(const gp_Pnt2d& P,gp_Lin2d& L,Standard_Real& Par) ;
  
  Standard_EXPORT     Standard_Boolean OtherSegment(const gp_Pnt2d& P,gp_Lin2d& L,Standard_Real& Par) ;
  
  Standard_EXPORT     void InitWires() ;
  
  Standard_EXPORT     Standard_Boolean MoreWires() const;
  
  Standard_EXPORT     void NextWire() ;
  
  Standard_EXPORT     Standard_Boolean RejectWire(const gp_Lin2d& L,const Standard_Real Par) const;
  
  Standard_EXPORT     void InitEdges() ;
  
  Standard_EXPORT     Standard_Boolean MoreEdges() const;
  
  Standard_EXPORT     void NextEdge() ;
  
  Standard_EXPORT     Standard_Boolean RejectEdge(const gp_Lin2d& L,const Standard_Real Par) const;
  
  Standard_EXPORT     void CurrentEdge(Geom2dAdaptor_Curve& E,TopAbs_Orientation& Or) const;





protected:





private:



Geom2dHatch_MapOfElementsOfElementsOfHatcher myMap;
Geom2dHatch_DataMapIteratorOfMapOfElementsOfElementsOfHatcher Iter;
Standard_Integer NumWire;
Standard_Integer NumEdge;
Standard_Integer myCurEdge;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
