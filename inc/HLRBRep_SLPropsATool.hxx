// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _HLRBRep_SLPropsATool_HeaderFile
#define _HLRBRep_SLPropsATool_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class gp_Pnt;
class gp_Vec;



class HLRBRep_SLPropsATool  {
public:

  DEFINE_STANDARD_ALLOC

  //! Computes the point  <P> of 	parameter <U> and <V> <br>
//!          on the Surface <A>. <br>
//! <br>
      static  void Value(const Standard_Address A,const Standard_Real U,const Standard_Real V,gp_Pnt& P) ;
  //! Computes the point <P>  and first derivative <D1*> <br>
//!          of parameter <U> and <V> on the Surface <A>. <br>
//! <br>
      static  void D1(const Standard_Address A,const Standard_Real U,const Standard_Real V,gp_Pnt& P,gp_Vec& D1U,gp_Vec& D1V) ;
  //! Computes the point <P>, the first derivative <D1*> <br>
//!          and second  derivative <D2*> of parameter  <U> and <br>
//!          <V> on the Surface <A>. <br>
//! <br>
      static  void D2(const Standard_Address A,const Standard_Real U,const Standard_Real V,gp_Pnt& P,gp_Vec& D1U,gp_Vec& D1V,gp_Vec& D2U,gp_Vec& D2V,gp_Vec& DUV) ;
  
  Standard_EXPORT   static  gp_Vec DN(const Standard_Address A,const Standard_Real U,const Standard_Real V,const Standard_Integer Nu,const Standard_Integer Nv) ;
  //! returns the order of   continuity of the   Surface <br>
//!          <A>.  returns  1   :  first  derivative    only is <br>
//!          computable returns 2 : first and second derivative <br>
//!          only are computable. <br>
//! <br>
      static  Standard_Integer Continuity(const Standard_Address A) ;
  //! returns the bounds of the Surface. <br>
//! <br>
      static  void Bounds(const Standard_Address A,Standard_Real& U1,Standard_Real& V1,Standard_Real& U2,Standard_Real& V2) ;





protected:





private:





};


#include <HLRBRep_SLPropsATool.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
