// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Prs3d_ArrowAspect_HeaderFile
#define _Prs3d_ArrowAspect_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_Prs3d_ArrowAspect.hxx>

#include <Handle_Graphic3d_AspectLine3d.hxx>
#include <Quantity_PlaneAngle.hxx>
#include <Quantity_Length.hxx>
#include <Prs3d_BasicAspect.hxx>
#include <Quantity_NameOfColor.hxx>
class Graphic3d_AspectLine3d;
class Prs3d_InvalidAngle;
class Quantity_Color;


//! A framework for displaying arrows in representations
//! of dimensions and relations.
class Prs3d_ArrowAspect : public Prs3d_BasicAspect
{

public:

  
  //! Constructs an empty framework for displaying arrows
  //! in representations of lengths. The lengths displayed
  //! are either on their own or in chamfers, fillets,
  //! diameters and radii.
  Standard_EXPORT Prs3d_ArrowAspect();
  
  //! Constructs a framework to display an arrow with a
  //! shaft of the length aLength and having a head with
  //! sides at the angle anAngle from each other.
  Standard_EXPORT Prs3d_ArrowAspect(const Quantity_PlaneAngle anAngle, const Quantity_Length aLength);
  
  Standard_EXPORT Prs3d_ArrowAspect(const Handle(Graphic3d_AspectLine3d)& theAspect);
  
  //! defines the angle of the arrows.
  Standard_EXPORT   void SetAngle (const Quantity_PlaneAngle anAngle) ;
  
  //! returns the current value of the angle used when drawing an arrow.
  Standard_EXPORT   Quantity_PlaneAngle Angle()  const;
  
  //! defines the length of the arrows.
  Standard_EXPORT   void SetLength (const Quantity_Length aLength) ;
  
  //! returns the current value of the length used when drawing an arrow.
  Standard_EXPORT   Quantity_Length Length()  const;
  
  Standard_EXPORT   void SetColor (const Quantity_Color& aColor) ;
  
  Standard_EXPORT   void SetColor (const Quantity_NameOfColor aColor) ;
  
  Standard_EXPORT   Handle(Graphic3d_AspectLine3d) Aspect()  const;
  
  Standard_EXPORT   void SetAspect (const Handle(Graphic3d_AspectLine3d)& theAspect) ;




  DEFINE_STANDARD_RTTI(Prs3d_ArrowAspect)

protected:




private: 


  Handle(Graphic3d_AspectLine3d) myArrowAspect;
  Quantity_PlaneAngle myAngle;
  Quantity_Length myLength;


};







#endif // _Prs3d_ArrowAspect_HeaderFile
