// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IntCurveSurface_ThePolyhedronToolOfHInter_HeaderFile
#define _IntCurveSurface_ThePolyhedronToolOfHInter_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_Bnd_HArray1OfBox_HeaderFile
#include <Handle_Bnd_HArray1OfBox.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_OutOfRange;
class IntCurveSurface_ThePolyhedronOfHInter;
class Bnd_Box;
class Bnd_HArray1OfBox;
class gp_Pnt;



class IntCurveSurface_ThePolyhedronToolOfHInter  {
public:

  DEFINE_STANDARD_ALLOC

  
      static const Bnd_Box& Bounding(const IntCurveSurface_ThePolyhedronOfHInter& thePolyh) ;
  
      static const Handle_Bnd_HArray1OfBox& ComponentsBounding(const IntCurveSurface_ThePolyhedronOfHInter& thePolyh) ;
  
      static  Standard_Real DeflectionOverEstimation(const IntCurveSurface_ThePolyhedronOfHInter& thePolyh) ;
  
      static  Standard_Integer NbTriangles(const IntCurveSurface_ThePolyhedronOfHInter& thePolyh) ;
  
      static  void Triangle(const IntCurveSurface_ThePolyhedronOfHInter& thePolyh,const Standard_Integer Index,Standard_Integer& P1,Standard_Integer& P2,Standard_Integer& P3) ;
  
      static const gp_Pnt& Point(const IntCurveSurface_ThePolyhedronOfHInter& thePolyh,const Standard_Integer Index) ;
  
      static  Standard_Integer TriConnex(const IntCurveSurface_ThePolyhedronOfHInter& thePolyh,const Standard_Integer Triang,const Standard_Integer Pivot,const Standard_Integer Pedge,Standard_Integer& TriCon,Standard_Integer& OtherP) ;
  
      static  Standard_Boolean IsOnBound(const IntCurveSurface_ThePolyhedronOfHInter& thePolyh,const Standard_Integer Index1,const Standard_Integer Index2) ;
  
      static  Standard_Real GetBorderDeflection(const IntCurveSurface_ThePolyhedronOfHInter& thePolyh) ;
  
  Standard_EXPORT   static  void Dump(const IntCurveSurface_ThePolyhedronOfHInter& thePolyh) ;





protected:





private:





};

#define ThePolyhedron IntCurveSurface_ThePolyhedronOfHInter
#define ThePolyhedron_hxx <IntCurveSurface_ThePolyhedronOfHInter.hxx>
#define IntCurveSurface_PolyhedronTool IntCurveSurface_ThePolyhedronToolOfHInter
#define IntCurveSurface_PolyhedronTool_hxx <IntCurveSurface_ThePolyhedronToolOfHInter.hxx>

#include <IntCurveSurface_PolyhedronTool.lxx>

#undef ThePolyhedron
#undef ThePolyhedron_hxx
#undef IntCurveSurface_PolyhedronTool
#undef IntCurveSurface_PolyhedronTool_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
