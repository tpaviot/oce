// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepMesh_ComparatorOfIndexedVertexOfDelaun_HeaderFile
#define _BRepMesh_ComparatorOfIndexedVertexOfDelaun_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_BRepMesh_DataStructureOfDelaun_HeaderFile
#include <Handle_BRepMesh_DataStructureOfDelaun.hxx>
#endif
#ifndef _gp_XY_HeaderFile
#include <gp_XY.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class BRepMesh_DataStructureOfDelaun;
class gp_XY;


//! Sort two point in a given direction. <br>
class BRepMesh_ComparatorOfIndexedVertexOfDelaun  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   BRepMesh_ComparatorOfIndexedVertexOfDelaun(const gp_XY& theDir,const Standard_Real TheTol,const Handle(BRepMesh_DataStructureOfDelaun)& HDS);
  //! returns True if <Left> is lower than <Right> <br>
  Standard_EXPORT     Standard_Boolean IsLower(const Standard_Integer Left,const Standard_Integer Right) const;
  //! returns True if <Left> is greater than <Right> <br>
  Standard_EXPORT     Standard_Boolean IsGreater(const Standard_Integer Left,const Standard_Integer Right) const;
  //! returns True when <Right> and <Left> are equal. <br>
  Standard_EXPORT     Standard_Boolean IsEqual(const Standard_Integer Left,const Standard_Integer Right) const;





protected:





private:



Handle_BRepMesh_DataStructureOfDelaun IndexedStructure;
gp_XY DirectionOfSort;
Standard_Real Tolerance;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
