// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BinMDataXtd_HeaderFile
#define _BinMDataXtd_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_BinMDF_ADriverTable_HeaderFile
#include <Handle_BinMDF_ADriverTable.hxx>
#endif
#ifndef _Handle_CDM_MessageDriver_HeaderFile
#include <Handle_CDM_MessageDriver.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class BinMDF_ADriverTable;
class CDM_MessageDriver;
class BinMDataXtd_PointDriver;
class BinMDataXtd_AxisDriver;
class BinMDataXtd_PlaneDriver;
class BinMDataXtd_GeometryDriver;
class BinMDataXtd_ConstraintDriver;
class BinMDataXtd_PlacementDriver;
class BinMDataXtd_PatternStdDriver;
class BinMDataXtd_ShapeDriver;


//! Storage and Retrieval drivers for modelling attributes. <br>
class BinMDataXtd  {
public:

  DEFINE_STANDARD_ALLOC

  //! Adds the attribute drivers to <theDriverTable>. <br>
  Standard_EXPORT   static  void AddDrivers(const Handle(BinMDF_ADriverTable)& theDriverTable,const Handle(CDM_MessageDriver)& aMsgDrv) ;
  
  Standard_EXPORT   static  void SetDocumentVersion(const Standard_Integer DocVersion) ;
  
  Standard_EXPORT   static  Standard_Integer DocumentVersion() ;





protected:





private:




friend class BinMDataXtd_PointDriver;
friend class BinMDataXtd_AxisDriver;
friend class BinMDataXtd_PlaneDriver;
friend class BinMDataXtd_GeometryDriver;
friend class BinMDataXtd_ConstraintDriver;
friend class BinMDataXtd_PlacementDriver;
friend class BinMDataXtd_PatternStdDriver;
friend class BinMDataXtd_ShapeDriver;

};





// other Inline functions and methods (like "C++: function call" methods)


#endif
