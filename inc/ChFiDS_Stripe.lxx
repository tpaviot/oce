// Created on: 1994-03-09
// Created by: Isabelle GRIGNON
// Copyright (c) 1994-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.



//=======================================================================
//function : SetOfSurfData
//purpose  : 
//=======================================================================

inline const Handle(ChFiDS_HData)& ChFiDS_Stripe::SetOfSurfData() const
{
  return myHdata;
}

//=======================================================================
//function : Spine
//purpose  : 
//=======================================================================
 
inline const Handle(ChFiDS_Spine)& ChFiDS_Stripe::Spine() const
{
  return mySpine;
}
 
//=======================================================================
//function : OrientationOnFace1
//purpose  : 
//=======================================================================
 
inline TopAbs_Orientation  ChFiDS_Stripe::OrientationOnFace1() const
{
  return myOr1;
}

//=======================================================================
//function : OrientationOnFace2
//purpose  : 
//=======================================================================
 
inline TopAbs_Orientation  ChFiDS_Stripe::OrientationOnFace2() const
{
  return myOr2;
}

//=======================================================================
//function : Choix
//purpose  : 
//=======================================================================
 
inline Standard_Integer ChFiDS_Stripe::Choix() const
{
  return myChoix;
}

//=======================================================================
//function : ChangeSetOfSurfData
//purpose  : 
//=======================================================================
 
inline Handle(ChFiDS_HData)& ChFiDS_Stripe::ChangeSetOfSurfData() 
{
  return myHdata;
}

//=======================================================================
//function : ChangeSpine
//purpose  : 
//=======================================================================
 
inline Handle(ChFiDS_Spine)& ChFiDS_Stripe::ChangeSpine() 
{
  return mySpine;
}

//=======================================================================
//function : OrientationOnFace1
//purpose  : 
//=======================================================================
 
inline void ChFiDS_Stripe::OrientationOnFace1(const TopAbs_Orientation Or1) 
{
  myOr1 = Or1;
}

//=======================================================================
//function : OrientationOnFace2
//purpose  : 
//=======================================================================
 
inline void ChFiDS_Stripe::OrientationOnFace2(const TopAbs_Orientation Or2) 
{
  myOr2 = Or2;
}


//=======================================================================
//function : Choix
//purpose  : 
//=======================================================================
 
inline void ChFiDS_Stripe::Choix(const Standard_Integer C) 
{
  myChoix = C;
}

//=======================================================================
//function : FirstParameters
//purpose  : 
//=======================================================================

inline void  ChFiDS_Stripe::FirstParameters(Standard_Real& Pdeb,
					       Standard_Real& Pfin) const 
{
  Pdeb = pardeb1;
  Pfin = parfin1;
}

//=======================================================================
//function : lastParameters
//purpose  : 
//=======================================================================

inline void  ChFiDS_Stripe::LastParameters(Standard_Real& Pdeb,
					      Standard_Real& Pfin) const 
{
  Pdeb = pardeb2;
  Pfin = parfin2;
}


//=======================================================================
//function : ChangeFirstParameters
//purpose  : 
//=======================================================================

inline void  ChFiDS_Stripe::ChangeFirstParameters(const Standard_Real Pdeb,
						     const Standard_Real Pfin)
{
  pardeb1 = Pdeb;
  parfin1 = Pfin;
}

//=======================================================================
//function : ChangeLastParameters
//purpose  : 
//=======================================================================

inline void  ChFiDS_Stripe::ChangeLastParameters(const Standard_Real Pdeb,
						    const Standard_Real Pfin)
{
  pardeb2 = Pdeb;
  parfin2 = Pfin;
}

//=======================================================================
//function : FirstCurve
//purpose  : 
//=======================================================================

inline Standard_Integer ChFiDS_Stripe::FirstCurve()const 
{
  return indexOfcurve1;
}

//=======================================================================
//function : LastCurve
//purpose  : 
//=======================================================================

inline Standard_Integer ChFiDS_Stripe::LastCurve()const 
{
  return indexOfcurve2;
}

//=======================================================================
//function : ChangeFirstCurve
//purpose  : 
//=======================================================================

inline void ChFiDS_Stripe::ChangeFirstCurve(const Standard_Integer Index)
{
  indexOfcurve1 = Index;
}

//=======================================================================
//function : ChangeLastCurve
//purpose  : 
//=======================================================================

inline void ChFiDS_Stripe::ChangeLastCurve(const Standard_Integer Index)
{
  indexOfcurve2 = Index;
}

//=======================================================================
//function : FirstPCurve
//purpose  : 
//=======================================================================

inline const Handle(Geom2d_Curve)&  ChFiDS_Stripe::FirstPCurve()const 
{
  return pcrv1;
}

//=======================================================================
//function : LastPCurve
//purpose  : 
//=======================================================================

inline const Handle(Geom2d_Curve)&  ChFiDS_Stripe::LastPCurve()const 
{
  return pcrv2;
}

//=======================================================================
//function : ChangeFirstPCurve
//purpose  : 
//=======================================================================

inline Handle(Geom2d_Curve)&  ChFiDS_Stripe::ChangeFirstPCurve()
{
  return pcrv1;
}

//=======================================================================
//function : ChangeLastPCurve
//purpose  : 
//=======================================================================

inline Handle(Geom2d_Curve)&  ChFiDS_Stripe::ChangeLastPCurve()
{
  return pcrv2;
}

//=======================================================================
//function : IndexFirstPointOnS1
//purpose  : 
//=======================================================================

inline Standard_Integer  ChFiDS_Stripe::IndexFirstPointOnS1() const
{
  return indexfirstPOnS1;
}

//=======================================================================
//function : IndexLastPointOnS1
//purpose  : 
//=======================================================================

inline Standard_Integer  ChFiDS_Stripe::IndexLastPointOnS1() const
{
  return indexlastPOnS1;
}

//=======================================================================
//function : IndexFirstPointOnS2
//purpose  : 
//=======================================================================

inline Standard_Integer  ChFiDS_Stripe::IndexFirstPointOnS2() const
{
  return indexfirstPOnS2;
}

//=======================================================================
//function : IndexLastPointOnS2
//purpose  : 
//=======================================================================

inline Standard_Integer  ChFiDS_Stripe::IndexLastPointOnS2() const
{
  return indexlastPOnS2;
}


//=======================================================================
//function : ChangeIndexFirstPointOnS1
//purpose  : 
//=======================================================================

inline void ChFiDS_Stripe::ChangeIndexFirstPointOnS1
  (const Standard_Integer Index) 
{
  indexfirstPOnS1 = Index;
}

//=======================================================================
//function : ChangeIndexLastPointOnS1
//purpose  : 
//=======================================================================

inline void ChFiDS_Stripe::ChangeIndexLastPointOnS1
  (const Standard_Integer Index) 
{
  indexlastPOnS1 = Index;
}


//=======================================================================
//function : ChangeIndexFirstPointOnS2
//purpose  : 
//=======================================================================

inline void ChFiDS_Stripe::ChangeIndexFirstPointOnS2
  (const Standard_Integer Index) 
{
  indexfirstPOnS2 = Index;
}

//=======================================================================
//function : ChangeIndexLastPointOnS2
//purpose  : 
//=======================================================================

inline void ChFiDS_Stripe::ChangeIndexLastPointOnS2
  (const Standard_Integer Index) 
{
  indexlastPOnS2 = Index;
}

//=======================================================================
//function : FirstPCurveOrientation
//purpose  : 
//=======================================================================

inline TopAbs_Orientation ChFiDS_Stripe::FirstPCurveOrientation()const
{
  return orcurv1;
}

//=======================================================================
//function : LastPCurveOrientation
//purpose  : 
//=======================================================================

inline TopAbs_Orientation ChFiDS_Stripe::LastPCurveOrientation()const
{
  return orcurv2;
}


//=======================================================================
//function : FirstPCurveOrientation
//purpose  : 
//=======================================================================

inline void ChFiDS_Stripe::FirstPCurveOrientation
  (const TopAbs_Orientation O)
{
  orcurv1 = O;
}


//=======================================================================
//function : LastPCurveOrientation
//purpose  : 
//=======================================================================

inline void ChFiDS_Stripe::LastPCurveOrientation
  (const TopAbs_Orientation O)
{
  orcurv2 = O;
}


