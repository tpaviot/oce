// Created on: 1995-06-12
// Created by: Philippe DERVIEUX
// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <TopoDS.hxx>
#include <TopoDS_Shape.hxx>
#include <TopoDS_Vertex.hxx>
#include <TopoDS_Edge.hxx>
#include <TopoDS_Wire.hxx>
#include <TopoDS_Face.hxx>


//=======================================================================
//function : Result
//purpose  : 
//=======================================================================

inline TopoDS_Face ChFi2d_Builder::Result() const 
{
  TopoDS_Face aFace = newFace;
  aFace.Orientation(refFace.Orientation());
  return aFace;
}

//=======================================================================
//function : IsModified
//purpose  : 
//=======================================================================

 inline Standard_Boolean ChFi2d_Builder::IsModified
 (const TopoDS_Edge& E) const 
{
  return history.IsBound(E);
}

//=======================================================================
//function : FilletEdges
//purpose  : 
//=======================================================================

 inline const TopTools_SequenceOfShape& ChFi2d_Builder::FilletEdges() const 
{
  return fillets;
}

//=======================================================================
//function : ChamferEdges
//purpose  : 
//=======================================================================

 inline const TopTools_SequenceOfShape& ChFi2d_Builder::ChamferEdges() const 
{
  return chamfers;
}

//=======================================================================
//function : NbFillet
//purpose  : 
//=======================================================================

 inline Standard_Integer ChFi2d_Builder::NbFillet() const 
{
  return fillets.Length();
}

//=======================================================================
//function : NbChamfer
//purpose  : 
//=======================================================================

 inline Standard_Integer ChFi2d_Builder::NbChamfer() const 
{
  return chamfers.Length();
}

//=======================================================================
//function : HasDescendant
//purpose  : 
//=======================================================================

 inline Standard_Boolean ChFi2d_Builder::HasDescendant
 (const TopoDS_Edge& E) const 
{
  return history.IsBound(E);
}

//=======================================================================
//function : DescendantEdge
//purpose  : 
//=======================================================================

inline const TopoDS_Edge& ChFi2d_Builder::DescendantEdge(const TopoDS_Edge& E) const 
{
  return TopoDS::Edge(history.Find(E));
} // DescendantEdge


//=======================================================================
//function : Status
//purpose  : 
//=======================================================================

 inline ChFi2d_ConstructionError ChFi2d_Builder::Status() const 
{ 
  return status; 
}
