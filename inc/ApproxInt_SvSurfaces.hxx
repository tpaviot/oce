// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _ApproxInt_SvSurfaces_HeaderFile
#define _ApproxInt_SvSurfaces_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
class gp_Pnt;
class gp_Vec;
class gp_Vec2d;



class ApproxInt_SvSurfaces  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   virtual  void Delete() ;
Standard_EXPORT virtual ~ApproxInt_SvSurfaces(){Delete() ; }
  //! returns True if Tg,Tguv1 Tguv2 can be computed. <br>
  Standard_EXPORT   virtual  Standard_Boolean Compute(Standard_Real& u1,Standard_Real& v1,Standard_Real& u2,Standard_Real& v2,gp_Pnt& Pt,gp_Vec& Tg,gp_Vec2d& Tguv1,gp_Vec2d& Tguv2)  = 0;
  
  Standard_EXPORT   virtual  void Pnt(const Standard_Real u1,const Standard_Real v1,const Standard_Real u2,const Standard_Real v2,gp_Pnt& P)  = 0;
  
  Standard_EXPORT   virtual  Standard_Boolean Tangency(const Standard_Real u1,const Standard_Real v1,const Standard_Real u2,const Standard_Real v2,gp_Vec& Tg)  = 0;
  
  Standard_EXPORT   virtual  Standard_Boolean TangencyOnSurf1(const Standard_Real u1,const Standard_Real v1,const Standard_Real u2,const Standard_Real v2,gp_Vec2d& Tg)  = 0;
  
  Standard_EXPORT   virtual  Standard_Boolean TangencyOnSurf2(const Standard_Real u1,const Standard_Real v1,const Standard_Real u2,const Standard_Real v2,gp_Vec2d& Tg)  = 0;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
