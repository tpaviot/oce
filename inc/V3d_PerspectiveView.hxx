// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _V3d_PerspectiveView_HeaderFile
#define _V3d_PerspectiveView_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_V3d_PerspectiveView_HeaderFile
#include <Handle_V3d_PerspectiveView.hxx>
#endif

#ifndef _V3d_View_HeaderFile
#include <V3d_View.hxx>
#endif
#ifndef _Handle_V3d_Viewer_HeaderFile
#include <Handle_V3d_Viewer.hxx>
#endif
#ifndef _Handle_V3d_OrthographicView_HeaderFile
#include <Handle_V3d_OrthographicView.hxx>
#endif
#ifndef _Quantity_PlaneAngle_HeaderFile
#include <Quantity_PlaneAngle.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
class V3d_BadValue;
class V3d_Viewer;
class V3d_OrthographicView;


//! Creates and modifies a perspective <br>
//!           See the methods of the class View <br>
class V3d_PerspectiveView : public V3d_View {

public:

  //! Defines a perspective view in a viewer VM. <br>
//!          The default angle of opening is given <br>
//!          by the viewer. <br>
  Standard_EXPORT   V3d_PerspectiveView(const Handle(V3d_Viewer)& VM);
  //! Creates a perspective view from the parameters <br>
//!	    of an orthographic view. <br>
//!          The parameters of the original view are duplicated <br>
//!          in the resulting view (Projection,Mapping,Context) . <br>
//!          The view thus created must be activated in a new window. <br>
//!          The default angle of opening is given <br>
//!          by the viewer. <br>
  Standard_EXPORT   V3d_PerspectiveView(const Handle(V3d_Viewer)& VM,const Handle(V3d_OrthographicView)& V);
  //! Creates one perspective view from another. <br>
//!          The parameters of the original view are duplicated <br>
//!          in the resulting view (Projection,Mapping,Context) . <br>
//!          The view thus created must be activated in a new window. <br>
  Standard_EXPORT   V3d_PerspectiveView(const Handle(V3d_Viewer)& VM,const Handle(V3d_PerspectiveView)& V);
  
  Standard_EXPORT     Handle_V3d_PerspectiveView Copy() const;
  //! Modifies the angle of opening of the perspective in RADIANS. <br>
//!	    The projection window is resized according to the <br>
//!	    formula : <br>
//!	    TAN(Angle/2) = Size/Length <br>
//!	    	Size expresses the smallest dimension of the window. <br>
//!	        Length expresses the focal length. <br>//!  Warning! raises BadValue from V3d <br>
//!	    if the opening angle is <= 0 or >= PI <br>
  Standard_EXPORT     void SetAngle(const Quantity_PlaneAngle Angle) ;
  //! Returns the value of the angle of opening. <br>
  Standard_EXPORT     Quantity_PlaneAngle Angle() const;
  //! Modifies the viewing perspective volume by given <br>
//!		angle of opening of the perspective in RADIANS, <br>
//!      aspect ratio of window width to its height and <br>
//!      near and far clipping planes <br>
  Standard_EXPORT     void SetPerspective(const Quantity_PlaneAngle Angle,const Standard_Real UVRatio,const Standard_Real ZNear,const Standard_Real ZFar) ;




  DEFINE_STANDARD_RTTI(V3d_PerspectiveView)

protected:




private: 




};





// other Inline functions and methods (like "C++: function call" methods)


#endif
