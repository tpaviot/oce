// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TopOpeBRep_ListOfBipoint_HeaderFile
#define _TopOpeBRep_ListOfBipoint_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Handle_TopOpeBRep_ListNodeOfListOfBipoint_HeaderFile
#include <Handle_TopOpeBRep_ListNodeOfListOfBipoint.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_NoSuchObject;
class TopOpeBRep_ListIteratorOfListOfBipoint;
class TopOpeBRep_Bipoint;
class TopOpeBRep_ListNodeOfListOfBipoint;



class TopOpeBRep_ListOfBipoint  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   TopOpeBRep_ListOfBipoint();
  
  Standard_EXPORT     void Assign(const TopOpeBRep_ListOfBipoint& Other) ;
    void operator=(const TopOpeBRep_ListOfBipoint& Other) 
{
  Assign(Other);
}
  
  Standard_EXPORT     Standard_Integer Extent() const;
  
  Standard_EXPORT     void Clear() ;
~TopOpeBRep_ListOfBipoint()
{
  Clear();
}
  
        Standard_Boolean IsEmpty() const;
  
  Standard_EXPORT     void Prepend(const TopOpeBRep_Bipoint& I) ;
  
  Standard_EXPORT     void Prepend(const TopOpeBRep_Bipoint& I,TopOpeBRep_ListIteratorOfListOfBipoint& theIt) ;
  
  Standard_EXPORT     void Prepend(TopOpeBRep_ListOfBipoint& Other) ;
  
  Standard_EXPORT     void Append(const TopOpeBRep_Bipoint& I) ;
  
  Standard_EXPORT     void Append(const TopOpeBRep_Bipoint& I,TopOpeBRep_ListIteratorOfListOfBipoint& theIt) ;
  
  Standard_EXPORT     void Append(TopOpeBRep_ListOfBipoint& Other) ;
  
  Standard_EXPORT     TopOpeBRep_Bipoint& First() const;
  
  Standard_EXPORT     TopOpeBRep_Bipoint& Last() const;
  
  Standard_EXPORT     void RemoveFirst() ;
  
  Standard_EXPORT     void Remove(TopOpeBRep_ListIteratorOfListOfBipoint& It) ;
  
  Standard_EXPORT     void InsertBefore(const TopOpeBRep_Bipoint& I,TopOpeBRep_ListIteratorOfListOfBipoint& It) ;
  
  Standard_EXPORT     void InsertBefore(TopOpeBRep_ListOfBipoint& Other,TopOpeBRep_ListIteratorOfListOfBipoint& It) ;
  
  Standard_EXPORT     void InsertAfter(const TopOpeBRep_Bipoint& I,TopOpeBRep_ListIteratorOfListOfBipoint& It) ;
  
  Standard_EXPORT     void InsertAfter(TopOpeBRep_ListOfBipoint& Other,TopOpeBRep_ListIteratorOfListOfBipoint& It) ;


friend class TopOpeBRep_ListIteratorOfListOfBipoint;



protected:





private:

  
  Standard_EXPORT   TopOpeBRep_ListOfBipoint(const TopOpeBRep_ListOfBipoint& Other);


Standard_Address myFirst;
Standard_Address myLast;


};

#define Item TopOpeBRep_Bipoint
#define Item_hxx <TopOpeBRep_Bipoint.hxx>
#define TCollection_ListNode TopOpeBRep_ListNodeOfListOfBipoint
#define TCollection_ListNode_hxx <TopOpeBRep_ListNodeOfListOfBipoint.hxx>
#define TCollection_ListIterator TopOpeBRep_ListIteratorOfListOfBipoint
#define TCollection_ListIterator_hxx <TopOpeBRep_ListIteratorOfListOfBipoint.hxx>
#define Handle_TCollection_ListNode Handle_TopOpeBRep_ListNodeOfListOfBipoint
#define TCollection_ListNode_Type_() TopOpeBRep_ListNodeOfListOfBipoint_Type_()
#define TCollection_List TopOpeBRep_ListOfBipoint
#define TCollection_List_hxx <TopOpeBRep_ListOfBipoint.hxx>

#include <TCollection_List.lxx>

#undef Item
#undef Item_hxx
#undef TCollection_ListNode
#undef TCollection_ListNode_hxx
#undef TCollection_ListIterator
#undef TCollection_ListIterator_hxx
#undef Handle_TCollection_ListNode
#undef TCollection_ListNode_Type_
#undef TCollection_List
#undef TCollection_List_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
