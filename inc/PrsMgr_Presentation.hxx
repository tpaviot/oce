// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _PrsMgr_Presentation_HeaderFile
#define _PrsMgr_Presentation_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_PrsMgr_Presentation_HeaderFile
#include <Handle_PrsMgr_Presentation.hxx>
#endif

#ifndef _Handle_PrsMgr_PresentationManager_HeaderFile
#include <Handle_PrsMgr_PresentationManager.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _PrsMgr_KindOfPrs_HeaderFile
#include <PrsMgr_KindOfPrs.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class PrsMgr_PresentationManager;



class PrsMgr_Presentation : public MMgt_TShared {

public:

  //! 2D or 3D <br>
  Standard_EXPORT   virtual  PrsMgr_KindOfPrs KindOfPresentation() const = 0;
  //! Destructor <br>
  Standard_EXPORT   virtual  void Destroy() ;
~PrsMgr_Presentation()
{
  Destroy();
}
  //! returns the PresentationManager in which the <br>
//!          presentation has been created. <br>
       const Handle_PrsMgr_PresentationManager& PresentationManager() const;
  
        void SetUpdateStatus(const Standard_Boolean aStat) ;
  
        Standard_Boolean MustBeUpdated() const;

friend class PrsMgr_PresentationManager;


  DEFINE_STANDARD_RTTI(PrsMgr_Presentation)

protected:

  
  Standard_EXPORT   PrsMgr_Presentation(const Handle(PrsMgr_PresentationManager)& aPresentationManager);

Handle_PrsMgr_PresentationManager myPresentationManager;
Standard_Boolean myMustBeUpdated;


private: 

  
  Standard_EXPORT   virtual  void Display()  = 0;
  
  Standard_EXPORT   virtual  void Erase() const = 0;
  
  Standard_EXPORT   virtual  void Highlight()  = 0;
  
  Standard_EXPORT   virtual  void Unhighlight() const = 0;
  
  Standard_EXPORT   virtual  Standard_Boolean IsHighlighted() const = 0;
  
  Standard_EXPORT   virtual  Standard_Boolean IsDisplayed() const = 0;
  
  Standard_EXPORT   virtual  Standard_Integer DisplayPriority() const = 0;
  
  Standard_EXPORT   virtual  void SetDisplayPriority(const Standard_Integer aNewPrior)  = 0;
  //! Set Z layer ID for the presentation <br>
  Standard_EXPORT   virtual  void SetZLayer(const Standard_Integer theLayerId)  = 0;
  //! Get Z layer ID for the presentation <br>
  Standard_EXPORT   virtual  Standard_Integer GetZLayer() const = 0;
  
  Standard_EXPORT   virtual  void Clear()  = 0;



};


#include <PrsMgr_Presentation.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
