// Created on: 1993-03-04
// Created by: Jacques GOUSSARD
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <StdFail_NotDone.hxx>
#include <Standard_DomainError.hxx>
#include <Standard_OutOfRange.hxx>

#include <gp_Lin.hxx>
#include <gp_Circ.hxx>

inline Standard_Boolean Contap_ContAna::IsDone () const
{
  return done;
}

inline Standard_Integer Contap_ContAna::NbContours () const
{
  if (!done) {StdFail_NotDone::Raise();}
  return nbSol;
}

inline GeomAbs_CurveType Contap_ContAna::TypeContour () const
{
  if (!done) {StdFail_NotDone::Raise();}
  if (nbSol == 0) {Standard_DomainError::Raise();}
  return typL;
}

inline gp_Circ Contap_ContAna::Circle () const
{
  if (!done) {StdFail_NotDone::Raise();}
  if (typL != GeomAbs_Circle || nbSol == 0) {Standard_DomainError::Raise();}
  return gp_Circ(gp_Ax2(pt1,dir1,dir2),prm);
}
