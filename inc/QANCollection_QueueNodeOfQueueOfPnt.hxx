// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _QANCollection_QueueNodeOfQueueOfPnt_HeaderFile
#define _QANCollection_QueueNodeOfQueueOfPnt_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_QANCollection_QueueNodeOfQueueOfPnt_HeaderFile
#include <Handle_QANCollection_QueueNodeOfQueueOfPnt.hxx>
#endif

#ifndef _gp_Pnt_HeaderFile
#include <gp_Pnt.hxx>
#endif
#ifndef _TCollection_MapNode_HeaderFile
#include <TCollection_MapNode.hxx>
#endif
#ifndef _TCollection_MapNodePtr_HeaderFile
#include <TCollection_MapNodePtr.hxx>
#endif
class gp_Pnt;
class QANCollection_QueueOfPnt;



class QANCollection_QueueNodeOfQueueOfPnt : public TCollection_MapNode {

public:

  
      QANCollection_QueueNodeOfQueueOfPnt(const gp_Pnt& I,const TCollection_MapNodePtr& n);
  
        gp_Pnt& Value() const;




  DEFINE_STANDARD_RTTI(QANCollection_QueueNodeOfQueueOfPnt)

protected:




private: 


gp_Pnt myValue;


};

#define Item gp_Pnt
#define Item_hxx <gp_Pnt.hxx>
#define TCollection_QueueNode QANCollection_QueueNodeOfQueueOfPnt
#define TCollection_QueueNode_hxx <QANCollection_QueueNodeOfQueueOfPnt.hxx>
#define Handle_TCollection_QueueNode Handle_QANCollection_QueueNodeOfQueueOfPnt
#define TCollection_QueueNode_Type_() QANCollection_QueueNodeOfQueueOfPnt_Type_()
#define TCollection_Queue QANCollection_QueueOfPnt
#define TCollection_Queue_hxx <QANCollection_QueueOfPnt.hxx>

#include <TCollection_QueueNode.lxx>

#undef Item
#undef Item_hxx
#undef TCollection_QueueNode
#undef TCollection_QueueNode_hxx
#undef Handle_TCollection_QueueNode
#undef TCollection_QueueNode_Type_
#undef TCollection_Queue
#undef TCollection_Queue_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
