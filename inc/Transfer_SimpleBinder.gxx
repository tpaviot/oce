// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

//#include <Transfer_SimpleBinder.ixx>   classe generique


//  "TheResult" identifie la classe donnee en parametre du Resultat


Transfer_SimpleBinder::Transfer_SimpleBinder ()      { }

    Transfer_SimpleBinder::Transfer_SimpleBinder (const TheResult& res)
    : theres (res)
      { SetResultPresent();  }


//    Standard_Boolean  Transfer_SimpleBinder::IsMultiple() const
//      {  return Standard_False;  }


    Handle(Standard_Type)  Transfer_SimpleBinder::ResultType () const
      {  return  TheInfo::Type (theres);  }  // correspond a "STANDARD_TYPE(TheResult)"

    Standard_CString  Transfer_SimpleBinder::ResultTypeName () const
      {  return  TheInfo::TypeName (theres);  }  // correspond a "STANDARD_TYPE(TheResult)"


    void  Transfer_SimpleBinder::SetResult (const TheResult& res)
{
  SetResultPresent();
  theres = res;
}

    const TheResult&  Transfer_SimpleBinder::Result () const
      {  return theres;  }

    TheResult&  Transfer_SimpleBinder::CResult ()
      {  SetResultPresent(); return theres;  }
