// Created on: 1996-02-26
// Created by: Philippe MANGIN
// Copyright (c) 1996-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


inline Standard_OStream& operator<< (Standard_OStream& o, 
				    const FairCurve_MinimalVariation& MVC) 
{
  MVC.Dump(o);
  return o;
}

inline void FairCurve_MinimalVariation::SetCurvature1(const Standard_Real Curvature)
{
  NewCurvature1 =  Curvature;
}

inline void FairCurve_MinimalVariation::SetCurvature2(const Standard_Real Curvature)
{
  NewCurvature2 =  Curvature;
}

inline void FairCurve_MinimalVariation::SetPhysicalRatio(const Standard_Real Ratio)
{
  Standard_DomainError_Raise_if(Ratio < 0 || Ratio > 1, "FairCurve_MinimalVariation::SetPhysicalRatio" );
  NewPhysicalRatio = Ratio;
}

inline Standard_Real FairCurve_MinimalVariation::GetCurvature1() const 
{
 return OldCurvature1;
}

inline Standard_Real FairCurve_MinimalVariation::GetCurvature2() const 
{
 return OldCurvature2;
}

inline Standard_Real FairCurve_MinimalVariation::GetPhysicalRatio() const
{
  return OldPhysicalRatio;
}
