// Copyright (c) 1998-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

#include <Standard_OutOfRange.hxx>

#include Array1Item_hxx

//=======================================================================
//function : Length
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_Array1::Length () const 
{
	return myUpperBound - myLowerBound + 1 ;
}


//=======================================================================
//function : Lower
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_Array1::Lower () const
{
	return myLowerBound ;
}


//=======================================================================
//function : Upper
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_Array1::Upper () const
{
	return myUpperBound ;
}


//=======================================================================
//function : IsAllocated
//purpose  : 
//=======================================================================

inline Standard_Boolean TCollection_Array1::IsAllocated () const
{
 return isAllocated;
}

//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

inline const Array1Item& TCollection_Array1::Value
(const Standard_Integer Index) const
{
  Standard_OutOfRange_Raise_if((Index < myLowerBound || Index > myUpperBound),NULL);
  return ((Array1Item *)myStart)[Index];
}

//=======================================================================
//function : SetValue
//purpose  : 
//=======================================================================

inline  void TCollection_Array1::SetValue (const Standard_Integer Index,
				   const Array1Item& Value)
{
  Standard_OutOfRange_Raise_if((Index < myLowerBound || Index > myUpperBound),NULL);

  ((Array1Item *)myStart)[Index] = Value ;
}


//=======================================================================
//function : ChangeValue
//purpose  : 
//=======================================================================

inline Array1Item& TCollection_Array1::ChangeValue(const Standard_Integer Index)
{
  Standard_OutOfRange_Raise_if((Index < myLowerBound || Index > myUpperBound),NULL);

  return ((Array1Item *)myStart)[Index];
}



