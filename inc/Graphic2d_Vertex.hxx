// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Graphic2d_Vertex_HeaderFile
#define _Graphic2d_Vertex_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_ShortReal_HeaderFile
#include <Standard_ShortReal.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Quantity_Length_HeaderFile
#include <Quantity_Length.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif


//! This class allows the creation and update of a <br>
//!	    2D point. <br>
class Graphic2d_Vertex  {
public:

  DEFINE_STANDARD_ALLOC

  //! Creates a point with 0.0, 0.0 coordinates. <br>
  Standard_EXPORT   Graphic2d_Vertex();
  //! Creates a point with <AX>, <AY> coordinates. <br>
  Standard_EXPORT   Graphic2d_Vertex(const Standard_Real AX,const Standard_Real AY);
  //! Creates a point with <AX>, <AY> coordinates. <br>
  Standard_EXPORT   Graphic2d_Vertex(const Standard_ShortReal AX,const Standard_ShortReal AY);
  //! Modifies the coordinates of the point <me>. <br>
  Standard_EXPORT     void SetCoord(const Quantity_Length Xnew,const Quantity_Length Ynew) ;
  //! Modifies the X coordinate of the point <me>. <br>
  Standard_EXPORT     void SetXCoord(const Quantity_Length Xnew) ;
  //! Modifies the Y coordinate of the point <me>. <br>
  Standard_EXPORT     void SetYCoord(const Quantity_Length Ynew) ;
  //! Returns the coordinates of the point <me>. <br>
  Standard_EXPORT     void Coord(Quantity_Length& AX,Quantity_Length& AY) const;
  //! Returns the X coordinates of the point <me>. <br>
  Standard_EXPORT     Quantity_Length X() const;
  //! Returns the Y coordinate of the point <me>. <br>
  Standard_EXPORT     Quantity_Length Y() const;
  //! Test if <me> and <other> are the the same vertex. <br>
  Standard_EXPORT     Standard_Boolean IsEqual(const Graphic2d_Vertex& other) const;
    Standard_Boolean operator ==(const Graphic2d_Vertex& other) const
{
  return IsEqual(other);
}
  //! Returns the distance between <AV1> and <AV2>. <br>
  Standard_EXPORT   static  Quantity_Length Distance(const Graphic2d_Vertex& AV1,const Graphic2d_Vertex& AV2) ;





protected:





private:



Standard_ShortReal myX;
Standard_ShortReal myY;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
