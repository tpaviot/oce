// Created on: 1995-05-05
// Created by: Christophe MARION
// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <TColStd_HArray1OfTransient.hxx>

//=======================================================================
//function : Hiding
//purpose  : 
//=======================================================================

inline Standard_Boolean
HLRAlgo_PolyShellData::Hiding () const
{ return !myHPolHi.IsNull(); }

//=======================================================================
//function : PolyData
//purpose  : 
//=======================================================================

inline TColStd_Array1OfTransient &
HLRAlgo_PolyShellData::PolyData ()
{ return myPolyg; }

//=======================================================================
//function : HidingPolyData
//purpose  : 
//=======================================================================

inline TColStd_Array1OfTransient &
HLRAlgo_PolyShellData::HidingPolyData ()
{ return myHPolHi->ChangeArray1(); }

//=======================================================================
//function : Edges
//purpose  : 
//=======================================================================

inline HLRAlgo_ListOfBPoint &
HLRAlgo_PolyShellData::Edges ()
{ return mySegList; }

//=======================================================================
//function : Indices
//purpose  : 
//=======================================================================

inline Standard_Address HLRAlgo_PolyShellData::Indices ()
{ return (Standard_Address)myMinMax; }
