// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TColgp_SequenceOfAx1_HeaderFile
#define _TColgp_SequenceOfAx1_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <TCollection_BaseSequence.hxx>
#include <Handle_TColgp_SequenceNodeOfSequenceOfAx1.hxx>
#include <Standard_Integer.hxx>
class Standard_NoSuchObject;
class Standard_OutOfRange;
class gp_Ax1;
class TColgp_SequenceNodeOfSequenceOfAx1;



class TColgp_SequenceOfAx1  : public TCollection_BaseSequence
{
public:

  DEFINE_STANDARD_ALLOC

  
    TColgp_SequenceOfAx1();
  
  Standard_EXPORT TColgp_SequenceOfAx1(const TColgp_SequenceOfAx1& Other);
  
  Standard_EXPORT   void Clear() ;
~TColgp_SequenceOfAx1()
{
  Clear();
}
  
  Standard_EXPORT  const  TColgp_SequenceOfAx1& Assign (const TColgp_SequenceOfAx1& Other) ;
 const  TColgp_SequenceOfAx1& operator = (const TColgp_SequenceOfAx1& Other) 
{
  return Assign(Other);
}
  
  Standard_EXPORT   void Append (const gp_Ax1& T) ;
  
      void Append (TColgp_SequenceOfAx1& S) ;
  
  Standard_EXPORT   void Prepend (const gp_Ax1& T) ;
  
      void Prepend (TColgp_SequenceOfAx1& S) ;
  
      void InsertBefore (const Standard_Integer Index, const gp_Ax1& T) ;
  
      void InsertBefore (const Standard_Integer Index, TColgp_SequenceOfAx1& S) ;
  
  Standard_EXPORT   void InsertAfter (const Standard_Integer Index, const gp_Ax1& T) ;
  
      void InsertAfter (const Standard_Integer Index, TColgp_SequenceOfAx1& S) ;
  
  Standard_EXPORT  const  gp_Ax1& First()  const;
  
  Standard_EXPORT  const  gp_Ax1& Last()  const;
  
      void Split (const Standard_Integer Index, TColgp_SequenceOfAx1& Sub) ;
  
  Standard_EXPORT  const  gp_Ax1& Value (const Standard_Integer Index)  const;
 const  gp_Ax1& operator() (const Standard_Integer Index)  const
{
  return Value(Index);
}
  
  Standard_EXPORT   void SetValue (const Standard_Integer Index, const gp_Ax1& I) ;
  
  Standard_EXPORT   gp_Ax1& ChangeValue (const Standard_Integer Index) ;
  gp_Ax1& operator() (const Standard_Integer Index) 
{
  return ChangeValue(Index);
}
  
  Standard_EXPORT   void Remove (const Standard_Integer Index) ;
  
  Standard_EXPORT   void Remove (const Standard_Integer FromIndex, const Standard_Integer ToIndex) ;




protected:





private:





};

#define SeqItem gp_Ax1
#define SeqItem_hxx <gp_Ax1.hxx>
#define TCollection_SequenceNode TColgp_SequenceNodeOfSequenceOfAx1
#define TCollection_SequenceNode_hxx <TColgp_SequenceNodeOfSequenceOfAx1.hxx>
#define Handle_TCollection_SequenceNode Handle_TColgp_SequenceNodeOfSequenceOfAx1
#define TCollection_SequenceNode_Type_() TColgp_SequenceNodeOfSequenceOfAx1_Type_()
#define TCollection_Sequence TColgp_SequenceOfAx1
#define TCollection_Sequence_hxx <TColgp_SequenceOfAx1.hxx>

#include <TCollection_Sequence.lxx>

#undef SeqItem
#undef SeqItem_hxx
#undef TCollection_SequenceNode
#undef TCollection_SequenceNode_hxx
#undef Handle_TCollection_SequenceNode
#undef TCollection_SequenceNode_Type_
#undef TCollection_Sequence
#undef TCollection_Sequence_hxx




#endif // _TColgp_SequenceOfAx1_HeaderFile
