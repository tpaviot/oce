// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _PCDM_HeaderFile
#define _PCDM_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_CDM_Document_HeaderFile
#include <Handle_CDM_Document.hxx>
#endif
#ifndef _Handle_PCDM_StorageDriver_HeaderFile
#include <Handle_PCDM_StorageDriver.hxx>
#endif
#ifndef _Handle_Storage_Schema_HeaderFile
#include <Handle_Storage_Schema.hxx>
#endif
#ifndef _Handle_CDM_Application_HeaderFile
#include <Handle_CDM_Application.hxx>
#endif
#ifndef _PCDM_TypeOfFileDriver_HeaderFile
#include <PCDM_TypeOfFileDriver.hxx>
#endif
#ifndef _PCDM_BaseDriverPointer_HeaderFile
#include <PCDM_BaseDriverPointer.hxx>
#endif
class CDM_Document;
class PCDM_StorageDriver;
class Storage_Schema;
class TCollection_ExtendedString;
class CDM_Application;
class TCollection_AsciiString;
class PCDM_Document;
class PCDM_SequenceOfDocument;
class PCDM_Reader;
class PCDM_Writer;
class PCDM_RetrievalDriver;
class PCDM_StorageDriver;
class PCDM_ReferenceIterator;
class PCDM_Reference;
class PCDM_SequenceOfReference;
class PCDM_ReadWriter;
class PCDM_ReadWriter_1;
class PCDM_SequenceNodeOfSequenceOfDocument;
class PCDM_SequenceNodeOfSequenceOfReference;



class PCDM  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   static  Standard_Boolean FindStorageDriver(const Handle(CDM_Document)& aDocument) ;
  //!   gets   in the  EuclidDesktop   resource  the plugin <br>
//!          identifier of the driver plugs the driver. <br>
//! <br>
  Standard_EXPORT   static  Handle_PCDM_StorageDriver StorageDriver(const Handle(CDM_Document)& aDocument) ;
  //! returns a schema to be used during a Store or Retrieve <br>
//!          operation. <br>
//!          Schema will plug the schema defined by <br>
//!          the SchemaName method. <br>
  Standard_EXPORT   static  Handle_Storage_Schema Schema(const TCollection_ExtendedString& aSchemaName,const Handle(CDM_Application)& anApplication) ;





protected:





private:

  
  Standard_EXPORT   static  PCDM_TypeOfFileDriver FileDriverType(const TCollection_AsciiString& aFileName,PCDM_BaseDriverPointer& aBaseDriver) ;



friend class PCDM_Document;
friend class PCDM_SequenceOfDocument;
friend class PCDM_Reader;
friend class PCDM_Writer;
friend class PCDM_RetrievalDriver;
friend class PCDM_StorageDriver;
friend class PCDM_ReferenceIterator;
friend class PCDM_Reference;
friend class PCDM_SequenceOfReference;
friend class PCDM_ReadWriter;
friend class PCDM_ReadWriter_1;
friend class PCDM_SequenceNodeOfSequenceOfDocument;
friend class PCDM_SequenceNodeOfSequenceOfReference;

};





// other Inline functions and methods (like "C++: function call" methods)


#endif
