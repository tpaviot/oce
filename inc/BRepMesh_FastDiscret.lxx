// Created on: 2003-09-26
// Created by: Open CASCADE Support
// Copyright (c) 2003-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <BRepMesh_DataStructureOfDelaun.hxx>

//=======================================================================
//function : GetDeflection
//purpose  : 
//=======================================================================

inline Standard_Real BRepMesh_FastDiscret::GetDeflection() const
{
  return myDeflection;
}

//=======================================================================
//function : GetAngle
//purpose  : 
//=======================================================================

inline Standard_Real BRepMesh_FastDiscret::GetAngle() const
{
  return myAngle;
}

//=======================================================================
//function : GetMapOfDefEdge
//purpose  : 
//=======================================================================

inline const TopTools_DataMapOfShapeReal& BRepMesh_FastDiscret::GetMapOfDefEdge() const
{
  return myMapdefle;
}

//=======================================================================
//function : EdgesOfDomain
//purpose  : 
//=======================================================================

inline void BRepMesh_FastDiscret::EdgesOfDomain(BRepMesh_MapOfInteger&  Indices) const 
{ 
  Indices = myStructure->LinkOfDomain();
}

//=======================================================================
//function : TrianglesOfDomain
//purpose  : 
//=======================================================================

inline void BRepMesh_FastDiscret::TrianglesOfDomain(BRepMesh_MapOfInteger&  Indices) const 
{ 
  Indices = myStructure->ElemOfDomain();
}

//=======================================================================
//function : NbPoint3d
//purpose  : 
//=======================================================================

inline Standard_Integer BRepMesh_FastDiscret::NbPoint3d() const
{
  return myNbLocat;
}

//=======================================================================
//function : Point3d
//purpose  : 
//=======================================================================

inline const gp_Pnt& BRepMesh_FastDiscret::Point3d(const Standard_Integer Index) const
{
  return myLocation3d(Index);
}

//=======================================================================
//function : WithShare
//purpose  : 
//=======================================================================

inline Standard_Boolean BRepMesh_FastDiscret::WithShare() const
{
  return myWithShare;
}

//=======================================================================
//function : InShape
//purpose  : 
//=======================================================================

inline Standard_Boolean BRepMesh_FastDiscret::InShape() const
{
  return myInshape;
}

//=======================================================================
//function : ShapeTrigu
//purpose  : 
//=======================================================================

inline Standard_Boolean BRepMesh_FastDiscret::ShapeTrigu() const
{
  return myShapetrigu;
}
