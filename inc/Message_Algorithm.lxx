// Created on: 2007-07-06
// Created by: Pavel TELKOV
// Copyright (c) 2007-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <Message_Algorithm.hxx>
#include <TCollection_HExtendedString.hxx>

//=======================================================================
//function : SetStatus
//purpose  :
//=======================================================================

inline void Message_Algorithm::SetStatus (const Message_Status& theStat, 
                                          const Standard_CString theStr,
                                          const Standard_Boolean noRepetitions)
{
  SetStatus ( theStat, new TCollection_HExtendedString ( theStr ), noRepetitions );
}

//=======================================================================
//function : SetStatus
//purpose  :
//=======================================================================

inline void Message_Algorithm::SetStatus (const Message_Status& theStat, 
                                          const TCollection_AsciiString &theStr,
                                          const Standard_Boolean noRepetitions)
{
  SetStatus ( theStat, new TCollection_HExtendedString ( theStr ), noRepetitions );
}

//=======================================================================
//function : SetStatus
//purpose  :
//=======================================================================

inline void Message_Algorithm::SetStatus (const Message_Status& theStat, 
					  const Handle(TCollection_HAsciiString) &theStr,
					  const Standard_Boolean noRepetitions)
{
  SetStatus ( theStat, new TCollection_HExtendedString ( theStr ), noRepetitions );
}

//=======================================================================
//function : SetStatus
//purpose  :
//=======================================================================

inline void Message_Algorithm::SetStatus (const Message_Status& theStat, 
					  const TCollection_ExtendedString &theStr,
					  const Standard_Boolean noRepetitions)
{
  SetStatus ( theStat, new TCollection_HExtendedString ( theStr ), noRepetitions );
}

//=======================================================================
//function : GetStatus
//purpose  :
//=======================================================================

inline const Message_ExecStatus& Message_Algorithm::GetStatus() const
{
  return myStatus;
}

//=======================================================================
//function : ChangeStatus
//purpose  :
//=======================================================================

inline Message_ExecStatus& Message_Algorithm::ChangeStatus()
{
  return myStatus;
}

//=======================================================================
//function : GetMessenger
//purpose  :
//=======================================================================

inline Handle(Message_Messenger) Message_Algorithm::GetMessenger() const
{
  return myMessenger;
}

