// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TDataStd_IntegerArray_HeaderFile
#define _TDataStd_IntegerArray_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_TDataStd_IntegerArray_HeaderFile
#include <Handle_TDataStd_IntegerArray.hxx>
#endif

#ifndef _Handle_TColStd_HArray1OfInteger_HeaderFile
#include <Handle_TColStd_HArray1OfInteger.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _TDF_Attribute_HeaderFile
#include <TDF_Attribute.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_TDF_Attribute_HeaderFile
#include <Handle_TDF_Attribute.hxx>
#endif
#ifndef _Handle_TDF_RelocationTable_HeaderFile
#include <Handle_TDF_RelocationTable.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
#ifndef _Handle_TDF_DeltaOnModification_HeaderFile
#include <Handle_TDF_DeltaOnModification.hxx>
#endif
class TColStd_HArray1OfInteger;
class TDataStd_DeltaOnModificationOfIntArray;
class Standard_GUID;
class TDF_Label;
class TDF_Attribute;
class TDF_RelocationTable;
class TDF_DeltaOnModification;


//! Contains an array of integers. <br>
class TDataStd_IntegerArray : public TDF_Attribute {

public:

  //! class methods <br>
//!          ============= <br>//! Returns the GUID for arrays of integers. <br>
  Standard_EXPORT   static const Standard_GUID& GetID() ;
  //! Finds or creates on the <label> an integer array attribute <br>
//! with the specified <lower> and <upper> boundaries. <br>
//! If <isDelta> == False, DefaultDeltaOnModification is used. <br>
//! If attribute is already set, all input parameters are refused and the found <br>
//! attribute is returned. <br>
  Standard_EXPORT   static  Handle_TDataStd_IntegerArray Set(const TDF_Label& label,const Standard_Integer lower,const Standard_Integer upper,const Standard_Boolean isDelta = Standard_False) ;
  //! Initialize the inner array with bounds from <lower> to <upper> <br>
  Standard_EXPORT     void Init(const Standard_Integer lower,const Standard_Integer upper) ;
  //! Sets  the   <Index>th  element  of   the  array to <Value> <br>
  Standard_EXPORT     void SetValue(const Standard_Integer Index,const Standard_Integer Value) ;
  //! Return the value of  the  <Index>th element of the array <br>
  Standard_EXPORT     Standard_Integer Value(const Standard_Integer Index) const;
    Standard_Integer operator ()(const Standard_Integer Index) const
{
  return Value(Index);
}
  //!  Returns the lower boundary of this array of integers. <br>
  Standard_EXPORT     Standard_Integer Lower() const;
  //! Return the upper boundary of this array of integers. <br>
  Standard_EXPORT     Standard_Integer Upper() const;
  //! Returns the length of this array of integers in <br>
//!          terms of the number of elements it contains. <br>
  Standard_EXPORT     Standard_Integer Length() const;
  //! Sets the inner array <myValue>  of the IntegerArray attribute to <br>
//! <newArray>. If value of <newArray> differs from <myValue>, Backup performed <br>
//! and myValue refers to new instance of HArray1OfInteger that holds <newArray> <br>
//! values <br>
//! If <isCheckItems> equal True each item of <newArray> will be checked with each <br>
//! item of <myValue> for coincidence (to avoid backup). <br>
  Standard_EXPORT     void ChangeArray(const Handle(TColStd_HArray1OfInteger)& newArray,const Standard_Boolean isCheckItems = Standard_True) ;
  //! Return the inner array of the IntegerArray attribute <br>
       const Handle_TColStd_HArray1OfInteger Array() const;
  
        Standard_Boolean GetDelta() const;
  //! for  internal  use  only! <br>
        void SetDelta(const Standard_Boolean isDelta) ;
  
  Standard_EXPORT   TDataStd_IntegerArray();
  
  Standard_EXPORT    const Standard_GUID& ID() const;
  
  Standard_EXPORT     void Restore(const Handle(TDF_Attribute)& With) ;
  
  Standard_EXPORT     Handle_TDF_Attribute NewEmpty() const;
  //! Note. Uses inside ChangeArray() method <br>
  Standard_EXPORT     void Paste(const Handle(TDF_Attribute)& Into,const Handle(TDF_RelocationTable)& RT) const;
  
  Standard_EXPORT   virtual  Standard_OStream& Dump(Standard_OStream& anOS) const;
  //! Makes a DeltaOnModification between <me> and <br>
//!         <anOldAttribute>. <br>
  Standard_EXPORT   virtual  Handle_TDF_DeltaOnModification DeltaOnModification(const Handle(TDF_Attribute)& anOldAttribute) const;


friend class TDataStd_DeltaOnModificationOfIntArray;


  DEFINE_STANDARD_RTTI(TDataStd_IntegerArray)

protected:




private: 

  
        void RemoveArray() ;

Handle_TColStd_HArray1OfInteger myValue;
Standard_Boolean myIsDelta;


};


#include <TDataStd_IntegerArray.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
