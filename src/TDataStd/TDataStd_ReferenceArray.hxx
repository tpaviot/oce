// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TDataStd_ReferenceArray_HeaderFile
#define _TDataStd_ReferenceArray_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_TDataStd_ReferenceArray_HeaderFile
#include <Handle_TDataStd_ReferenceArray.hxx>
#endif

#ifndef _Handle_TDataStd_HLabelArray1_HeaderFile
#include <Handle_TDataStd_HLabelArray1.hxx>
#endif
#ifndef _TDF_Attribute_HeaderFile
#include <TDF_Attribute.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _TDF_Label_HeaderFile
#include <TDF_Label.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_TDF_Attribute_HeaderFile
#include <Handle_TDF_Attribute.hxx>
#endif
#ifndef _Handle_TDF_RelocationTable_HeaderFile
#include <Handle_TDF_RelocationTable.hxx>
#endif
#ifndef _Handle_TDF_DataSet_HeaderFile
#include <Handle_TDF_DataSet.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
class TDataStd_HLabelArray1;
class Standard_GUID;
class TDF_Label;
class TDF_Attribute;
class TDF_RelocationTable;
class TDF_DataSet;


//! Contains an array of references to the labels. <br>
class TDataStd_ReferenceArray : public TDF_Attribute {

public:

  //! Static methods <br>
//!          ============== <br>//! Returns the ID of the array of references (labels) attribute. <br>
  Standard_EXPORT   static const Standard_GUID& GetID() ;
  //! Finds or creates an array of reference values (labels) attribute. <br>
  Standard_EXPORT   static  Handle_TDataStd_ReferenceArray Set(const TDF_Label& label,const Standard_Integer lower,const Standard_Integer upper) ;
  //! Initialize the inner array with bounds from <lower> to <upper> <br>
  Standard_EXPORT     void Init(const Standard_Integer lower,const Standard_Integer upper) ;
  //! Sets the <Index>th element of the array to <Value> <br>
  Standard_EXPORT     void SetValue(const Standard_Integer index,const TDF_Label& value) ;
  //! Returns the value of the <Index>th element of the array. <br>
  Standard_EXPORT     TDF_Label Value(const Standard_Integer Index) const;
    TDF_Label operator ()(const Standard_Integer Index) const
{
  return Value(Index);
}
  //! Returns the lower boundary of the array. <br>
  Standard_EXPORT     Standard_Integer Lower() const;
  //! Returns the upper boundary of the array. <br>
  Standard_EXPORT     Standard_Integer Upper() const;
  //! Returns the number of elements in the array. <br>
  Standard_EXPORT     Standard_Integer Length() const;
  
  Standard_EXPORT    const Handle_TDataStd_HLabelArray1& InternalArray() const;
  
  Standard_EXPORT     void SetInternalArray(const Handle(TDataStd_HLabelArray1)& values,const Standard_Boolean isCheckItems = Standard_True) ;
  
  Standard_EXPORT   TDataStd_ReferenceArray();
  
  Standard_EXPORT    const Standard_GUID& ID() const;
  
  Standard_EXPORT     void Restore(const Handle(TDF_Attribute)& With) ;
  
  Standard_EXPORT     Handle_TDF_Attribute NewEmpty() const;
  
  Standard_EXPORT     void Paste(const Handle(TDF_Attribute)& Into,const Handle(TDF_RelocationTable)& RT) const;
  
  Standard_EXPORT   virtual  void References(const Handle(TDF_DataSet)& DS) const;
  
  Standard_EXPORT   virtual  Standard_OStream& Dump(Standard_OStream& anOS) const;




  DEFINE_STANDARD_RTTI(TDataStd_ReferenceArray)

protected:




private: 


Handle_TDataStd_HLabelArray1 myArray;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
