// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StepGeom_BSplineSurface_HeaderFile
#define _StepGeom_BSplineSurface_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_StepGeom_BSplineSurface_HeaderFile
#include <Handle_StepGeom_BSplineSurface.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_StepGeom_HArray2OfCartesianPoint_HeaderFile
#include <Handle_StepGeom_HArray2OfCartesianPoint.hxx>
#endif
#ifndef _StepGeom_BSplineSurfaceForm_HeaderFile
#include <StepGeom_BSplineSurfaceForm.hxx>
#endif
#ifndef _StepData_Logical_HeaderFile
#include <StepData_Logical.hxx>
#endif
#ifndef _StepGeom_BoundedSurface_HeaderFile
#include <StepGeom_BoundedSurface.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Handle_StepGeom_CartesianPoint_HeaderFile
#include <Handle_StepGeom_CartesianPoint.hxx>
#endif
class StepGeom_HArray2OfCartesianPoint;
class TCollection_HAsciiString;
class StepGeom_CartesianPoint;



class StepGeom_BSplineSurface : public StepGeom_BoundedSurface {

public:

  //! Returns a BSplineSurface <br>
  Standard_EXPORT   StepGeom_BSplineSurface();
  
  Standard_EXPORT   virtual  void Init(const Handle(TCollection_HAsciiString)& aName) ;
  
  Standard_EXPORT   virtual  void Init(const Handle(TCollection_HAsciiString)& aName,const Standard_Integer aUDegree,const Standard_Integer aVDegree,const Handle(StepGeom_HArray2OfCartesianPoint)& aControlPointsList,const StepGeom_BSplineSurfaceForm aSurfaceForm,const StepData_Logical aUClosed,const StepData_Logical aVClosed,const StepData_Logical aSelfIntersect) ;
  
  Standard_EXPORT     void SetUDegree(const Standard_Integer aUDegree) ;
  
  Standard_EXPORT     Standard_Integer UDegree() const;
  
  Standard_EXPORT     void SetVDegree(const Standard_Integer aVDegree) ;
  
  Standard_EXPORT     Standard_Integer VDegree() const;
  
  Standard_EXPORT     void SetControlPointsList(const Handle(StepGeom_HArray2OfCartesianPoint)& aControlPointsList) ;
  
  Standard_EXPORT     Handle_StepGeom_HArray2OfCartesianPoint ControlPointsList() const;
  
  Standard_EXPORT     Handle_StepGeom_CartesianPoint ControlPointsListValue(const Standard_Integer num1,const Standard_Integer num2) const;
  
  Standard_EXPORT     Standard_Integer NbControlPointsListI() const;
  
  Standard_EXPORT     Standard_Integer NbControlPointsListJ() const;
  
  Standard_EXPORT     void SetSurfaceForm(const StepGeom_BSplineSurfaceForm aSurfaceForm) ;
  
  Standard_EXPORT     StepGeom_BSplineSurfaceForm SurfaceForm() const;
  
  Standard_EXPORT     void SetUClosed(const StepData_Logical aUClosed) ;
  
  Standard_EXPORT     StepData_Logical UClosed() const;
  
  Standard_EXPORT     void SetVClosed(const StepData_Logical aVClosed) ;
  
  Standard_EXPORT     StepData_Logical VClosed() const;
  
  Standard_EXPORT     void SetSelfIntersect(const StepData_Logical aSelfIntersect) ;
  
  Standard_EXPORT     StepData_Logical SelfIntersect() const;




  DEFINE_STANDARD_RTTI(StepGeom_BSplineSurface)

protected:




private: 


Standard_Integer uDegree;
Standard_Integer vDegree;
Handle_StepGeom_HArray2OfCartesianPoint controlPointsList;
StepGeom_BSplineSurfaceForm surfaceForm;
StepData_Logical uClosed;
StepData_Logical vClosed;
StepData_Logical selfIntersect;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
