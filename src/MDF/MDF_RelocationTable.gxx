// Created by: DAUTRY Philippe
// Copyright (c) 1997-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

//      	-----------------------

// Version:	0.0
//Version	Date		Purpose
//		0.0	May  7 1997	Creation



#include TheSourceType_hxx
#include TheTargetType_hxx
#include TheOtherSourceType_hxx
#include TheOtherTargetType_hxx



//=======================================================================
//function : MDF_RelocationTable
//purpose  : 
//=======================================================================

MDF_RelocationTable::MDF_RelocationTable(const Standard_Boolean theSelfRelocation):mySelfRelocation(theSelfRelocation) {}

//=======================================================================
//function : SetSelfRelocation
//purpose  : 
//=======================================================================

void MDF_RelocationTable::SetSelfRelocation(const Standard_Boolean theStatus) {
  mySelfRelocation = theStatus;
}

//=======================================================================
//function : IsSelfRelocation
//purpose  : 
//=======================================================================

Standard_Boolean MDF_RelocationTable::IsSelfRelocation() const {
  return mySelfRelocation;
}

//=======================================================================
//function : SetRelocation
//purpose  : 
//=======================================================================

void MDF_RelocationTable::SetRelocation
(const TheSourceType& aSourceAttribute,
 const TheTargetType& aTargetAttribute) 
{ myAttributeTable.Bind (aSourceAttribute, aTargetAttribute); }



//=======================================================================
//function : HasRelocation
//purpose  : 
//=======================================================================

Standard_Boolean MDF_RelocationTable::HasRelocation
(const TheSourceType& aSourceAttribute,
 TheTargetType&       aTargetAttribute) 
{
  Standard_Boolean isFound = myAttributeTable.IsBound (aSourceAttribute);
  if (isFound) aTargetAttribute = TheTargetType::DownCast(myAttributeTable.Find(aSourceAttribute));
  else if (mySelfRelocation) isFound = Standard_True;
  return isFound;
}


//=======================================================================
//function : SetOtherRelocation
//purpose  : 
//=======================================================================

void MDF_RelocationTable::SetOtherRelocation
(const TheOtherSourceType& aSource,
 const TheOtherTargetType& aTarget) 
{ myOtherTable.Bind (aSource, aTarget); }


//=======================================================================
//function : HasOtherRelocation
//purpose  : 
//=======================================================================

Standard_Boolean MDF_RelocationTable::HasOtherRelocation
(const TheOtherSourceType& aSource,
 TheOtherTargetType&      aTarget) 
{
  Standard_Boolean isFound = myOtherTable.IsBound (aSource);
  if (isFound) aTarget = myOtherTable.Find (aSource);
  else if (mySelfRelocation) isFound = Standard_True;
  return isFound;
}


//=======================================================================
//function : AttributeTable
//purpose  : 
//=======================================================================

TheMapType& MDF_RelocationTable::AttributeTable()
{ return myAttributeTable; }

 
//=======================================================================
//function : OtherTable
//purpose  : 
//=======================================================================

TheMapType& MDF_RelocationTable::OtherTable()
{ return myOtherTable; }

 
