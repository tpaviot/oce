// Created on: 1993-06-03
// Created by: Jacques GOUSSARD
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <StdFail_UndefinedDerivative.hxx>

inline void Contap_SurfFunction::Set(const gp_Pnt& Eye)
{
  myType = Contap_ContourPrs; // pers
  myEye = Eye;
  myAng = 0.;
}

inline void Contap_SurfFunction::Set(const gp_Dir& Direction)
{
  myType = Contap_ContourStd; // Contour app
  myDir = Direction;
  myAng = 0.;
}

inline void Contap_SurfFunction::Set(const gp_Dir& Direction,
				     const Standard_Real Angle)
{
  myType = Contap_DraftStd; // Contour vu
  myDir = Direction;
  myAng = Angle;
  myCosAng = Cos(M_PI/2.+Angle);
}

inline void Contap_SurfFunction::Set(const gp_Pnt& Eye,
				     const Standard_Real Angle)
{
  myType = Contap_DraftPrs; // Contour vu "conique"...
  myEye = Eye;
  myAng = Angle;
  myCosAng = Cos(M_PI/2.+Angle);
}

inline void Contap_SurfFunction::Set(const Standard_Real Tolerance)
{
  tol = Max(Tolerance, 1.e-12);
}

inline const gp_Pnt& Contap_SurfFunction::Point () const
{
  return solpt;
}

inline Standard_Real Contap_SurfFunction::Root () const
{
  return valf;
}

inline Standard_Real Contap_SurfFunction::Tolerance () const
{
  return tol;
}

inline const gp_Vec& Contap_SurfFunction::Direction3d()
{
  if (IsTangent()) StdFail_UndefinedDerivative::Raise();       
  return d3d;
}

inline const gp_Dir2d& Contap_SurfFunction::Direction2d()
{
  if (IsTangent()) StdFail_UndefinedDerivative::Raise();       
  return d2d;
}

inline const TheSurface& Contap_SurfFunction::Surface() const
{
  return mySurf;
}

inline const gp_Pnt& Contap_SurfFunction::Eye() const
{
  return myEye;
}

inline const gp_Dir& Contap_SurfFunction::Direction() const
{
  return myDir;
}

inline Standard_Real Contap_SurfFunction::Angle () const
{
  return myAng;
}

inline Contap_TFunction Contap_SurfFunction::FunctionType () const
{
  return myType;
}
