// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Materials_Material_HeaderFile
#define _Materials_Material_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Materials_Material_HeaderFile
#include <Handle_Materials_Material.hxx>
#endif

#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Materials_FuzzyInstance_HeaderFile
#include <Materials_FuzzyInstance.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
class TCollection_HAsciiString;
class TCollection_AsciiString;


//! This  class describes  the facilities available to <br>
//!          create and manipulate materials. <br>
class Materials_Material : public Materials_FuzzyInstance {

public:

  //! Creates the material <amaterial>. <br>
  Standard_EXPORT   Materials_Material(const Standard_CString amaterial);
  //! Returns the name of the material. <br>
  Standard_EXPORT     TCollection_AsciiString Name() const;
  //! Useful for debugging. <br>
  Standard_EXPORT   virtual  void Dump(Standard_OStream& astream) const;




  DEFINE_STANDARD_RTTI(Materials_Material)

protected:




private: 


Handle_TCollection_HAsciiString thematerial;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
