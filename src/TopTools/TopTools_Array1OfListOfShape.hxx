// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TopTools_Array1OfListOfShape_HeaderFile
#define _TopTools_Array1OfListOfShape_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_RangeError;
class Standard_DimensionMismatch;
class Standard_OutOfRange;
class Standard_OutOfMemory;
class TopTools_ListOfShape;



class TopTools_Array1OfListOfShape  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   TopTools_Array1OfListOfShape(const Standard_Integer Low,const Standard_Integer Up);
  
  Standard_EXPORT   TopTools_Array1OfListOfShape(const TopTools_ListOfShape& Item,const Standard_Integer Low,const Standard_Integer Up);
  
  Standard_EXPORT     void Init(const TopTools_ListOfShape& V) ;
  
  Standard_EXPORT     void Destroy() ;
~TopTools_Array1OfListOfShape()
{
  Destroy();
}
  
        Standard_Boolean IsAllocated() const;
  
  Standard_EXPORT    const TopTools_Array1OfListOfShape& Assign(const TopTools_Array1OfListOfShape& Other) ;
   const TopTools_Array1OfListOfShape& operator =(const TopTools_Array1OfListOfShape& Other) 
{
  return Assign(Other);
}
  
        Standard_Integer Length() const;
  
        Standard_Integer Lower() const;
  
        Standard_Integer Upper() const;
  
        void SetValue(const Standard_Integer Index,const TopTools_ListOfShape& Value) ;
  
       const TopTools_ListOfShape& Value(const Standard_Integer Index) const;
     const TopTools_ListOfShape& operator ()(const Standard_Integer Index) const
{
  return Value(Index);
}
  
        TopTools_ListOfShape& ChangeValue(const Standard_Integer Index) ;
      TopTools_ListOfShape& operator ()(const Standard_Integer Index) 
{
  return ChangeValue(Index);
}





protected:





private:

  
  Standard_EXPORT   TopTools_Array1OfListOfShape(const TopTools_Array1OfListOfShape& AnArray);


Standard_Integer myLowerBound;
Standard_Integer myUpperBound;
Standard_Address myStart;
Standard_Boolean isAllocated;


};

#define Array1Item TopTools_ListOfShape
#define Array1Item_hxx <TopTools_ListOfShape.hxx>
#define TCollection_Array1 TopTools_Array1OfListOfShape
#define TCollection_Array1_hxx <TopTools_Array1OfListOfShape.hxx>

#include <TCollection_Array1.lxx>

#undef Array1Item
#undef Array1Item_hxx
#undef TCollection_Array1
#undef TCollection_Array1_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
