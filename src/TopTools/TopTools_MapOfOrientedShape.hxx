// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TopTools_MapOfOrientedShape_HeaderFile
#define _TopTools_MapOfOrientedShape_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _TCollection_BasicMap_HeaderFile
#include <TCollection_BasicMap.hxx>
#endif
#ifndef _Handle_TopTools_StdMapNodeOfMapOfOrientedShape_HeaderFile
#include <Handle_TopTools_StdMapNodeOfMapOfOrientedShape.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_DomainError;
class TopoDS_Shape;
class TopTools_OrientedShapeMapHasher;
class TopTools_StdMapNodeOfMapOfOrientedShape;
class TopTools_MapIteratorOfMapOfOrientedShape;



class TopTools_MapOfOrientedShape  : public TCollection_BasicMap {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   TopTools_MapOfOrientedShape(const Standard_Integer NbBuckets = 1);
  
  Standard_EXPORT     TopTools_MapOfOrientedShape& Assign(const TopTools_MapOfOrientedShape& Other) ;
    TopTools_MapOfOrientedShape& operator =(const TopTools_MapOfOrientedShape& Other) 
{
  return Assign(Other);
}
  
  Standard_EXPORT     void ReSize(const Standard_Integer NbBuckets) ;
  
  Standard_EXPORT     void Clear() ;
~TopTools_MapOfOrientedShape()
{
  Clear();
}
  
  Standard_EXPORT     Standard_Boolean Add(const TopoDS_Shape& aKey) ;
  
  Standard_EXPORT     Standard_Boolean Contains(const TopoDS_Shape& aKey) const;
  
  Standard_EXPORT     Standard_Boolean Remove(const TopoDS_Shape& aKey) ;





protected:





private:

  
  Standard_EXPORT   TopTools_MapOfOrientedShape(const TopTools_MapOfOrientedShape& Other);




};





// other Inline functions and methods (like "C++: function call" methods)


#endif
