// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Aspect_FontMapEntry_HeaderFile
#define _Aspect_FontMapEntry_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Aspect_FontStyle_HeaderFile
#include <Aspect_FontStyle.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_OutOfRange;
class Aspect_BadAccess;
class Aspect_FontStyle;


//! This class defines a fontmap entry. <br>
//!	    A fontmap entry is an association beetwen <br>
//!	    a FontStyle object and an index in the fontmap. <br>
class Aspect_FontMapEntry  {
public:

  DEFINE_STANDARD_ALLOC

  //! Creates an unallocated fontmap entry <br>
  Standard_EXPORT   Aspect_FontMapEntry();
  //! Creates an allocated fontmap entry <br>
  Standard_EXPORT   Aspect_FontMapEntry(const Standard_Integer index,const Aspect_FontStyle& style);
  //! Creates an allocated fontmap entry. <br>
//!  Warning: Raises error if the fontmap entry <entry> is unallocated. <br>
  Standard_EXPORT   Aspect_FontMapEntry(const Aspect_FontMapEntry& entry);
  //! Sets fontmap entry value and allocates it. <br>
  Standard_EXPORT     void SetValue(const Standard_Integer index,const Aspect_FontStyle& style) ;
  //! Sets fontmap entry value and allocates it. <br>
  Standard_EXPORT     void SetValue(const Aspect_FontMapEntry& entry) ;
    void operator =(const Aspect_FontMapEntry& entry) 
{
  SetValue(entry);
}
  //! Sets the line style of fontmap entry. <br>
  Standard_EXPORT     void SetType(const Aspect_FontStyle& Style) ;
  
  Standard_EXPORT    const Aspect_FontStyle& Type() const;
  //! Sets index value of a fontmap entry. <br>
  Standard_EXPORT     void SetIndex(const Standard_Integer index) ;
  
  Standard_EXPORT     Standard_Integer Index() const;
  //! Unallocates the fontmap entry. <br>
  Standard_EXPORT     void Free() ;
  //! Returns True if the fontmap entry is allocated. <br>
//!  Warning: A fontmap entry is allocated when the font and <br>
//!	    the index is defined. <br>
  Standard_EXPORT     Standard_Boolean IsAllocated() const;
  
  Standard_EXPORT     void Dump() const;





protected:





private:



Aspect_FontStyle MyType;
Standard_Integer MyIndex;
Standard_Boolean MyTypeIsDef;
Standard_Boolean MyIndexIsDef;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
