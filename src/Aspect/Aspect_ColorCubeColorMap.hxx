// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Aspect_ColorCubeColorMap_HeaderFile
#define _Aspect_ColorCubeColorMap_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Aspect_ColorCubeColorMap_HeaderFile
#include <Handle_Aspect_ColorCubeColorMap.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Aspect_ColorMap_HeaderFile
#include <Aspect_ColorMap.hxx>
#endif
class Aspect_BadAccess;
class Standard_RangeError;
class Aspect_ColorMapEntry;
class Quantity_Color;


//! This class defines a ColorCube ColorMap object. <br>
class Aspect_ColorCubeColorMap : public Aspect_ColorMap {

public:

  //! Create a ColorCube ColorMap. <br>
  Standard_EXPORT   Aspect_ColorCubeColorMap(const Standard_Integer base_pixel,const Standard_Integer redmax,const Standard_Integer redmult,const Standard_Integer greenmax,const Standard_Integer greenmult,const Standard_Integer bluemax,const Standard_Integer bluemult);
  
  Standard_EXPORT     void ColorCubeDefinition(Standard_Integer& base_pixel,Standard_Integer& redmax,Standard_Integer& redmult,Standard_Integer& greenmax,Standard_Integer& greenmult,Standard_Integer& bluemax,Standard_Integer& bluemult) const;
  //! Returns the index in the ColorMap of the <br>
//!	    ColorMapEntry.Index() equal to <AnEntryIndex>. <br>
//!  Warning: Raises BadAccess if the index is not defined in the <br>
//!	    ColorMap. <br>
  Standard_EXPORT     Standard_Integer FindColorMapIndex(const Standard_Integer AColorMapEntryIndex) const;
  //! Returns the ColorMapEntry with ColorMapEntry.Index() <br>
//!	    equal to <AnEntryIndex>. <br>
//!  Warning: Raises BadAccess if the index is not defined in the <br>
//!	    ColorMap. <br>
  Standard_EXPORT    const Aspect_ColorMapEntry& FindEntry(const Standard_Integer AColorMapEntryIndex) const;
  //! Returns the index in the ColorMap of the nearest <br>
//!	    matching ColorMapEntry <br>
  Standard_EXPORT     Standard_Integer NearestColorMapIndex(const Quantity_Color& aColor) const;
  //! Returns the nearest ColorMapEntry that match aColor . <br>
  Standard_EXPORT    const Aspect_ColorMapEntry& NearestEntry(const Quantity_Color& aColor) const;
  //! Search an identical color entry in the color map <me> <br>
//! or returns the nearest ColorMapEntry Index. <br>
  Standard_EXPORT     Standard_Integer AddEntry(const Quantity_Color& aColor) ;




  DEFINE_STANDARD_RTTI(Aspect_ColorCubeColorMap)

protected:




private: 


Standard_Integer mybasepixel;
Standard_Integer mygreenmax;
Standard_Integer mygreenmult;
Standard_Integer myredmax;
Standard_Integer myredmult;
Standard_Integer mybluemax;
Standard_Integer mybluemult;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
