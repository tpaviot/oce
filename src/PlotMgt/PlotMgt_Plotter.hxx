// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _PlotMgt_Plotter_HeaderFile
#define _PlotMgt_Plotter_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_PlotMgt_Plotter_HeaderFile
#include <Handle_PlotMgt_Plotter.hxx>
#endif

#ifndef _TCollection_AsciiString_HeaderFile
#include <TCollection_AsciiString.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_PlotMgt_HListOfPlotterParameter_HeaderFile
#include <Handle_PlotMgt_HListOfPlotterParameter.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfAsciiString.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfInteger_HeaderFile
#include <Handle_TColStd_HSequenceOfInteger.hxx>
#endif
#ifndef _Handle_Aspect_GenericColorMap_HeaderFile
#include <Handle_Aspect_GenericColorMap.hxx>
#endif
#ifndef _Handle_Aspect_WidthMap_HeaderFile
#include <Handle_Aspect_WidthMap.hxx>
#endif
#ifndef _Handle_Aspect_TypeMap_HeaderFile
#include <Handle_Aspect_TypeMap.hxx>
#endif
#ifndef _Handle_Aspect_FontMap_HeaderFile
#include <Handle_Aspect_FontMap.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_PlotMgt_PlotterParameter_HeaderFile
#include <Handle_PlotMgt_PlotterParameter.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _PlotMgt_TypeOfOrigin_HeaderFile
#include <PlotMgt_TypeOfOrigin.hxx>
#endif
#ifndef _PlotMgt_TypeOfQuality_HeaderFile
#include <PlotMgt_TypeOfQuality.hxx>
#endif
#ifndef _PlotMgt_ImageFormat_HeaderFile
#include <PlotMgt_ImageFormat.hxx>
#endif
#ifndef _PlotMgt_PlottingType_HeaderFile
#include <PlotMgt_PlottingType.hxx>
#endif
#ifndef _PlotMgt_PaperFormat_HeaderFile
#include <PlotMgt_PaperFormat.hxx>
#endif
#ifndef _Handle_Aspect_ColorMap_HeaderFile
#include <Handle_Aspect_ColorMap.hxx>
#endif
class PlotMgt_HListOfPlotterParameter;
class TColStd_HSequenceOfAsciiString;
class TColStd_HSequenceOfInteger;
class Aspect_GenericColorMap;
class Aspect_WidthMap;
class Aspect_TypeMap;
class Aspect_FontMap;
class TCollection_AsciiString;
class PlotMgt_PlotterParameter;
class Aspect_ColorMap;



class PlotMgt_Plotter : public MMgt_TShared {

public:

  //! Create class instance <br>
  Standard_EXPORT   PlotMgt_Plotter(const TCollection_AsciiString& theName,const Standard_Boolean fDirectDevice = Standard_False);
  //! Checks if the plotter configured properly. <br>
  Standard_EXPORT     Standard_Boolean CheckConfig(const Standard_Boolean theViewIs2D) ;
  
  Standard_EXPORT     Standard_Boolean Load() ;
  
  Standard_EXPORT     Standard_Boolean Save() ;
  
  Standard_EXPORT     Standard_Boolean SaveAs(const TCollection_AsciiString& aNewName) ;
  
  Standard_EXPORT     Standard_Boolean NeedToBeSaved() const;
  //! Returns list of active plotters (and inactive if <br>
//!          <anActiveOnly> = Standared_False). <br>
  Standard_EXPORT   static  Handle_TColStd_HSequenceOfAsciiString ListPlotters(const Standard_Boolean anActiveOnly = Standard_True) ;
  
  Standard_EXPORT     void Dump() ;
  
  Standard_EXPORT     Standard_Integer NumberOfParameters() ;
  
  Standard_EXPORT    const Handle_PlotMgt_PlotterParameter& Parameter(const Standard_Integer anIndex) ;
  
  Standard_EXPORT     TCollection_AsciiString Name() ;
  
  Standard_EXPORT     TCollection_AsciiString Model() ;
  
  Standard_EXPORT     TCollection_AsciiString Title() ;
  
  Standard_EXPORT     TCollection_AsciiString FileExtension() ;
  
  Standard_EXPORT     TCollection_AsciiString PrintCommand() ;
  
  Standard_EXPORT     TCollection_AsciiString BeforePrintCommand() ;
  
  Standard_EXPORT     TCollection_AsciiString AfterPrintCommand() ;
  
  Standard_EXPORT     TCollection_AsciiString Comments() ;
  
  Standard_EXPORT     TCollection_AsciiString BackDraw() ;
  
  Standard_EXPORT     TCollection_AsciiString ColorMapping() ;
  
  Standard_EXPORT     TCollection_AsciiString OutputFormat() ;
  
  Standard_EXPORT     TCollection_AsciiString DriverType() ;
  
  Standard_EXPORT     Standard_Boolean MirrorPlot() ;
  
  Standard_EXPORT     Standard_Boolean MultiSheet() ;
  
  Standard_EXPORT     Standard_Boolean FramePlot() ;
  
  Standard_EXPORT     Standard_Boolean PlotTitle() ;
  
  Standard_EXPORT     Standard_Boolean PlotComments() ;
  
  Standard_EXPORT     Standard_Boolean PlotBackDraw() ;
  
  Standard_EXPORT     Standard_Boolean PlotterColor() ;
  
  Standard_EXPORT     Standard_Boolean EndOfPlotDriven() ;
  
  Standard_EXPORT     Standard_Boolean DryTimeDriven() ;
  
  Standard_EXPORT     Standard_Boolean PaperFeedDriven() ;
  
  Standard_EXPORT     Standard_Boolean MirrorDriven() ;
  
  Standard_EXPORT     Standard_Boolean CheckSumDriven() ;
  
  Standard_EXPORT     Standard_Boolean MediaSaverDriven() ;
  
  Standard_EXPORT     Standard_Boolean QualityDriven() ;
  
  Standard_EXPORT     Standard_Boolean CopyDriven() ;
  
  Standard_EXPORT     Standard_Boolean PaperCutDriven() ;
  
  Standard_EXPORT     Standard_Boolean RotateDriven() ;
  
  Standard_EXPORT     Standard_Boolean CircleDriven() ;
  
  Standard_EXPORT     Standard_Boolean EllipseDriven() ;
  
  Standard_EXPORT     Standard_Boolean CurveDriven() ;
  
  Standard_EXPORT     Standard_Boolean TextDriven() ;
  
  Standard_EXPORT     Standard_Boolean MarkerDriven() ;
  
  Standard_EXPORT     Standard_Boolean RectangleDriven() ;
  
  Standard_EXPORT     Standard_Boolean FillDriven() ;
  
  Standard_EXPORT     Standard_Boolean PlottingColor() ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfAsciiString ListOfPaperFormats() ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfAsciiString ListOfOrigins() ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfAsciiString ListOfQualities() ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfAsciiString ListOfImageFormats() ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfAsciiString ListOfColorMappings() ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfAsciiString ListOfOutputFormats() ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfAsciiString ListOfDriverTypes() ;
  
  Standard_EXPORT     Standard_Real PaperWidth() ;
  
  Standard_EXPORT     Standard_Real PaperLength() ;
  
  Standard_EXPORT     void PaperSize(Standard_Real& aWidth,Standard_Real& aLength) ;
  
  Standard_EXPORT     void HardMargins(Standard_Real& aLeft,Standard_Real& aTop,Standard_Real& aRight,Standard_Real& aBottom) ;
  
  Standard_EXPORT     void Margins(Standard_Real& aLeft,Standard_Real& aTop,Standard_Real& aRight,Standard_Real& aBottom) ;
  
  Standard_EXPORT     void HardMappings(Standard_Real& aWOffset,Standard_Real& aWScale,Standard_Real& anLOffset,Standard_Real& anLScale) ;
  
  Standard_EXPORT     Standard_Real SpaceDrawing() ;
  
  Standard_EXPORT     Standard_Real PhysicalStep() ;
  
  Standard_EXPORT     Standard_Real MinWidthOfLine() ;
  
  Standard_EXPORT     Standard_Real WidthMaxGap() ;
  
  Standard_EXPORT     Standard_Real LineTypeMaxGap() ;
  
  Standard_EXPORT     Standard_Real Resolution() ;
  
  Standard_EXPORT     Standard_Real ColorResolution() ;
  
  Standard_EXPORT     Standard_Real FillWidth() ;
  
  Standard_EXPORT     Standard_Integer MediaSaverDelay() ;
  
  Standard_EXPORT     Standard_Integer NumberOfCopies() ;
  
  Standard_EXPORT     Standard_Integer DryTime() ;
  
  Standard_EXPORT     Standard_Integer EndOfPlotTimer() ;
  
  Standard_EXPORT     Standard_Integer MaxColors() ;
  
  Standard_EXPORT     Standard_Integer MaxPatterns() ;
  
  Standard_EXPORT     Standard_Integer ColorMaxGap() ;
  
  Standard_EXPORT     Standard_Integer LinearDensity() ;
  
  Standard_EXPORT     Standard_Integer StylusNumber() ;
  
  Standard_EXPORT     Standard_Integer PenMaxNumber() ;
  
  Standard_EXPORT     Standard_Integer NumberInCarrousel() ;
  
  Standard_EXPORT     PlotMgt_TypeOfOrigin Origin() ;
  
  Standard_EXPORT     PlotMgt_TypeOfQuality Quality() ;
  
  Standard_EXPORT     PlotMgt_ImageFormat ImageFormat() ;
  
  Standard_EXPORT     PlotMgt_PlottingType PlottingType() ;
  
  Standard_EXPORT     PlotMgt_PaperFormat PaperFormat() ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfInteger PenColorIndex() ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfInteger PenWidthIndex() ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfInteger PenTypeIndex() ;
  
  Standard_EXPORT     Handle_Aspect_ColorMap ColorMap() ;
  
  Standard_EXPORT     Handle_Aspect_WidthMap WidthMap() ;
  
  Standard_EXPORT     Handle_Aspect_TypeMap TypeMap() ;
  
  Standard_EXPORT     Handle_Aspect_FontMap FontMap() ;
  
  Standard_EXPORT     Handle_Aspect_FontMap AllFonts() ;
  
  Standard_EXPORT     void SetModel(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetTitle(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetFileExtension(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetPrintCommand(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetBeforePrintCommand(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetAfterPrintCommand(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetComments(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetBackDraw(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetPaperFormat(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetColorMapping(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetOutputFormat(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetDriverType(const TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     void SetMirrorPlot(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetMultiSheet(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetFramePlot(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetPlotTitle(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetPlotComments(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetPlotBackDraw(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetPlotterColor(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetEndOfPlotDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetDryTimeDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetPaperFeedDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetMirrorDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetCheckSumDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetMediaSaverDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetQualityDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetCopyDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetPaperCutDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetRotateDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetCircleDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetEllipseDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetCurveDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetTextDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetMarkerDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetRectangleDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetFillDriven(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetPlottingColor(const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetPaperWidth(const Standard_Real aValue) ;
  
  Standard_EXPORT     void SetPaperLength(const Standard_Real aValue) ;
  
  Standard_EXPORT     void SetPaperSize(const Standard_Real aWidth,const Standard_Real aLength) ;
  
  Standard_EXPORT     void SetHardMargins(const Standard_Real aLeft,const Standard_Real aTop,const Standard_Real aRight,const Standard_Real aBottom) ;
  
  Standard_EXPORT     void SetMargins(const Standard_Real aLeft,const Standard_Real aTop,const Standard_Real aRight,const Standard_Real aBottom) ;
  
  Standard_EXPORT     void SetHardMappings(const Standard_Real aWOffset,const Standard_Real aWScale,const Standard_Real anLOffset,const Standard_Real anLScale) ;
  
  Standard_EXPORT     void SetSpaceDrawing(const Standard_Real aValue) ;
  
  Standard_EXPORT     void SetPhysicalStep(const Standard_Real aValue) ;
  
  Standard_EXPORT     void SetMinWidthOfLine(const Standard_Real aValue) ;
  
  Standard_EXPORT     void SetWidthMaxGap(const Standard_Real aValue) ;
  
  Standard_EXPORT     void SetLineTypeMaxGap(const Standard_Real aValue) ;
  
  Standard_EXPORT     void SetResolution(const Standard_Real aValue) ;
  
  Standard_EXPORT     void SetColorResolution(const Standard_Real aValue) ;
  
  Standard_EXPORT     void SetFillWidth(const Standard_Real aValue) ;
  
  Standard_EXPORT     void SetMediaSaverDelay(const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetNumberOfCopies(const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetDryTime(const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetEndOfPlotTimer(const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetMaxColors(const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetMaxPatterns(const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetColorMaxGap(const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetLinearDensity(const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetStylusNumber(const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetPenMaxNumber(const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetNumberInCarrousel(const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetOrigin(const PlotMgt_TypeOfOrigin anOrigin) ;
  
  Standard_EXPORT     void SetQuality(const PlotMgt_TypeOfQuality aQuality) ;
  
  Standard_EXPORT     void SetImageFormat(const PlotMgt_ImageFormat anImageFormat) ;
  
  Standard_EXPORT     void SetPlottingType(const PlotMgt_PlottingType aPlottingType) ;
  
  Standard_EXPORT     void SetPaperFormat(const PlotMgt_PaperFormat aPaperFormat) ;
  
  Standard_EXPORT     void SetPenColorIndex(const Handle(TColStd_HSequenceOfInteger)& aTable) ;
  
  Standard_EXPORT     void SetPenWidthIndex(const Handle(TColStd_HSequenceOfInteger)& aTable) ;
  
  Standard_EXPORT     void SetPenTypeIndex(const Handle(TColStd_HSequenceOfInteger)& aTable) ;
  
  Standard_EXPORT     void SetColorMap(const Handle(Aspect_ColorMap)& aColorMap) ;
  
  Standard_EXPORT     void SetWidthMap(const Handle(Aspect_WidthMap)& aWidthMap) ;
  
  Standard_EXPORT     void SetTypeMap(const Handle(Aspect_TypeMap)& aTypeMap) ;
  
  Standard_EXPORT     void SetFontMap(const Handle(Aspect_FontMap)& aFontMap) ;




  DEFINE_STANDARD_RTTI(PlotMgt_Plotter)

protected:




private: 

  
  Standard_EXPORT     Standard_Boolean SavePlotter() ;
  
  Standard_EXPORT     Standard_Boolean ReadParametersFromFile(const TCollection_AsciiString& aFileName,const Standard_Boolean fChangeState) ;
  
  Standard_EXPORT     Standard_Integer FindParameter(const TCollection_AsciiString& aName) ;
  
  Standard_EXPORT     void GetStringValue(const Standard_CString aParam,TCollection_AsciiString& aValue) ;
  
  Standard_EXPORT     Standard_Boolean GetBooleanValue(const Standard_CString aParam) ;
  
  Standard_EXPORT     Standard_Integer GetIntegerValue(const Standard_CString aParam) ;
  
  Standard_EXPORT     Standard_Real GetRealValue(const Standard_CString aParam) ;
  
  Standard_EXPORT     void GetListValue(const Standard_CString aParam,Handle(TColStd_HSequenceOfAsciiString)& aList) ;
  
  Standard_EXPORT     void GetIntTable(const Standard_CString aParam,Handle(TColStd_HSequenceOfInteger)& aTable) ;
  
  Standard_EXPORT     void SetStringValue(const Standard_CString aParam,TCollection_AsciiString& anOldValue,const TCollection_AsciiString& aNewValue) ;
  
  Standard_EXPORT     void SetBooleanValue(const Standard_CString aParam,const Standard_Boolean aValue) ;
  
  Standard_EXPORT     void SetIntegerValue(const Standard_CString aParam,const Standard_Integer aValue) ;
  
  Standard_EXPORT     void SetRealValue(const Standard_CString aParam,const Standard_Real aValue) ;
  
  Standard_EXPORT     void SetIntTable(const Standard_CString aParam,const Handle(TColStd_HSequenceOfInteger)& aTable) ;

TCollection_AsciiString myName;
TCollection_AsciiString myModelName;
TCollection_AsciiString mySystemName;
TCollection_AsciiString myModelSystemName;
Standard_Boolean myDirectDevice;
Standard_Boolean myIsLoaded;
Handle_PlotMgt_HListOfPlotterParameter myParameters;
TCollection_AsciiString myConfigVer;
TCollection_AsciiString myModel;
TCollection_AsciiString myTitle;
TCollection_AsciiString myExtension;
TCollection_AsciiString myBeforeCommand;
TCollection_AsciiString myAfterCommand;
TCollection_AsciiString myPrintCommand;
TCollection_AsciiString myComments;
TCollection_AsciiString myBackDraw;
TCollection_AsciiString myColorMapping;
TCollection_AsciiString myOutputFormat;
TCollection_AsciiString myDriverType;
Handle_TColStd_HSequenceOfAsciiString myListOfPaperFormats;
Handle_TColStd_HSequenceOfAsciiString myListOfOrigins;
Handle_TColStd_HSequenceOfAsciiString myListOfQualities;
Handle_TColStd_HSequenceOfAsciiString myListOfImageFormats;
Handle_TColStd_HSequenceOfAsciiString myListOfColorMappings;
Handle_TColStd_HSequenceOfAsciiString myListOfOutputFormats;
Handle_TColStd_HSequenceOfAsciiString myListOfDriverTypes;
Handle_TColStd_HSequenceOfInteger myPenColorIndex;
Handle_TColStd_HSequenceOfInteger myPenWidthIndex;
Handle_TColStd_HSequenceOfInteger myPenTypeIndex;
Handle_Aspect_GenericColorMap myColorMap;
Handle_Aspect_WidthMap myWidthMap;
Handle_Aspect_TypeMap myTypeMap;
Handle_Aspect_FontMap myFontMap;
Handle_Aspect_FontMap myAllFonts;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
