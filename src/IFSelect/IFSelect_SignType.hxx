// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IFSelect_SignType_HeaderFile
#define _IFSelect_SignType_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IFSelect_SignType_HeaderFile
#include <Handle_IFSelect_SignType.hxx>
#endif

#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _IFSelect_Signature_HeaderFile
#include <IFSelect_Signature.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
#ifndef _Handle_Interface_InterfaceModel_HeaderFile
#include <Handle_Interface_InterfaceModel.hxx>
#endif
class Standard_Transient;
class Interface_InterfaceModel;


//! This Signature returns the cdl Type of an entity, under two <br>
//!           forms : <br>
//!           - complete dynamic type (package and class) <br>
//!           - class type, without package name <br>
class IFSelect_SignType : public IFSelect_Signature {

public:

  //! Returns a SignType <br>
//!           <nopk> false (D) : complete dynamic type (name = Dynamic Type) <br>
//!           <nopk> true : class type without pk (name = Class Type) <br>
  Standard_EXPORT   IFSelect_SignType(const Standard_Boolean nopk = Standard_False);
  //! Returns the Signature for a Transient object, as its Dynamic <br>
//!           Type, with or without package name, according starting option <br>
  Standard_EXPORT     Standard_CString Value(const Handle(Standard_Transient)& ent,const Handle(Interface_InterfaceModel)& model) const;




  DEFINE_STANDARD_RTTI(IFSelect_SignType)

protected:




private: 


Standard_Boolean thenopk;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
