-- Created on: 1993-10-25
-- Created by: Jean Marc LACHAUME
-- Copyright (c) 1993-1999 Matra Datavision
-- Copyright (c) 1999-2012 OPEN CASCADE SAS
--
-- The content of this file is subject to the Open CASCADE Technology Public
-- License Version 6.5 (the "License"). You may not use the content of this file
-- except in compliance with the License. Please obtain a copy of the License
-- at http://www.opencascade.org and read it completely before using this file.
--
-- The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
-- main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
--
-- The Original Code and all software distributed under the License is
-- distributed on an "AS IS" basis, without warranty of any kind, and the
-- Initial Developer hereby disclaims all such warranties, including without
-- limitation, any warranties of merchantability, fitness for a particular
-- purpose or non-infringement. Please see the License for the specific terms
-- and conditions governing the rights and limitations under the License.


package HatchGen

uses
    IntRes2d ,
    StdFail ,
    TopAbs ,
    TCollection ,
    TColStd,
    gp,
    TopClass

is

    enumeration IntersectionType is

        ---Purpose: Intersection type between the hatching and the
        --          element.

       	TRUE ,
	TOUCH ,
    	TANGENT ,
	UNDETERMINED

    end IntersectionType from HatchGen ;


    enumeration ErrorStatus is
    
    	---Purpose: Error status.

    	NoProblem ,
    	TrimFailure ,
	TransitionFailure ,
	IncoherentParity ,
	IncompatibleStates
	
    end ErrorStatus from HatchGen ;


    deferred generic class Intersector ;

    deferred class IntersectionPoint ;

    class PointOnHatching ;
    class PointsOnHatching instantiates Sequence from TCollection
    	(PointOnHatching from HatchGen) ;

    class PointOnElement ;
    class PointsOnElement instantiates Sequence from TCollection
    	(PointOnElement) ;
	
    class Domain ;
    class Domains instantiates Sequence from TCollection
    	(Domain from HatchGen) ;
	
    generic class HatchingGen ;
    generic class ElementGen ;
    generic class ElementsGen,MapOfElements;
    
    generic class Hatcher ,
                  Hatching ,
    	    	  Hatchings ,
                  Element ,
                  Elements,
                  Classifier;


end HatchGen ;
