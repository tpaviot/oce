// Created on: 1993-11-03
// Created by: Jean Marc LACHAUME
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


//=======================================================================
// Function : HatchGen_ElementGen
// Purpose  : Magic Constructor.
//=======================================================================

HatchGen_ElementGen::HatchGen_ElementGen (const HatchGen_ElementGen& Other) 
: myCurve(Other.myCurve), myOrientation(Other.myOrientation) { 
}
  
//=======================================================================
// Function : HatchGen_ElementGen
// Purpose  : Empty Constructor.
//=======================================================================

HatchGen_ElementGen::HatchGen_ElementGen () { 
}
  
//=======================================================================
// Function : HatchGen_ElementGen
// Purpose  : Constructor.
//=======================================================================

HatchGen_ElementGen::HatchGen_ElementGen (const TheElementCurve& Curve,
					  const TopAbs_Orientation Orientation) :
       myCurve       (Curve),
       myOrientation (Orientation)
{
}
  
//=======================================================================
// Function : Curve
// Purpose  : Returns the curve associated to the hatching.
//=======================================================================

const TheElementCurve& HatchGen_ElementGen::Curve () const
{
  return myCurve ;
}

//=======================================================================
// Function : ChangeCurve
// Purpose  : Returns the curve associated to the hatching.
//=======================================================================

TheElementCurve& HatchGen_ElementGen::ChangeCurve ()
{
  return myCurve ;
}

//=======================================================================
// Function : Orientation
// Purpose  : Sets the orientation of the element.
//=======================================================================

void HatchGen_ElementGen::Orientation (const TopAbs_Orientation Orientation)
{
  myOrientation = Orientation ;
}

//=======================================================================
// Function : Orientation
// Purpose  : Returns the orientation of the element.
//=======================================================================

TopAbs_Orientation HatchGen_ElementGen::Orientation () const
{
  return myOrientation ;
}



