// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Intf_Polygon2d_HeaderFile
#define _Intf_Polygon2d_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Bnd_Box2d_HeaderFile
#include <Bnd_Box2d.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class Standard_OutOfRange;
class Bnd_Box2d;
class gp_Pnt2d;



class Intf_Polygon2d  {
public:

  DEFINE_STANDARD_ALLOC

  //! Returns the bounding box of the polygon. <br>
       const Bnd_Box2d& Bounding() const;
  //! Returns True if the polyline is closed. <br>
  Standard_EXPORT   virtual  Standard_Boolean Closed() const;
  //! Returns the tolerance of the polygon. <br>
  Standard_EXPORT   virtual  Standard_Real DeflectionOverEstimation() const = 0;
  //! Returns the number of Segments in the polyline. <br>
  Standard_EXPORT   virtual  Standard_Integer NbSegments() const = 0;
  //! Returns the points of the segment <Index> in the Polygon. <br>
  Standard_EXPORT   virtual  void Segment(const Standard_Integer theIndex,gp_Pnt2d& theBegin,gp_Pnt2d& theEnd) const = 0;





protected:



Bnd_Box2d myBox;


private:





};


#include <Intf_Polygon2d.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
