// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Extrema_ExtCC_HeaderFile
#define _Extrema_ExtCC_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Extrema_ECCOfExtCC_HeaderFile
#include <Extrema_ECCOfExtCC.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Extrema_SequenceOfPOnCurv_HeaderFile
#include <Extrema_SequenceOfPOnCurv.hxx>
#endif
#ifndef _TColStd_SequenceOfReal_HeaderFile
#include <TColStd_SequenceOfReal.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _TColStd_ListOfTransient_HeaderFile
#include <TColStd_ListOfTransient.hxx>
#endif
#ifndef _gp_Pnt_HeaderFile
#include <gp_Pnt.hxx>
#endif
#ifndef _Handle_Extrema_CCacheOfExtCC_HeaderFile
#include <Handle_Extrema_CCacheOfExtCC.hxx>
#endif
class StdFail_InfiniteSolutions;
class StdFail_NotDone;
class Standard_OutOfRange;
class Adaptor3d_Curve;
class Extrema_CurveTool;
class Extrema_CCacheOfExtCC;
class Extrema_ECCOfExtCC;
class Extrema_CCFOfECCOfExtCC;
class Extrema_POnCurv;
class gp_Pnt;
class Extrema_ExtElC;



class Extrema_ExtCC  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   Extrema_ExtCC(const Standard_Real TolC1 = 1.0e-10,const Standard_Real TolC2 = 1.0e-10);
  
  Standard_EXPORT   Extrema_ExtCC(const Adaptor3d_Curve& C1,const Adaptor3d_Curve& C2,const Standard_Real TolC1 = 1.0e-10,const Standard_Real TolC2 = 1.0e-10);
  
  Standard_EXPORT   Extrema_ExtCC(const Adaptor3d_Curve& C1,const Adaptor3d_Curve& C2,const Standard_Real U1,const Standard_Real U2,const Standard_Real V1,const Standard_Real V2,const Standard_Real TolC1 = 1.0e-10,const Standard_Real TolC2 = 1.0e-10);
  
  Standard_EXPORT     void SetCurve(const Standard_Integer theRank,const Adaptor3d_Curve& C) ;
  
  Standard_EXPORT     void SetCurve(const Standard_Integer theRank,const Adaptor3d_Curve& C,const Standard_Real Uinf,const Standard_Real Usup) ;
  
  Standard_EXPORT     void SetRange(const Standard_Integer theRank,const Standard_Real Uinf,const Standard_Real Usup) ;
  
  Standard_EXPORT     void SetTolerance(const Standard_Integer theRank,const Standard_Real Tol) ;
  
  Standard_EXPORT     void Perform() ;
  
  Standard_EXPORT     Standard_Boolean IsDone() const;
  
  Standard_EXPORT     Standard_Integer NbExt() const;
  
  Standard_EXPORT     Standard_Boolean IsParallel() const;
  
  Standard_EXPORT     Standard_Real SquareDistance(const Standard_Integer N = 1) const;
  
  Standard_EXPORT     void Points(const Standard_Integer N,Extrema_POnCurv& P1,Extrema_POnCurv& P2) const;
  
  Standard_EXPORT     void TrimmedSquareDistances(Standard_Real& dist11,Standard_Real& distP12,Standard_Real& distP21,Standard_Real& distP22,gp_Pnt& P11,gp_Pnt& P12,gp_Pnt& P21,gp_Pnt& P22) const;





protected:

  
  Standard_EXPORT     void Results(const Extrema_ExtElC& AlgExt,const Standard_Real Ut11,const Standard_Real Ut12,const Standard_Real Ut21,const Standard_Real Ut22) ;
  
  Standard_EXPORT     void Results(const Extrema_ECCOfExtCC& AlgExt,const Standard_Real Ut11,const Standard_Real Ut12,const Standard_Real Ut21,const Standard_Real Ut22) ;




private:



Extrema_ECCOfExtCC myECC;
Standard_Boolean myDone;
Standard_Boolean myIsPar;
Extrema_SequenceOfPOnCurv mypoints;
TColStd_SequenceOfReal mySqDist;
Standard_Integer mynbext;
Standard_Boolean inverse;
Standard_Address myC[2];
Standard_Real myInf[2];
Standard_Real mySup[2];
Standard_Real myTol[2];
TColStd_ListOfTransient myCacheLists[2];
gp_Pnt P1f;
gp_Pnt P1l;
gp_Pnt P2f;
gp_Pnt P2l;
Standard_Real mydist11;
Standard_Real mydist12;
Standard_Real mydist21;
Standard_Real mydist22;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
