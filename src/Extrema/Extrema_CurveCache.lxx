// Created on: 2008-12-28
// Created by: Roman Lygin
// Copyright (c) 2008-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

//            roman.lygin@gmail.com

#include <StdFail_NotDone.hxx>

//=======================================================================
//function : IsValid
//purpose  : 
//=======================================================================

inline Standard_Boolean Extrema_CurveCache::IsValid() const
{
  return myIsArrayValid;
}

//=======================================================================
//function : Points
//purpose  : 
//=======================================================================

inline const Handle(ArrayOfPnt)& Extrema_CurveCache::Points() const
{
  StdFail_NotDone_Raise_if (!myIsArrayValid, "Extrema_CurveCache::Points()")
  return myPntArray;
}

//=======================================================================
//function : CurvePtr
//purpose  : 
//=======================================================================

inline Standard_Address Extrema_CurveCache::CurvePtr() const
{
  return myC;
}

//=======================================================================
//function : NbSamples
//purpose  : 
//=======================================================================

inline Standard_Integer Extrema_CurveCache::NbSamples() const
{
  return myNbSamples;
}

//=======================================================================
//function : FirstParameter
//purpose  : 
//=======================================================================

inline Standard_Real Extrema_CurveCache::FirstParameter() const
{
  return myFirst;
}

//=======================================================================
//function : LastParameter
//purpose  : 
//=======================================================================

inline Standard_Real Extrema_CurveCache::LastParameter() const
{
  return myLast;
}

//=======================================================================
//function : TrimFirstParameter
//purpose  : 
//=======================================================================

inline Standard_Real Extrema_CurveCache::TrimFirstParameter() const
{
  return myTrimFirst;
}

//=======================================================================
//function : TrimLastParameter
//purpose  : 
//=======================================================================

inline Standard_Real Extrema_CurveCache::TrimLastParameter() const
{
  return myTrimLast;
}
