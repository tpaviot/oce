// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepClass_FaceExplorer_HeaderFile
#define _BRepClass_FaceExplorer_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _TopoDS_Face_HeaderFile
#include <TopoDS_Face.hxx>
#endif
#ifndef _TopExp_Explorer_HeaderFile
#include <TopExp_Explorer.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _TopAbs_Orientation_HeaderFile
#include <TopAbs_Orientation.hxx>
#endif
class TopoDS_Face;
class gp_Pnt2d;
class gp_Lin2d;
class BRepClass_Edge;


//! Provide an   exploration of a  BRep Face   for the <br>
//!          classification. <br>
class BRepClass_FaceExplorer  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   BRepClass_FaceExplorer(const TopoDS_Face& F);
  //! Should  return  True  if the  point  is  outside a <br>
//!          bounding volume of the face. <br>
  Standard_EXPORT     Standard_Boolean Reject(const gp_Pnt2d& P) const;
  //! Returns  in <L>, <Par>  a segment having at least <br>
//!          one  intersection  with  the   face  boundary  to <br>
//!          compute  intersections. <br>
  Standard_EXPORT     Standard_Boolean Segment(const gp_Pnt2d& P,gp_Lin2d& L,Standard_Real& Par) ;
  //! Returns  in <L>, <Par>  a segment having at least <br>
//!          one  intersection  with  the   face  boundary  to <br>
//!          compute  intersections. Each call gives another segment. <br>
  Standard_EXPORT     Standard_Boolean OtherSegment(const gp_Pnt2d& P,gp_Lin2d& L,Standard_Real& Par) ;
  //! Starts an exploration of the wires. <br>
  Standard_EXPORT     void InitWires() ;
  //! Returns True if there is  a current wire. <br>
//! <br>
        Standard_Boolean MoreWires() const;
  //! Sets the explorer  to the  next  wire. <br>
//! <br>
        void NextWire() ;
  //! Returns True  if the wire  bounding volume does not <br>
//!          intersect the segment. <br>
  Standard_EXPORT     Standard_Boolean RejectWire(const gp_Lin2d& L,const Standard_Real Par) const;
  //! Starts an exploration of the  edges of the current <br>
//!          wire. <br>
  Standard_EXPORT     void InitEdges() ;
  //! Returns True if there is a current edge. <br>
//! <br>
        Standard_Boolean MoreEdges() const;
  //! Sets the explorer  to the  next  edge. <br>
//! <br>
        void NextEdge() ;
  //! Returns True  if the edge  bounding volume does not <br>
//!          intersect the segment. <br>
  Standard_EXPORT     Standard_Boolean RejectEdge(const gp_Lin2d& L,const Standard_Real Par) const;
  //! Current edge in current wire and its orientation. <br>
  Standard_EXPORT     void CurrentEdge(BRepClass_Edge& E,TopAbs_Orientation& Or) const;





protected:





private:



TopoDS_Face myFace;
TopExp_Explorer myWExplorer;
TopExp_Explorer myEExplorer;
Standard_Integer myCurEdgeInd;
Standard_Real myCurEdgePar;


};


#include <BRepClass_FaceExplorer.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
