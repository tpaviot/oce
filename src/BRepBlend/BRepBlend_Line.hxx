// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepBlend_Line_HeaderFile
#define _BRepBlend_Line_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_BRepBlend_Line_HeaderFile
#include <Handle_BRepBlend_Line.hxx>
#endif

#ifndef _Blend_SequenceOfPoint_HeaderFile
#include <Blend_SequenceOfPoint.hxx>
#endif
#ifndef _IntSurf_TypeTrans_HeaderFile
#include <IntSurf_TypeTrans.hxx>
#endif
#ifndef _BRepBlend_Extremity_HeaderFile
#include <BRepBlend_Extremity.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Handle_Adaptor3d_HVertex_HeaderFile
#include <Handle_Adaptor3d_HVertex.hxx>
#endif
#ifndef _Handle_Adaptor2d_HCurve2d_HeaderFile
#include <Handle_Adaptor2d_HCurve2d.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class Standard_OutOfRange;
class Adaptor3d_HVertex;
class Adaptor2d_HCurve2d;
class BRepBlend_PointOnRst;
class BRepBlend_SequenceOfPointOnRst;
class BRepBlend_Extremity;
class Blend_Point;



class BRepBlend_Line : public MMgt_TShared {

public:

  
  Standard_EXPORT   BRepBlend_Line();
  
  Standard_EXPORT     void Clear() ;
  
        void Append(const Blend_Point& P) ;
  
        void Prepend(const Blend_Point& P) ;
  
        void InsertBefore(const Standard_Integer Index,const Blend_Point& P) ;
  
        void Remove(const Standard_Integer FromIndex,const Standard_Integer ToIndex) ;
  
  Standard_EXPORT     void Set(const IntSurf_TypeTrans TranS1,const IntSurf_TypeTrans TranS2) ;
  
  Standard_EXPORT     void Set(const IntSurf_TypeTrans Trans) ;
  
        void SetStartPoints(const BRepBlend_Extremity& StartPt1,const BRepBlend_Extremity& StartPt2) ;
  
        void SetEndPoints(const BRepBlend_Extremity& EndPt1,const BRepBlend_Extremity& EndPt2) ;
  
        Standard_Integer NbPoints() const;
  
       const Blend_Point& Point(const Standard_Integer Index) const;
  
        IntSurf_TypeTrans TransitionOnS1() const;
  
        IntSurf_TypeTrans TransitionOnS2() const;
  
       const BRepBlend_Extremity& StartPointOnFirst() const;
  
       const BRepBlend_Extremity& StartPointOnSecond() const;
  
       const BRepBlend_Extremity& EndPointOnFirst() const;
  
       const BRepBlend_Extremity& EndPointOnSecond() const;
  
        IntSurf_TypeTrans TransitionOnS() const;




  DEFINE_STANDARD_RTTI(BRepBlend_Line)

protected:




private: 


Blend_SequenceOfPoint seqpt;
IntSurf_TypeTrans tras1;
IntSurf_TypeTrans tras2;
BRepBlend_Extremity stp1;
BRepBlend_Extremity stp2;
BRepBlend_Extremity endp1;
BRepBlend_Extremity endp2;
Standard_Boolean hass1;
Standard_Boolean hass2;


};

#define TheVertex Handle_Adaptor3d_HVertex
#define TheVertex_hxx <Adaptor3d_HVertex.hxx>
#define TheArc Handle_Adaptor2d_HCurve2d
#define TheArc_hxx <Adaptor2d_HCurve2d.hxx>
#define ThePointOnRst BRepBlend_PointOnRst
#define ThePointOnRst_hxx <BRepBlend_PointOnRst.hxx>
#define TheSequenceOfPointOnRst BRepBlend_SequenceOfPointOnRst
#define TheSequenceOfPointOnRst_hxx <BRepBlend_SequenceOfPointOnRst.hxx>
#define TheExtremity BRepBlend_Extremity
#define TheExtremity_hxx <BRepBlend_Extremity.hxx>
#define Blend_Line BRepBlend_Line
#define Blend_Line_hxx <BRepBlend_Line.hxx>
#define Handle_Blend_Line Handle_BRepBlend_Line
#define Blend_Line_Type_() BRepBlend_Line_Type_()

#include <Blend_Line.lxx>

#undef TheVertex
#undef TheVertex_hxx
#undef TheArc
#undef TheArc_hxx
#undef ThePointOnRst
#undef ThePointOnRst_hxx
#undef TheSequenceOfPointOnRst
#undef TheSequenceOfPointOnRst_hxx
#undef TheExtremity
#undef TheExtremity_hxx
#undef Blend_Line
#undef Blend_Line_hxx
#undef Handle_Blend_Line
#undef Blend_Line_Type_


// other Inline functions and methods (like "C++: function call" methods)


#endif
