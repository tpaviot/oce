// Created on: 1997-01-24
// Created by: Laurent BOURESCHE
// Copyright (c) 1997-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <StdFail_NotDone.hxx>
//=======================================================================
//function : IsDone
//purpose  : 
//=======================================================================

inline Standard_Boolean BRepBlend_RstRstLineBuilder::IsDone() const
{
  return done;
}

//=======================================================================
//function : Line
//purpose  : 
//=======================================================================

inline const Handle(BRepBlend_Line)& BRepBlend_RstRstLineBuilder::Line() const
{
  if (!done) {StdFail_NotDone::Raise();}
  return line;
}


//=======================================================================
//function : Decroch1Start
//purpose  : 
//=======================================================================

inline Standard_Boolean BRepBlend_RstRstLineBuilder::Decroch1Start() const
{
  if (decrochdeb == Blend_DecrochRst1 
      || decrochdeb == Blend_DecrochBoth)  return Standard_True;

  return Standard_False; 
}


//=======================================================================
//function : Decroch1End
//purpose  : 
//=======================================================================

inline Standard_Boolean BRepBlend_RstRstLineBuilder::Decroch1End() const
{
  if (decrochfin == Blend_DecrochRst1 
      || decrochfin == Blend_DecrochBoth)  return Standard_True;

  return Standard_False;
}

//=======================================================================
//function : Decroch2Start
//purpose  : 
//=======================================================================

inline Standard_Boolean BRepBlend_RstRstLineBuilder::Decroch2Start() const
{
  if (decrochdeb == Blend_DecrochRst2 
      || decrochdeb == Blend_DecrochBoth)  return Standard_True;

  return Standard_False; 
}


//=======================================================================
//function : Decroch2End
//purpose  : 
//=======================================================================

inline Standard_Boolean BRepBlend_RstRstLineBuilder::Decroch2End() const
{
  if (decrochfin == Blend_DecrochRst2 
      || decrochfin == Blend_DecrochBoth)  return Standard_True;

  return Standard_False;
}
