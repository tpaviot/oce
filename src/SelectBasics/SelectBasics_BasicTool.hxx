// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _SelectBasics_BasicTool_HeaderFile
#define _SelectBasics_BasicTool_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class gp_Pnt2d;
class TColgp_Array1OfPnt2d;



class SelectBasics_BasicTool  {
public:

  DEFINE_STANDARD_ALLOC

  //! returns True if The Segment {P1P2} is <br>
//!          intersected by the segment {P3P4} <br>
  Standard_EXPORT   static  Standard_Boolean MatchSegments(const gp_Pnt2d& P1,const gp_Pnt2d& P2,const gp_Pnt2d& P3,const gp_Pnt2d& P4) ;
  //! return True if Segment(pBegin, pEnd) is Selected <br>
  Standard_EXPORT   static  Standard_Boolean MatchSegment(const gp_Pnt2d& pBegin,const gp_Pnt2d& pEnd,const Standard_Real X,const Standard_Real Y,const Standard_Real aTol,Standard_Real& DMin) ;
  
  Standard_EXPORT   static  Standard_Boolean AutoInter(const TColgp_Array1OfPnt2d& aPolyg2d) ;
  //! package method used to find if a point <br>
//!          is close enough to a polygon of 2D points <br>
//!          to be Used by Primitives like curves or faces... <br>
//!          Rank gives the index of the touched <br>
//!          segment <br>
  Standard_EXPORT   static  Standard_Boolean MatchPolyg2d(const TColgp_Array1OfPnt2d& tabpoint,const Standard_Real X,const Standard_Real Y,const Standard_Real aTol,Standard_Real& DMin,Standard_Integer& Rank) ;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
