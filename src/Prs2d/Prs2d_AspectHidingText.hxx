// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Prs2d_AspectHidingText_HeaderFile
#define _Prs2d_AspectHidingText_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Prs2d_AspectHidingText_HeaderFile
#include <Handle_Prs2d_AspectHidingText.hxx>
#endif

#ifndef _Aspect_TypeOfFont_HeaderFile
#include <Aspect_TypeOfFont.hxx>
#endif
#ifndef _Quantity_NameOfColor_HeaderFile
#include <Quantity_NameOfColor.hxx>
#endif
#ifndef _Aspect_WidthOfLine_HeaderFile
#include <Aspect_WidthOfLine.hxx>
#endif
#ifndef _Standard_ShortReal_HeaderFile
#include <Standard_ShortReal.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Prs2d_AspectRoot_HeaderFile
#include <Prs2d_AspectRoot.hxx>
#endif


//! defines the attributes when drawing a hiding text <br>
class Prs2d_AspectHidingText : public Prs2d_AspectRoot {

public:

  
  Standard_EXPORT   Prs2d_AspectHidingText(const Quantity_NameOfColor ColorInd,const Quantity_NameOfColor HidingColorInd,const Quantity_NameOfColor FrameColorInd,const Aspect_WidthOfLine FrameWidthInd,const Aspect_TypeOfFont FontInd,const Standard_ShortReal aSlantInd,const Standard_ShortReal aHScaleInd,const Standard_ShortReal aWScaleInd,const Standard_Boolean isUnderlined);
  
  Standard_EXPORT     void SetColorOfText(const Quantity_NameOfColor aColorInd) ;
  
  Standard_EXPORT     void SetHidingColorOfText(const Quantity_NameOfColor aHidColorInd) ;
  
  Standard_EXPORT     void SetFrameColorOfText(const Quantity_NameOfColor aFrameColorInd) ;
  
  Standard_EXPORT     void SetFrameWidthOfText(const Aspect_WidthOfLine aFrameWidthInd) ;
  
  Standard_EXPORT     void SetFontOfText(const Aspect_TypeOfFont aFontInd) ;
  
  Standard_EXPORT     void SetSlant(const Standard_ShortReal aSlantInd) ;
  
  Standard_EXPORT     void SetHScale(const Standard_ShortReal aHScaleInd) ;
  
  Standard_EXPORT     void SetWScale(const Standard_ShortReal aWScaleInd) ;
  
  Standard_EXPORT     void SetUnderlined(const Standard_Boolean anIsUnderline) ;
  
  Standard_EXPORT     void Values(Quantity_NameOfColor& ColorInd,Quantity_NameOfColor& HidingColorInd,Quantity_NameOfColor& FrameColorInd,Aspect_WidthOfLine& FrameWidthInd,Aspect_TypeOfFont& FontInd,Standard_ShortReal& aSlantInd,Standard_ShortReal& aHScaleInd,Standard_ShortReal& aWScaleInd,Standard_Boolean& isUnderlined) const;




  DEFINE_STANDARD_RTTI(Prs2d_AspectHidingText)

protected:




private: 


Aspect_TypeOfFont myFontInd;
Quantity_NameOfColor myColorInd;
Quantity_NameOfColor HidingColorInd;
Quantity_NameOfColor FrameColorInd;
Aspect_WidthOfLine FrameWidthInd;
Standard_ShortReal mySlantInd;
Standard_ShortReal myHScaleInd;
Standard_ShortReal myWScaleInd;
Standard_Boolean myIsUnderlined;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
