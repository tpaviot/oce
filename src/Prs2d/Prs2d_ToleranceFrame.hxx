// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Prs2d_ToleranceFrame_HeaderFile
#define _Prs2d_ToleranceFrame_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Prs2d_ToleranceFrame_HeaderFile
#include <Handle_Prs2d_ToleranceFrame.hxx>
#endif

#ifndef _Standard_ShortReal_HeaderFile
#include <Standard_ShortReal.hxx>
#endif
#ifndef _TCollection_ExtendedString_HeaderFile
#include <TCollection_ExtendedString.hxx>
#endif
#ifndef _Handle_Prs2d_Tolerance_HeaderFile
#include <Handle_Prs2d_Tolerance.hxx>
#endif
#ifndef _TShort_Array1OfShortReal_HeaderFile
#include <TShort_Array1OfShortReal.hxx>
#endif
#ifndef _Graphic2d_Line_HeaderFile
#include <Graphic2d_Line.hxx>
#endif
#ifndef _Handle_Graphic2d_GraphicObject_HeaderFile
#include <Handle_Graphic2d_GraphicObject.hxx>
#endif
#ifndef _Quantity_Length_HeaderFile
#include <Quantity_Length.hxx>
#endif
#ifndef _Prs2d_TypeOfTolerance_HeaderFile
#include <Prs2d_TypeOfTolerance.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Handle_Graphic2d_Drawer_HeaderFile
#include <Handle_Graphic2d_Drawer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Aspect_FStream_HeaderFile
#include <Aspect_FStream.hxx>
#endif
#ifndef _Handle_TColgp_HArray1OfPnt2d_HeaderFile
#include <Handle_TColgp_HArray1OfPnt2d.hxx>
#endif
class Prs2d_Tolerance;
class Graphic2d_GraphicObject;
class Graphic2d_Drawer;
class TColgp_HArray1OfPnt2d;
class TCollection_ExtendedString;



class Prs2d_ToleranceFrame : public Graphic2d_Line {

public:

  //! Creates a frame with a type of tolerance <aTolType>, <br>
//!          tolerance <aTolTxt>, the reference point is <aXPosition>, <aYPosition <br>
//!          <aX>, <aY> - the center of left vertical edge of this frame <br>
  Standard_EXPORT   Prs2d_ToleranceFrame(const Handle(Graphic2d_GraphicObject)& aGO,const Quantity_Length aX,const Quantity_Length aY,const Quantity_Length aHeight,const Prs2d_TypeOfTolerance aTolType = Prs2d_TOT_NONE,const Standard_CString aTolTxt = "",const Standard_CString aTxt1 = "",const Standard_CString aTxt2 = "",const Standard_Real anAngle = 0.0,const Standard_Real aScale = 1.0);
  //! Defines the height of the frame <br>
  Standard_EXPORT     void SetHeight(const Standard_Real aHSize) ;
  //! Indicates the current height of the frame <br>
  Standard_EXPORT     Standard_Real Height() const;
  
  Standard_EXPORT   virtual  void Save(Aspect_FStream& aFStream) const;
  //! Returns array of 2d points, which produce frame for tolerance <br>
//!          Size of array == 4 <br>
  Standard_EXPORT    const Handle_TColgp_HArray1OfPnt2d ArrayOfPnt2d() const;
  //! Sets the text to this tolerance <br>
  Standard_EXPORT     void SetTolText(const Standard_CString aText) ;
  
  Standard_EXPORT     void SetText1(const Standard_CString aText) ;
  
  Standard_EXPORT     void SetText2(const Standard_CString aText) ;
  //! Returns text and array, which contain points of cell <br>
//!          which separates the text from other parameters <br>
  Standard_EXPORT     TCollection_ExtendedString TolText() const;
  
  Standard_EXPORT     TCollection_ExtendedString Text1() const;
  
  Standard_EXPORT     TCollection_ExtendedString Text2() const;
  
  Standard_EXPORT     Standard_Real TextScale() const;




  DEFINE_STANDARD_RTTI(Prs2d_ToleranceFrame)

protected:

  //! Draws the angle <me>. <br>
  Standard_EXPORT     void Draw(const Handle(Graphic2d_Drawer)& aDrawer) ;
  //! Returns Standard_True if the tolerance frame <me> is picked, <br>
//!	    Standard_False if not. <br>
  Standard_EXPORT     Standard_Boolean Pick(const Standard_ShortReal X,const Standard_ShortReal Y,const Standard_ShortReal aPrecision,const Handle(Graphic2d_Drawer)& aDrawer) ;



private: 


Standard_ShortReal myX;
Standard_ShortReal myY;
TCollection_ExtendedString myTolTxt;
TCollection_ExtendedString myTxt1;
TCollection_ExtendedString myTxt2;
Standard_ShortReal myHeight;
Standard_ShortReal myAngle;
Standard_ShortReal myScale;
Handle_Prs2d_Tolerance myHTol;
TShort_Array1OfShortReal myXVert;
TShort_Array1OfShortReal myYVert;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
