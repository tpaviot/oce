// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Prs2d_Tolerance_HeaderFile
#define _Prs2d_Tolerance_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Prs2d_Tolerance_HeaderFile
#include <Handle_Prs2d_Tolerance.hxx>
#endif

#ifndef _Standard_ShortReal_HeaderFile
#include <Standard_ShortReal.hxx>
#endif
#ifndef _Graphic2d_Line_HeaderFile
#include <Graphic2d_Line.hxx>
#endif
#ifndef _Handle_Graphic2d_GraphicObject_HeaderFile
#include <Handle_Graphic2d_GraphicObject.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_Graphic2d_Drawer_HeaderFile
#include <Handle_Graphic2d_Drawer.hxx>
#endif
class Prs2d_ToleranceFrame;
class Graphic2d_GraphicObject;
class Graphic2d_Drawer;


//! Groups all the tolerances <br>
class Prs2d_Tolerance : public Graphic2d_Line {

public:

  //! Changes the coordinates of this tolerance <br>
  Standard_EXPORT     void SetCoord(const Standard_Real aX,const Standard_Real aY) ;
  //! Defines the size of this one <br>
  Standard_EXPORT     void SetSize(const Standard_Real aLen) ;


friend class Prs2d_ToleranceFrame;


  DEFINE_STANDARD_RTTI(Prs2d_Tolerance)

protected:

  //! Creates a tolerance with the center in the point (<aX>, <aY>); <br>
//!          reference point is <aXPosition>, <aYPosition> <br>
  Standard_EXPORT   Prs2d_Tolerance(const Handle(Graphic2d_GraphicObject)& aGO,const Standard_Real aX,const Standard_Real aY,const Standard_Real aLength,const Standard_Real anAngle);
  //! Returns Standard_True if the Tolerance is picked, <br>
//!	        Standard_False if not. <br>
  Standard_EXPORT     Standard_Boolean Pick(const Standard_ShortReal X,const Standard_ShortReal Y,const Standard_ShortReal aPrecision,const Handle(Graphic2d_Drawer)& aDrawer) ;

Standard_ShortReal myX;
Standard_ShortReal myY;
Standard_ShortReal myLength;
Standard_ShortReal myAngle;


private: 




};





// other Inline functions and methods (like "C++: function call" methods)


#endif
