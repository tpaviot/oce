// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepFill_CurveConstraint_HeaderFile
#define _BRepFill_CurveConstraint_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_BRepFill_CurveConstraint_HeaderFile
#include <Handle_BRepFill_CurveConstraint.hxx>
#endif

#ifndef _GeomPlate_CurveConstraint_HeaderFile
#include <GeomPlate_CurveConstraint.hxx>
#endif
#ifndef _Handle_Adaptor3d_HCurveOnSurface_HeaderFile
#include <Handle_Adaptor3d_HCurveOnSurface.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Handle_Adaptor3d_HCurve_HeaderFile
#include <Handle_Adaptor3d_HCurve.hxx>
#endif
class Standard_ConstructionError;
class Adaptor3d_HCurveOnSurface;
class Adaptor3d_HCurve;



class BRepFill_CurveConstraint : public GeomPlate_CurveConstraint {

public:

  //! Create a constraint <br>
//!  Order is the order of the constraint. The possible values for order are -1,0,1,2. <br>
//!  Order i means constraints Gi <br>
//!  Npt is the number of points associated with the constraint. <br>
//!  TolDist is the maximum error to satisfy for G0 constraints <br>
//!  TolAng is the maximum error to satisfy for G1 constraints <br>
//!  TolCurv is the maximum error to satisfy for G2 constraints <br>
//!  These errors can be replaced by laws of criterion. <br>
  Standard_EXPORT   BRepFill_CurveConstraint(const Handle(Adaptor3d_HCurveOnSurface)& Boundary,const Standard_Integer Order,const Standard_Integer NPt = 10,const Standard_Real TolDist = 0.0001,const Standard_Real TolAng = 0.01,const Standard_Real TolCurv = 0.1);
  
  Standard_EXPORT   BRepFill_CurveConstraint(const Handle(Adaptor3d_HCurve)& Boundary,const Standard_Integer Tang,const Standard_Integer NPt = 10,const Standard_Real TolDist = 0.0001);




  DEFINE_STANDARD_RTTI(BRepFill_CurveConstraint)

protected:




private: 




};





// other Inline functions and methods (like "C++: function call" methods)


#endif
