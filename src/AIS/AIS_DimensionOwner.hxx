// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _AIS_DimensionOwner_HeaderFile
#define _AIS_DimensionOwner_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_AIS_DimensionOwner_HeaderFile
#include <Handle_AIS_DimensionOwner.hxx>
#endif

#ifndef _TopoDS_Shape_HeaderFile
#include <TopoDS_Shape.hxx>
#endif
#ifndef _SelectMgr_EntityOwner_HeaderFile
#include <SelectMgr_EntityOwner.hxx>
#endif
#ifndef _Handle_SelectMgr_SelectableObject_HeaderFile
#include <Handle_SelectMgr_SelectableObject.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class SelectMgr_SelectableObject;
class TopoDS_Shape;


//! The owner is the entity which makes it possible to link <br>
//! the sensitive primitives and the reference shapes that <br>
//! you want to detect. It stocks the various pieces of <br>
//! information which make it possible to find objects. An <br>
//! owner has a priority which you can modulate, so as to <br>
//! make one entity more selectable than another. You <br>
//! might want to make edges more selectable than <br>
//! faces, for example. In that case, you could attribute sa <br>
//! higher priority to the one compared to the other. An <br>
//! edge, could have priority 5, for example, and a face, <br>
//! priority 4. The default priority is 5. <br>
class AIS_DimensionOwner : public SelectMgr_EntityOwner {

public:

  
//! Initializes the dimension owner, aSO, and attributes it <br>
//! the priority, aPriority. <br>
  Standard_EXPORT   AIS_DimensionOwner(const Handle(SelectMgr_SelectableObject)& aSO,const Standard_Integer aPriority = 0);
  
//! Constructs the reference shape owner aShape for <br>
//! presentation primitives. <br>
        void SetShape(const TopoDS_Shape& aShape) ;
  
//! Returns the owner shape whose primitives we are concerned with. <br>
       const TopoDS_Shape& FixedShape() const;




  DEFINE_STANDARD_RTTI(AIS_DimensionOwner)

protected:




private: 


TopoDS_Shape myFixedShape;


};


#include <AIS_DimensionOwner.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
