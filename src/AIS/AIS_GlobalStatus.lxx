// Created on: 1997-01-24
// Created by: Robert COUBLANC
// Copyright (c) 1997-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

inline void AIS_GlobalStatus::SetGraphicStatus(const AIS_DisplayStatus aStat)
{
 myStatus = aStat;
}

inline void AIS_GlobalStatus::AddDisplayMode(const Standard_Integer aMode)
{
  if(!IsDModeIn(aMode)) myDispModes.Append(aMode);
}

inline void AIS_GlobalStatus::AddSelectionMode(const Standard_Integer aMode)
{
  if(!IsSModeIn(aMode)) mySelModes.Append(aMode);
}

inline void AIS_GlobalStatus::SetLayerIndex(const Standard_Integer AnIndex)
{
  myLayerIndex=AnIndex;
}

inline void AIS_GlobalStatus::SetHilightStatus(const Standard_Boolean aStat)
{
  myIsHilit = aStat;
}
inline void AIS_GlobalStatus::SetHilightColor(const Quantity_NameOfColor aCol)
{myHiCol = aCol;}

inline Standard_Boolean  AIS_GlobalStatus::IsSubIntensityOn() const 
{
  return mySubInt;
}
inline void AIS_GlobalStatus::SubIntensityOn()
{
  mySubInt = Standard_True;
}
inline void AIS_GlobalStatus::SubIntensityOff()
{
  mySubInt = Standard_False;
}



inline AIS_DisplayStatus AIS_GlobalStatus::GraphicStatus() const 
{
  return myStatus;
}

inline const TColStd_ListOfInteger& AIS_GlobalStatus::DisplayedModes() const 
{
  return myDispModes;
}

inline const TColStd_ListOfInteger& AIS_GlobalStatus::SelectionModes() const 
{
  return mySelModes;
}

inline Standard_Boolean AIS_GlobalStatus::IsHilighted() const 
{
  return myIsHilit;
}

inline Quantity_NameOfColor AIS_GlobalStatus::HilightColor() const 
{return myHiCol;}
