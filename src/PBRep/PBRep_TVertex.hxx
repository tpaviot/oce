// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _PBRep_TVertex_HeaderFile
#define _PBRep_TVertex_HeaderFile

#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_PBRep_TVertex_HeaderFile
#include <Handle_PBRep_TVertex.hxx>
#endif

#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _gp_Pnt_HeaderFile
#include <gp_Pnt.hxx>
#endif
#ifndef _Handle_PBRep_PointRepresentation_HeaderFile
#include <Handle_PBRep_PointRepresentation.hxx>
#endif
#ifndef _PTopoDS_TVertex_HeaderFile
#include <PTopoDS_TVertex.hxx>
#endif
class PBRep_PointRepresentation;
class gp_Pnt;


class PBRep_TVertex : public PTopoDS_TVertex {

public:

  
  Standard_EXPORT   PBRep_TVertex();
  
  Standard_EXPORT     Standard_Real Tolerance() const;
  
  Standard_EXPORT     void Tolerance(const Standard_Real T) ;
  
  Standard_EXPORT     gp_Pnt Pnt() const;
  
  Standard_EXPORT     void Pnt(const gp_Pnt& P) ;
  
  Standard_EXPORT     Handle_PBRep_PointRepresentation Points() const;
  
  Standard_EXPORT     void Points(const Handle(PBRep_PointRepresentation)& P) ;

PBRep_TVertex(const Storage_stCONSTclCOM& a) : PTopoDS_TVertex(a)
{
  
}
    Standard_Real _CSFDB_GetPBRep_TVertexmyTolerance() const { return myTolerance; }
    void _CSFDB_SetPBRep_TVertexmyTolerance(const Standard_Real p) { myTolerance = p; }
    const gp_Pnt& _CSFDB_GetPBRep_TVertexmyPnt() const { return myPnt; }
    Handle(PBRep_PointRepresentation) _CSFDB_GetPBRep_TVertexmyPoints() const { return myPoints; }
    void _CSFDB_SetPBRep_TVertexmyPoints(const Handle(PBRep_PointRepresentation)& p) { myPoints = p; }



  DEFINE_STANDARD_RTTI(PBRep_TVertex)

protected:




private: 


Standard_Real myTolerance;
gp_Pnt myPnt;
Handle_PBRep_PointRepresentation myPoints;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
