// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepAlgo_SequenceOfSequenceOfInteger_HeaderFile
#define _BRepAlgo_SequenceOfSequenceOfInteger_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _TCollection_BaseSequence_HeaderFile
#include <TCollection_BaseSequence.hxx>
#endif
#ifndef _Handle_BRepAlgo_SequenceNodeOfSequenceOfSequenceOfInteger_HeaderFile
#include <Handle_BRepAlgo_SequenceNodeOfSequenceOfSequenceOfInteger.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class Standard_NoSuchObject;
class Standard_OutOfRange;
class TColStd_SequenceOfInteger;
class BRepAlgo_SequenceNodeOfSequenceOfSequenceOfInteger;



class BRepAlgo_SequenceOfSequenceOfInteger  : public TCollection_BaseSequence {
public:

  DEFINE_STANDARD_ALLOC

  
      BRepAlgo_SequenceOfSequenceOfInteger();
  
  Standard_EXPORT     void Clear() ;
~BRepAlgo_SequenceOfSequenceOfInteger()
{
  Clear();
}
  
  Standard_EXPORT    const BRepAlgo_SequenceOfSequenceOfInteger& Assign(const BRepAlgo_SequenceOfSequenceOfInteger& Other) ;
   const BRepAlgo_SequenceOfSequenceOfInteger& operator =(const BRepAlgo_SequenceOfSequenceOfInteger& Other) 
{
  return Assign(Other);
}
  
  Standard_EXPORT     void Append(const TColStd_SequenceOfInteger& T) ;
  
        void Append(BRepAlgo_SequenceOfSequenceOfInteger& S) ;
  
  Standard_EXPORT     void Prepend(const TColStd_SequenceOfInteger& T) ;
  
        void Prepend(BRepAlgo_SequenceOfSequenceOfInteger& S) ;
  
        void InsertBefore(const Standard_Integer Index,const TColStd_SequenceOfInteger& T) ;
  
        void InsertBefore(const Standard_Integer Index,BRepAlgo_SequenceOfSequenceOfInteger& S) ;
  
  Standard_EXPORT     void InsertAfter(const Standard_Integer Index,const TColStd_SequenceOfInteger& T) ;
  
        void InsertAfter(const Standard_Integer Index,BRepAlgo_SequenceOfSequenceOfInteger& S) ;
  
  Standard_EXPORT    const TColStd_SequenceOfInteger& First() const;
  
  Standard_EXPORT    const TColStd_SequenceOfInteger& Last() const;
  
        void Split(const Standard_Integer Index,BRepAlgo_SequenceOfSequenceOfInteger& Sub) ;
  
  Standard_EXPORT    const TColStd_SequenceOfInteger& Value(const Standard_Integer Index) const;
   const TColStd_SequenceOfInteger& operator()(const Standard_Integer Index) const
{
  return Value(Index);
}
  
  Standard_EXPORT     void SetValue(const Standard_Integer Index,const TColStd_SequenceOfInteger& I) ;
  
  Standard_EXPORT     TColStd_SequenceOfInteger& ChangeValue(const Standard_Integer Index) ;
    TColStd_SequenceOfInteger& operator()(const Standard_Integer Index) 
{
  return ChangeValue(Index);
}
  
  Standard_EXPORT     void Remove(const Standard_Integer Index) ;
  
  Standard_EXPORT     void Remove(const Standard_Integer FromIndex,const Standard_Integer ToIndex) ;





protected:





private:

  
  Standard_EXPORT   BRepAlgo_SequenceOfSequenceOfInteger(const BRepAlgo_SequenceOfSequenceOfInteger& Other);




};

#define SeqItem TColStd_SequenceOfInteger
#define SeqItem_hxx <TColStd_SequenceOfInteger.hxx>
#define TCollection_SequenceNode BRepAlgo_SequenceNodeOfSequenceOfSequenceOfInteger
#define TCollection_SequenceNode_hxx <BRepAlgo_SequenceNodeOfSequenceOfSequenceOfInteger.hxx>
#define Handle_TCollection_SequenceNode Handle_BRepAlgo_SequenceNodeOfSequenceOfSequenceOfInteger
#define TCollection_SequenceNode_Type_() BRepAlgo_SequenceNodeOfSequenceOfSequenceOfInteger_Type_()
#define TCollection_Sequence BRepAlgo_SequenceOfSequenceOfInteger
#define TCollection_Sequence_hxx <BRepAlgo_SequenceOfSequenceOfInteger.hxx>

#include <TCollection_Sequence.lxx>

#undef SeqItem
#undef SeqItem_hxx
#undef TCollection_SequenceNode
#undef TCollection_SequenceNode_hxx
#undef Handle_TCollection_SequenceNode
#undef TCollection_SequenceNode_Type_
#undef TCollection_Sequence
#undef TCollection_Sequence_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
