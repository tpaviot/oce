// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepAlgo_FaceRestrictor_HeaderFile
#define _BRepAlgo_FaceRestrictor_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _TopoDS_Face_HeaderFile
#include <TopoDS_Face.hxx>
#endif
#ifndef _TopTools_ListOfShape_HeaderFile
#include <TopTools_ListOfShape.hxx>
#endif
#ifndef _TopTools_DataMapOfShapeListOfShape_HeaderFile
#include <TopTools_DataMapOfShapeListOfShape.hxx>
#endif
class TopoDS_Face;
class TopoDS_Wire;


//!  Builds all  the faces  limited  with a set of non <br>
//!                 jointing   and     planars     wires.    if <br>
//!          <ControlOrientation> is false  The Wires must have <br>
//!          correct orientations.  Sinon orientation des wires <br>
//!          de telle sorte que les faces ne soient pas infinies <br>
//!          et qu'elles soient disjointes. <br>
class BRepAlgo_FaceRestrictor  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   BRepAlgo_FaceRestrictor();
  //! the surface of <F> will be the the surface of each new <br>
//!          faces built. <br>
//!          <Proj> is used to update pcurves on edges if necessary. <br>
//!          See Add(). <br>
  Standard_EXPORT     void Init(const TopoDS_Face& F,const Standard_Boolean Proj = Standard_False,const Standard_Boolean ControlOrientation = Standard_False) ;
  //! Add the wire <W> to the set of wires. <br>
//! <br>
//!  Warning: <br>
//!          The Wires must be closed. <br>
//! <br>
//!          The edges of <W> can be modified if they  have not pcurves <br>
//!          on the surface <S>  of <F>. In this  case <br>
//!          if <Proj> is false the first pcurve of  the edge <br>
//!          is positionned on <S>. <br>
//!          if <Proj> is True ,the Pcurve On <S> is the <br>
//!          projection of the  curve 3d on <F>. <br>
  Standard_EXPORT     void Add(TopoDS_Wire& W) ;
  //! Removes all the Wires <br>
  Standard_EXPORT     void Clear() ;
  //! Evaluate all the faces limited by the set of Wires. <br>
  Standard_EXPORT     void Perform() ;
  
  Standard_EXPORT     Standard_Boolean IsDone() const;
  
  Standard_EXPORT     Standard_Boolean More() const;
  
  Standard_EXPORT     void Next() ;
  
  Standard_EXPORT     TopoDS_Face Current() const;





protected:





private:

  //! Evaluate all the faces limited by the set of Wires. <br>
  Standard_EXPORT     void PerformWithCorrection() ;


Standard_Boolean myDone;
Standard_Boolean modeProj;
TopoDS_Face myFace;
TopTools_ListOfShape wires;
TopTools_ListOfShape faces;
Standard_Boolean myCorrection;
TopTools_DataMapOfShapeListOfShape keyIsIn;
TopTools_DataMapOfShapeListOfShape keyContains;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
