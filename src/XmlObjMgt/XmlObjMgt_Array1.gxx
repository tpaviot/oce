// Created on: 2001-08-01
// Created by: Julia DOROVSKIKH
// Copyright (c) 2001-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

//AGV 130202: Changed prototype LDOM_Node::getOwnerDocument()

#include <XmlObjMgt.hxx>
#include <XmlObjMgt_DOMString.hxx>
#include <TCollection_AsciiString.hxx>

IMPLEMENT_DOMSTRING (LowerString, "lower")
IMPLEMENT_DOMSTRING (UpperString, "upper")
IMPLEMENT_DOMSTRING (IndString,   "index")

//=======================================================================
//function : XmlObjMgt_Array1
//purpose  : Constructor
//=======================================================================

XmlObjMgt_Array1::XmlObjMgt_Array1 (const XmlObjMgt_Element&   theParent,
                                    const XmlObjMgt_DOMString& theName)
     : myElement            (XmlObjMgt::FindChildByName (theParent, theName)),
       myFirst              (1),
       myLast               (0)
{
  if (myElement != NULL) {
    if (!myElement.getAttribute(::LowerString()).GetInteger(myFirst))
      myFirst = 1;
    if (!myElement.getAttribute(::UpperString()).GetInteger (myLast))
      myLast = 1;
  }
}

//=======================================================================
//function : XmlObjMgt_Array1
//purpose  : Constructor
//=======================================================================

XmlObjMgt_Array1::XmlObjMgt_Array1 (const Standard_Integer aFirst, 
                                    const Standard_Integer aLast)
     : myFirst (aFirst), myLast (aLast)
{}

//=======================================================================
//function : CreateArrayElement
//purpose  : Create DOM_Element representing the array, under 'theParent'
//=======================================================================

void XmlObjMgt_Array1::CreateArrayElement (XmlObjMgt_Element&         theParent,
                                           const XmlObjMgt_DOMString& theName)
{
  if (myLast > 0)
  {
//AGV    XmlObjMgt_Document& anOwnerDoc =
//AGV      (XmlObjMgt_Document&)theParent.getOwnerDocument();
    XmlObjMgt_Document anOwnerDoc =
      XmlObjMgt_Document (theParent.getOwnerDocument());
    myElement = anOwnerDoc.createElement (theName);
    theParent.appendChild (myElement);
    if (myLast > 1) {
      myElement.setAttribute (::UpperString(), myLast);
      if (myFirst != 1)
        myElement.setAttribute (::LowerString(), myFirst);
    }
  }
}

//=======================================================================
//function : SetValue
//purpose  : 
//=======================================================================

void XmlObjMgt_Array1::SetValue
            (const Standard_Integer theIndex, XmlObjMgt_Element& theValue)
{
  myElement.appendChild (theValue);
  theValue.setAttribute(::IndString(), theIndex);
}

//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

XmlObjMgt_Element XmlObjMgt_Array1::Value(const Standard_Integer theIndex) const
{
  XmlObjMgt_Element anElem;

  if (theIndex >= myFirst && theIndex <= myLast)
  {
    Standard_Integer ind;
    LDOM_Node aNode = myElement.getFirstChild();
    while (!aNode.isNull())
    {
      if (aNode.getNodeType() == LDOM_Node::ELEMENT_NODE)
      {
        anElem = (XmlObjMgt_Element &) aNode;
        if (anElem.getAttribute(::IndString()).GetInteger(ind))
          if (ind == theIndex)
            break;
      }
      aNode = aNode.getNextSibling();
    }
  }
  return anElem;
}
