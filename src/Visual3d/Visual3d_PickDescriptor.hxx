// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Visual3d_PickDescriptor_HeaderFile
#define _Visual3d_PickDescriptor_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_Visual3d_HSequenceOfPickPath_HeaderFile
#include <Handle_Visual3d_HSequenceOfPickPath.hxx>
#endif
#ifndef _Visual3d_ContextPick_HeaderFile
#include <Visual3d_ContextPick.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_Graphic3d_Structure_HeaderFile
#include <Handle_Graphic3d_Structure.hxx>
#endif
class Visual3d_HSequenceOfPickPath;
class Visual3d_PickError;
class Visual3d_ContextPick;
class Visual3d_PickPath;
class Graphic3d_Structure;


//! This class contains the pick information. <br>
//!	    It contains a certain number of PickPaths. <br>
class Visual3d_PickDescriptor  {
public:

  DEFINE_STANDARD_ALLOC

  //! Creates a PickDescriptor <me>. <br>
  Standard_EXPORT   Visual3d_PickDescriptor(const Visual3d_ContextPick& CTX);
  //! Adds a PickPath to PickDescriptor <me>. <br>
  Standard_EXPORT     void AddPickPath(const Visual3d_PickPath& APickPath) ;
  //! Erases all the information in <me>. <br>
  Standard_EXPORT     void Clear() ;
  //! Returns the pick depth, that is the <br>
//!	    number of PickPaths available in the PickDescriptor. <br>
  Standard_EXPORT     Standard_Integer Depth() const;
  //! Returns the group of PickPaths of <me>. <br>
  Standard_EXPORT     Handle_Visual3d_HSequenceOfPickPath PickPath() const;
  //! Returns the root structure. <br>
//!	    If the pick order was of the type TOO_TOPFIRST <br>
//!	    then it's the first structure. <br>
//!	    If the pick order was of the type TOO_BOTTOMFIRST <br>
//!	    Then it's the last structure. <br>
//!	    The pick order is set by the method SetOrder <br>
//!	    from ContextPick. <br>
//!  Category: Inquire methods <br>
//!  Warning: Raises PickError if Depth == 0 (no picked structure). <br>
  Standard_EXPORT     Handle_Graphic3d_Structure TopStructure() const;
  //! Returns the root structure pickid. <br>
//!	    If the pick order was of the type TOO_TOPFIRST <br>
//!	    then it's the first pickid. <br>
//!	    If the pick order was of the type TOO_BOTTOMFIRST <br>
//!	    then it's the last pickid. <br>
//!	    The pick order is set by the method SetOrder <br>
//!	    from ContextPick. <br>
//!  Category: Inquire methods <br>
//!  Warning: Raises PickError if Depth == 0 (no picked structure). <br>
  Standard_EXPORT     Standard_Integer TopPickId() const;
  //! Returns the root structure element number. <br>
//!	    If the pick order was of the type TOO_TOPFIRST <br>
//!	    then it's the first element number. <br>
//!	    If the pick order was of the type TOO_BOTTOMFIRST <br>
//!	    then it's the last element number. <br>
//!	    The pick order is set by the method SetOrder <br>
//!	    from ContextPick. <br>
//!  Category: Inquire methods <br>
//!  Warning: Raises PickError if Depth == 0 (no picked structure). <br>
  Standard_EXPORT     Standard_Integer TopElementNumber() const;





protected:





private:



Handle_Visual3d_HSequenceOfPickPath MyPickPathSequence;
Visual3d_ContextPick MyContext;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
