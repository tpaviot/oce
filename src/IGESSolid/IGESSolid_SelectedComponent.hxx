// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESSolid_SelectedComponent_HeaderFile
#define _IGESSolid_SelectedComponent_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IGESSolid_SelectedComponent_HeaderFile
#include <Handle_IGESSolid_SelectedComponent.hxx>
#endif

#ifndef _Handle_IGESSolid_BooleanTree_HeaderFile
#include <Handle_IGESSolid_BooleanTree.hxx>
#endif
#ifndef _gp_XYZ_HeaderFile
#include <gp_XYZ.hxx>
#endif
#ifndef _IGESData_IGESEntity_HeaderFile
#include <IGESData_IGESEntity.hxx>
#endif
class IGESSolid_BooleanTree;
class gp_XYZ;
class gp_Pnt;


//! defines SelectedComponent, Type <182> Form Number <0> <br>
//!          in package IGESSolid <br>
//!          The Selected Component entity provides a means of <br>
//!          selecting one component of a disjoint CSG solid <br>
class IGESSolid_SelectedComponent : public IGESData_IGESEntity {

public:

  
  Standard_EXPORT   IGESSolid_SelectedComponent();
  //! This method is used to set the fields of the class <br>
//!           SelectedComponent <br>
//!       - anEntity  : the Boolean tree entity <br>
//!       - selectPnt : Point in or on the desired component <br>
  Standard_EXPORT     void Init(const Handle(IGESSolid_BooleanTree)& anEntity,const gp_XYZ& selectPnt) ;
  //! returns the Boolean tree entity <br>
  Standard_EXPORT     Handle_IGESSolid_BooleanTree Component() const;
  //! returns the point on/in the selected component <br>
  Standard_EXPORT     gp_Pnt SelectPoint() const;
  //! returns the point on/in the selected component <br>
//! after applying TransformationMatrix <br>
  Standard_EXPORT     gp_Pnt TransformedSelectPoint() const;




  DEFINE_STANDARD_RTTI(IGESSolid_SelectedComponent)

protected:




private: 


Handle_IGESSolid_BooleanTree theEntity;
gp_XYZ theSelectPoint;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
