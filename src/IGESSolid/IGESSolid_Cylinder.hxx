// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESSolid_Cylinder_HeaderFile
#define _IGESSolid_Cylinder_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IGESSolid_Cylinder_HeaderFile
#include <Handle_IGESSolid_Cylinder.hxx>
#endif

#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _gp_XYZ_HeaderFile
#include <gp_XYZ.hxx>
#endif
#ifndef _IGESData_IGESEntity_HeaderFile
#include <IGESData_IGESEntity.hxx>
#endif
class gp_XYZ;
class gp_Pnt;
class gp_Dir;


//! defines Cylinder, Type <154> Form Number <0> <br>
//!          in package IGESSolid <br>
//!          This defines a solid cylinder <br>
class IGESSolid_Cylinder : public IGESData_IGESEntity {

public:

  
  Standard_EXPORT   IGESSolid_Cylinder();
  //! This method is used to set the fields of the class <br>
//!           Cylinder <br>
//!       - aHeight : Cylinder height <br>
//!       - aRadius : Cylinder radius <br>
//!       - aCenter : First face center coordinates (default (0,0,0)) <br>
//!       - anAxis  : Unit vector in axis direction (default (0,0,1)) <br>
  Standard_EXPORT     void Init(const Standard_Real aHeight,const Standard_Real aRadius,const gp_XYZ& aCenter,const gp_XYZ& anAxis) ;
  //! returns the cylinder height <br>
  Standard_EXPORT     Standard_Real Height() const;
  //! returns the cylinder radius <br>
  Standard_EXPORT     Standard_Real Radius() const;
  //! returns the first face center coordinates. <br>
  Standard_EXPORT     gp_Pnt FaceCenter() const;
  //! returns the first face center after applying TransformationMatrix <br>
  Standard_EXPORT     gp_Pnt TransformedFaceCenter() const;
  //! returns the vector in axis direction <br>
  Standard_EXPORT     gp_Dir Axis() const;
  //! returns the vector in axis direction after applying <br>
//! TransformationMatrix <br>
  Standard_EXPORT     gp_Dir TransformedAxis() const;




  DEFINE_STANDARD_RTTI(IGESSolid_Cylinder)

protected:




private: 


Standard_Real theHeight;
Standard_Real theRadius;
gp_XYZ theFaceCenter;
gp_XYZ theAxis;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
