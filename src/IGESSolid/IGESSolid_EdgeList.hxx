// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESSolid_EdgeList_HeaderFile
#define _IGESSolid_EdgeList_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IGESSolid_EdgeList_HeaderFile
#include <Handle_IGESSolid_EdgeList.hxx>
#endif

#ifndef _Handle_IGESData_HArray1OfIGESEntity_HeaderFile
#include <Handle_IGESData_HArray1OfIGESEntity.hxx>
#endif
#ifndef _Handle_IGESSolid_HArray1OfVertexList_HeaderFile
#include <Handle_IGESSolid_HArray1OfVertexList.hxx>
#endif
#ifndef _Handle_TColStd_HArray1OfInteger_HeaderFile
#include <Handle_TColStd_HArray1OfInteger.hxx>
#endif
#ifndef _IGESData_IGESEntity_HeaderFile
#include <IGESData_IGESEntity.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_IGESData_IGESEntity_HeaderFile
#include <Handle_IGESData_IGESEntity.hxx>
#endif
#ifndef _Handle_IGESSolid_VertexList_HeaderFile
#include <Handle_IGESSolid_VertexList.hxx>
#endif
class IGESData_HArray1OfIGESEntity;
class IGESSolid_HArray1OfVertexList;
class TColStd_HArray1OfInteger;
class Standard_DimensionMismatch;
class Standard_OutOfRange;
class IGESData_IGESEntity;
class IGESSolid_VertexList;


//! defines EdgeList, Type <504> Form <1> <br>
//!          in package IGESSolid <br>
//!          EdgeList is defined as a segment joining two vertices <br>
class IGESSolid_EdgeList : public IGESData_IGESEntity {

public:

  
  Standard_EXPORT   IGESSolid_EdgeList();
  //! This method is used to set the fields of the class <br>
//!           EdgeList <br>
//!       - curves           : the model space curves <br>
//!       - startVertexList  : the vertex list that contains the <br>
//!                            start vertices <br>
//!       - startVertexIndex : the index of the vertex in the <br>
//!                            corresponding vertex list <br>
//!       - endVertexList    : the vertex list that contains the <br>
//!                            end vertices <br>
//!       - endVertexIndex   : the index of the vertex in the <br>
//!                            corresponding vertex list <br>
//! raises exception if size of curves,startVertexList,startVertexIndex, <br>
//! endVertexList and endVertexIndex do no match <br>
  Standard_EXPORT     void Init(const Handle(IGESData_HArray1OfIGESEntity)& curves,const Handle(IGESSolid_HArray1OfVertexList)& startVertexList,const Handle(TColStd_HArray1OfInteger)& startVertexIndex,const Handle(IGESSolid_HArray1OfVertexList)& endVertexList,const Handle(TColStd_HArray1OfInteger)& endVertexIndex) ;
  //! returns the number of edges in the edge list <br>
  Standard_EXPORT     Standard_Integer NbEdges() const;
  //! returns the num'th model space curve <br>
//! raises Exception if num <= 0 or num > NbEdges() <br>
  Standard_EXPORT     Handle_IGESData_IGESEntity Curve(const Standard_Integer num) const;
  //! returns the num'th start vertex list <br>
//! raises Exception if num <= 0 or num > NbEdges() <br>
  Standard_EXPORT     Handle_IGESSolid_VertexList StartVertexList(const Standard_Integer num) const;
  //! returns the index of num'th start vertex in <br>
//! the corresponding start vertex list <br>
//! raises Exception if num <= 0 or num > NbEdges() <br>
  Standard_EXPORT     Standard_Integer StartVertexIndex(const Standard_Integer num) const;
  //! returns the num'th end vertex list <br>
//! raises Exception if num <= 0 or num > NbEdges() <br>
  Standard_EXPORT     Handle_IGESSolid_VertexList EndVertexList(const Standard_Integer num) const;
  //! returns the index of num'th end vertex in <br>
//! the corresponding end vertex list <br>
//! raises Exception if num <= 0 or num > NbEdges() <br>
  Standard_EXPORT     Standard_Integer EndVertexIndex(const Standard_Integer num) const;




  DEFINE_STANDARD_RTTI(IGESSolid_EdgeList)

protected:




private: 


Handle_IGESData_HArray1OfIGESEntity theCurves;
Handle_IGESSolid_HArray1OfVertexList theStartVertexList;
Handle_TColStd_HArray1OfInteger theStartVertexIndex;
Handle_IGESSolid_HArray1OfVertexList theEndVertexList;
Handle_TColStd_HArray1OfInteger theEndVertexIndex;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
