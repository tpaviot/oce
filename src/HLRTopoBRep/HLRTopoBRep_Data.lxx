// Created on: 1995-02-07
// Created by: Christophe MARION
// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <HLRTopoBRep_FaceData.hxx>
#include <TopoDS.hxx>
#include <TopoDS_Shape.hxx>
#include <TopoDS_Face.hxx>
#include <TopoDS_Edge.hxx>
#include <TopoDS_Vertex.hxx>

//=======================================================================
//function : EdgeSplE
//purpose  : 
//=======================================================================

inline const TopTools_ListOfShape & 
HLRTopoBRep_Data::EdgeSplE (const TopoDS_Edge& E) const 
{
  return mySplE(E);
}

//=======================================================================
//function : FaceIntL
//purpose  : 
//=======================================================================

inline const TopTools_ListOfShape & 
HLRTopoBRep_Data::FaceIntL (const TopoDS_Face& F) const 
{
  return myData(F).FaceIntL();
}

//=======================================================================
//function : FaceOutL
//purpose  : 
//=======================================================================

inline const TopTools_ListOfShape & 
HLRTopoBRep_Data::FaceOutL (const TopoDS_Face& F) const 
{
  return myData(F).FaceOutL();
}

//=======================================================================
//function : FaceIsoL
//purpose  : 
//=======================================================================

inline const TopTools_ListOfShape & 
HLRTopoBRep_Data::FaceIsoL (const TopoDS_Face& F) const 
{
  return myData(F).FaceIsoL();
}

//=======================================================================
//function : IsOutV
//purpose  : 
//=======================================================================

inline Standard_Boolean 
HLRTopoBRep_Data::IsOutV (const TopoDS_Vertex& V) const 
{
  return myOutV.Contains(V);
}

//=======================================================================
//function : IsIntV
//purpose  : 
//=======================================================================

inline Standard_Boolean 
HLRTopoBRep_Data::IsIntV (const TopoDS_Vertex& V) const 
{
  return myIntV.Contains(V);
}

//=======================================================================
//function : AddOutV
//purpose  : 
//=======================================================================

inline void HLRTopoBRep_Data::AddOutV (const TopoDS_Vertex& V)
{
  myOutV.Add(V);
}

//=======================================================================
//function : AddIntV
//purpose  : 
//=======================================================================

inline void HLRTopoBRep_Data::AddIntV (const TopoDS_Vertex& V)
{
  myIntV.Add(V);
}

//=======================================================================
//function : MoreEdge
//purpose  : 
//=======================================================================

inline Standard_Boolean HLRTopoBRep_Data::MoreEdge () const
{
  return myEIterator.More();
}

//=======================================================================
//function : Edge
//purpose  : 
//=======================================================================

inline const TopoDS_Edge & HLRTopoBRep_Data::Edge () const 
{
  return TopoDS::Edge(myEIterator.Key());
}

//=======================================================================
//function : MoreVertex
//purpose  : 
//=======================================================================

inline Standard_Boolean HLRTopoBRep_Data::MoreVertex () const 
{
  return myVIterator.More();
}

//=======================================================================
//function : NextVertex
//purpose  : 
//=======================================================================

inline void HLRTopoBRep_Data::NextVertex ()
{
  myVIterator.Next();
}

