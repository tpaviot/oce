// Created on: 1993-06-04
// Created by: Bruno DUMORTIER
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.



#include <gp_Pnt2d.hxx>
#include <Geom2d_Curve.hxx>
#include <Standard_NoSuchObject.hxx>
#include <Standard_NullObject.hxx>

//=======================================================================
//function : FirstParameter
//purpose  : 
//=======================================================================

inline Standard_Real Geom2dAdaptor_Curve::FirstParameter() const
{
  return myFirst;
}

//=======================================================================
//function : LastParameter
//purpose  : 
//=======================================================================

inline Standard_Real Geom2dAdaptor_Curve::LastParameter() const
{
  return myLast;
}

//=======================================================================
//function : Curve
//purpose  : 
//=======================================================================

inline const Handle(Geom2d_Curve)& Geom2dAdaptor_Curve::Curve() const 
{ 
  return myCurve;
}

//=======================================================================
//function : GetType
//purpose  : 
//=======================================================================

inline GeomAbs_CurveType Geom2dAdaptor_Curve::GetType() const
{
  return myTypeCurve;
}

//=======================================================================
//function : Load
//purpose  : 
//=======================================================================

inline void Geom2dAdaptor_Curve::Load(const Handle(Geom2d_Curve)& C) 
{
  if ( C.IsNull()) Standard_NullObject::Raise();
  
  load(C,C->FirstParameter(),C->LastParameter());
}

//=======================================================================
//function : Load
//purpose  : 
//=======================================================================

inline void Geom2dAdaptor_Curve::Load(const Handle(Geom2d_Curve)& C,
			                          const Standard_Real UFirst,
			                          const Standard_Real ULast) 
{
  if ( C.IsNull()) Standard_NullObject::Raise();

  if ( UFirst > ULast) Standard_ConstructionError::Raise();
  
  load(C,UFirst,ULast);
}
