// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _UTL_HeaderFile
#define _UTL_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Storage_Error_HeaderFile
#include <Storage_Error.hxx>
#endif
#ifndef _Storage_OpenMode_HeaderFile
#include <Storage_OpenMode.hxx>
#endif
#ifndef _Handle_Storage_Data_HeaderFile
#include <Handle_Storage_Data.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_Resource_Manager_HeaderFile
#include <Handle_Resource_Manager.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class TCollection_ExtendedString;
class Storage_BaseDriver;
class Storage_Data;
class OSD_Path;
class OSD_FileIterator;
class TCollection_AsciiString;
class Standard_GUID;
class Resource_Manager;



class UTL  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   static  TCollection_ExtendedString xgetenv(const Standard_CString aCString) ;
  
  Standard_EXPORT   static  Storage_Error OpenFile(Storage_BaseDriver& aFile,const TCollection_ExtendedString& aName,const Storage_OpenMode aMode) ;
  
  Standard_EXPORT   static  void AddToUserInfo(const Handle(Storage_Data)& aData,const TCollection_ExtendedString& anInfo) ;
  
  Standard_EXPORT   static  OSD_Path Path(const TCollection_ExtendedString& aFileName) ;
  
  Standard_EXPORT   static  TCollection_ExtendedString Disk(const OSD_Path& aPath) ;
  
  Standard_EXPORT   static  TCollection_ExtendedString Trek(const OSD_Path& aPath) ;
  
  Standard_EXPORT   static  TCollection_ExtendedString Name(const OSD_Path& aPath) ;
  
  Standard_EXPORT   static  TCollection_ExtendedString Extension(const OSD_Path& aPath) ;
  
  Standard_EXPORT   static  OSD_FileIterator FileIterator(const OSD_Path& aPath,const TCollection_ExtendedString& aMask) ;
  
  Standard_EXPORT   static  TCollection_ExtendedString Extension(const TCollection_ExtendedString& aFileName) ;
  
  Standard_EXPORT   static  TCollection_ExtendedString LocalHost() ;
  
  Standard_EXPORT   static  TCollection_ExtendedString ExtendedString(const TCollection_AsciiString& anAsciiString) ;
  
  Standard_EXPORT   static  Standard_GUID GUID(const TCollection_ExtendedString& anXString) ;
  
  Standard_EXPORT   static  Standard_Boolean Find(const Handle(Resource_Manager)& aResourceManager,const TCollection_ExtendedString& aResourceName) ;
  
  Standard_EXPORT   static  TCollection_ExtendedString Value(const Handle(Resource_Manager)& aResourceManager,const TCollection_ExtendedString& aResourceName) ;
  
  Standard_EXPORT   static  Standard_Integer IntegerValue(const TCollection_ExtendedString& anExtendedString) ;
  
  Standard_EXPORT   static  Standard_CString CString(const TCollection_ExtendedString& anExtendedString) ;
  
  Standard_EXPORT   static  Standard_Boolean IsReadOnly(const TCollection_ExtendedString& aFileName) ;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
