// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _PNaming_Name_HeaderFile
#define _PNaming_Name_HeaderFile

#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_PNaming_Name_HeaderFile
#include <Handle_PNaming_Name.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_PNaming_HArray1OfNamedShape_HeaderFile
#include <Handle_PNaming_HArray1OfNamedShape.hxx>
#endif
#ifndef _Handle_PNaming_NamedShape_HeaderFile
#include <Handle_PNaming_NamedShape.hxx>
#endif
#ifndef _Standard_Persistent_HeaderFile
#include <Standard_Persistent.hxx>
#endif
class PNaming_HArray1OfNamedShape;
class PNaming_NamedShape;


class PNaming_Name : public Standard_Persistent {

public:

  
  Standard_EXPORT   PNaming_Name();
  
        void Type(const Standard_Integer T) ;
  
        void ShapeType(const Standard_Integer T) ;
  
        void Arguments(const Handle(PNaming_HArray1OfNamedShape)& Args) ;
  
        void StopNamedShape(const Handle(PNaming_NamedShape)& arg) ;
  
        Standard_Integer Type() const;
  
        Standard_Integer ShapeType() const;
  
        Handle_PNaming_HArray1OfNamedShape Arguments() const;
  
        Handle_PNaming_NamedShape StopNamedShape() const;
  
        void Index(const Standard_Integer I) ;
  
        Standard_Integer Index() const;

PNaming_Name(const Storage_stCONSTclCOM& a) : Standard_Persistent(a)
{
  
}
    Standard_Integer _CSFDB_GetPNaming_NamemyType() const { return myType; }
    void _CSFDB_SetPNaming_NamemyType(const Standard_Integer p) { myType = p; }
    Standard_Integer _CSFDB_GetPNaming_NamemyShapeType() const { return myShapeType; }
    void _CSFDB_SetPNaming_NamemyShapeType(const Standard_Integer p) { myShapeType = p; }
    Handle(PNaming_HArray1OfNamedShape) _CSFDB_GetPNaming_NamemyArgs() const { return myArgs; }
    void _CSFDB_SetPNaming_NamemyArgs(const Handle(PNaming_HArray1OfNamedShape)& p) { myArgs = p; }
    Handle(PNaming_NamedShape) _CSFDB_GetPNaming_NamemyStop() const { return myStop; }
    void _CSFDB_SetPNaming_NamemyStop(const Handle(PNaming_NamedShape)& p) { myStop = p; }
    Standard_Integer _CSFDB_GetPNaming_NamemyIndex() const { return myIndex; }
    void _CSFDB_SetPNaming_NamemyIndex(const Standard_Integer p) { myIndex = p; }



  DEFINE_STANDARD_RTTI(PNaming_Name)

protected:




private: 


Standard_Integer myType;
Standard_Integer myShapeType;
Handle_PNaming_HArray1OfNamedShape myArgs;
Handle_PNaming_NamedShape myStop;
Standard_Integer myIndex;


};


#include <PNaming_Name.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
