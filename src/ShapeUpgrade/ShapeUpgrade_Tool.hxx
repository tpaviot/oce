// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _ShapeUpgrade_Tool_HeaderFile
#define _ShapeUpgrade_Tool_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_ShapeUpgrade_Tool_HeaderFile
#include <Handle_ShapeUpgrade_Tool.hxx>
#endif

#ifndef _Handle_ShapeBuild_ReShape_HeaderFile
#include <Handle_ShapeBuild_ReShape.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
class ShapeBuild_ReShape;


//! Tool is a root class for splitting classes <br>
//!          Provides context for recording changes, basic <br>
//!          precision value and limit (minimal and maximal) <br>
//!          values for tolerances <br>
class ShapeUpgrade_Tool : public MMgt_TShared {

public:

  //! Empty constructor <br>
  Standard_EXPORT   ShapeUpgrade_Tool();
  //! Copy all fields from another Root object <br>
  Standard_EXPORT     void Set(const Handle(ShapeUpgrade_Tool)& tool) ;
  //! Sets context <br>
        void SetContext(const Handle(ShapeBuild_ReShape)& context) ;
  //! Returns context <br>
        Handle_ShapeBuild_ReShape Context() const;
  //! Sets basic precision value <br>
        void SetPrecision(const Standard_Real preci) ;
  //! Returns basic precision value <br>
        Standard_Real Precision() const;
  //! Sets minimal allowed tolerance <br>
        void SetMinTolerance(const Standard_Real mintol) ;
  //! Returns minimal allowed tolerance <br>
        Standard_Real MinTolerance() const;
  //! Sets maximal allowed tolerance <br>
        void SetMaxTolerance(const Standard_Real maxtol) ;
  //! Returns maximal allowed tolerance <br>
        Standard_Real MaxTolerance() const;
  //! Returns tolerance limited by [myMinTol,myMaxTol] <br>
        Standard_Real LimitTolerance(const Standard_Real toler) const;




  DEFINE_STANDARD_RTTI(ShapeUpgrade_Tool)

protected:




private: 


Handle_ShapeBuild_ReShape myContext;
Standard_Real myPrecision;
Standard_Real myMinTol;
Standard_Real myMaxTol;


};


#include <ShapeUpgrade_Tool.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
