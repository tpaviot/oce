// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _ShapeUpgrade_SplitCurve3dContinuity_HeaderFile
#define _ShapeUpgrade_SplitCurve3dContinuity_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_ShapeUpgrade_SplitCurve3dContinuity_HeaderFile
#include <Handle_ShapeUpgrade_SplitCurve3dContinuity.hxx>
#endif

#ifndef _GeomAbs_Shape_HeaderFile
#include <GeomAbs_Shape.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _ShapeUpgrade_SplitCurve3d_HeaderFile
#include <ShapeUpgrade_SplitCurve3d.hxx>
#endif
#ifndef _Handle_Geom_Curve_HeaderFile
#include <Handle_Geom_Curve.hxx>
#endif
class Geom_Curve;


//! Corrects/splits a 2d curve with a continuity criterion. <br>
//!  Tolerance is used to correct the curve at a knot that respects <br>
//!  geometrically the criterion, in order to reduce the <br>
//!  multiplicity of the knot. <br>
class ShapeUpgrade_SplitCurve3dContinuity : public ShapeUpgrade_SplitCurve3d {

public:

  //! Empty constructor. <br>
  Standard_EXPORT   ShapeUpgrade_SplitCurve3dContinuity();
  //! Sets criterion for splitting. <br>
  Standard_EXPORT     void SetCriterion(const GeomAbs_Shape Criterion) ;
  //! Sets tolerance. <br>
  Standard_EXPORT     void SetTolerance(const Standard_Real Tol) ;
  //! Calculates points for correction/splitting of the curve <br>
  Standard_EXPORT   virtual  void Compute() ;
  
  Standard_EXPORT    const Handle_Geom_Curve& GetCurve() const;




  DEFINE_STANDARD_RTTI(ShapeUpgrade_SplitCurve3dContinuity)

protected:




private: 


GeomAbs_Shape myCriterion;
Standard_Real myTolerance;
Standard_Integer myCont;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
