// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Dynamic_Parameter_HeaderFile
#define _Dynamic_Parameter_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Dynamic_Parameter_HeaderFile
#include <Handle_Dynamic_Parameter.hxx>
#endif

#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
class TCollection_HAsciiString;
class TCollection_AsciiString;


//! A  parameter is defined  as  the association of  a <br>
//!          name and a value.  For easy use, inherited classes <br>
//!          have been  created  to manipulate  values by their <br>
//!          C++ type.  This class is the root class of all the <br>
//!          derived parameter classes.  Only the identifier of <br>
//!          the parameter is  stored  in it.   The  associated <br>
//!          value is stored in the  inherited classes where it <br>
//!          is more  easy to overload the methods manipulating <br>
//!          the  value.   No  instance of  this class  must be <br>
//!          created. It is for this  reason that this class is <br>
//!          deferred. <br>
class Dynamic_Parameter : public MMgt_TShared {

public:

  //! Returns in an AsciiString the name of the parameter. <br>
  Standard_EXPORT     TCollection_AsciiString Name() const;
  //! Useful for debugging. <br>
  Standard_EXPORT   virtual  void Dump(Standard_OStream& astream) const;




  DEFINE_STANDARD_RTTI(Dynamic_Parameter)

protected:

  //! Initializer of this class  taking in argument the name <br>
//!          of the parameter <aname>. <br>
  Standard_EXPORT   Dynamic_Parameter(const Standard_CString aname);



private: 


Handle_TCollection_HAsciiString theparametername;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
