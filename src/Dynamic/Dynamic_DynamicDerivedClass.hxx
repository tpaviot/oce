// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Dynamic_DynamicDerivedClass_HeaderFile
#define _Dynamic_DynamicDerivedClass_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Dynamic_DynamicDerivedClass_HeaderFile
#include <Handle_Dynamic_DynamicDerivedClass.hxx>
#endif

#ifndef _Handle_Dynamic_SequenceOfClasses_HeaderFile
#include <Handle_Dynamic_SequenceOfClasses.hxx>
#endif
#ifndef _Dynamic_DynamicClass_HeaderFile
#include <Dynamic_DynamicClass.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Handle_Dynamic_DynamicClass_HeaderFile
#include <Handle_Dynamic_DynamicClass.hxx>
#endif
#ifndef _Handle_Dynamic_Method_HeaderFile
#include <Handle_Dynamic_Method.hxx>
#endif
#ifndef _Handle_Dynamic_DynamicInstance_HeaderFile
#include <Handle_Dynamic_DynamicInstance.hxx>
#endif
class Dynamic_SequenceOfClasses;
class Dynamic_DynamicClass;
class Dynamic_Method;
class Dynamic_DynamicInstance;


//! The object of  this class is  to allow, as in  the <br>
//!          C++ language,    the  possibility  to   define   a <br>
//!          DynamicDerivedClass  which  inherits from   one or <br>
//!          more DynamicClass. <br>
class Dynamic_DynamicDerivedClass : public Dynamic_DynamicClass {

public:

  //! Creates a new instance of this class with <aname> as name. <br>
  Standard_EXPORT   Dynamic_DynamicDerivedClass(const Standard_CString aname);
  //! Adds another class <aclass> to the sequence of derived <br>
//!          classes. <br>
  Standard_EXPORT     void AddClass(const Handle(Dynamic_DynamicClass)& aclass) ;
  //! Starting with  the name of  a method,  this  redefined <br>
//!          method searches for   the  right method object  in the <br>
//!          sequence of methods  of  the derived class and  in all <br>
//!          the inherited classes. <br>
  Standard_EXPORT   virtual  Handle_Dynamic_Method Method(const Standard_CString amethod) const;
  //! Defines an instance of this class definition. <br>
  Standard_EXPORT   virtual  Handle_Dynamic_DynamicInstance Instance() const;




  DEFINE_STANDARD_RTTI(Dynamic_DynamicDerivedClass)

protected:




private: 


Handle_Dynamic_SequenceOfClasses thesequenceofclasses;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
