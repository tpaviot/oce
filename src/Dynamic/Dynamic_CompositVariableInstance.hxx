// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Dynamic_CompositVariableInstance_HeaderFile
#define _Dynamic_CompositVariableInstance_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Dynamic_CompositVariableInstance_HeaderFile
#include <Handle_Dynamic_CompositVariableInstance.hxx>
#endif

#ifndef _Handle_Dynamic_VariableNode_HeaderFile
#include <Handle_Dynamic_VariableNode.hxx>
#endif
#ifndef _Dynamic_AbstractVariableInstance_HeaderFile
#include <Dynamic_AbstractVariableInstance.hxx>
#endif
#ifndef _Handle_Dynamic_Variable_HeaderFile
#include <Handle_Dynamic_Variable.hxx>
#endif
class Dynamic_VariableNode;
class Dynamic_Variable;


//! This  class corresponds to  the instanciation of a <br>
//!          variable group. It allows the setting of more than <br>
//!          one variable in  a variable instance. It is useful <br>
//!          when a  method takes  a collection  of homogeneous <br>
//!          objects as   argument. For   example a wire  needs <br>
//!          edges as argument. <br>
class Dynamic_CompositVariableInstance : public Dynamic_AbstractVariableInstance {

public:

  //! Creates  a new  empty  instance of   CompositVariable- <br>
//!          Instance. <br>
  Standard_EXPORT   Dynamic_CompositVariableInstance();
  //! Sets <avariable> into the collection of variable. <br>
  Standard_EXPORT   virtual  void Variable(const Handle(Dynamic_Variable)& avariable) ;
  //! Returns the first VariableNode  useful to explore  the <br>
//!          list of variables addressed by <me>. <br>
  Standard_EXPORT     Handle_Dynamic_VariableNode FirstVariableNode() const;




  DEFINE_STANDARD_RTTI(Dynamic_CompositVariableInstance)

protected:




private: 


Handle_Dynamic_VariableNode thefirstvariablenode;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
