// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IntSurf_SequenceOfPntOn2S_HeaderFile
#define _IntSurf_SequenceOfPntOn2S_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _TCollection_BaseSequence_HeaderFile
#include <TCollection_BaseSequence.hxx>
#endif
#ifndef _Handle_IntSurf_SequenceNodeOfSequenceOfPntOn2S_HeaderFile
#include <Handle_IntSurf_SequenceNodeOfSequenceOfPntOn2S.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class Standard_NoSuchObject;
class Standard_OutOfRange;
class IntSurf_PntOn2S;
class IntSurf_SequenceNodeOfSequenceOfPntOn2S;



class IntSurf_SequenceOfPntOn2S  : public TCollection_BaseSequence {
public:

  DEFINE_STANDARD_ALLOC

  
      IntSurf_SequenceOfPntOn2S();
  
  Standard_EXPORT     void Clear() ;
~IntSurf_SequenceOfPntOn2S()
{
  Clear();
}
  
  Standard_EXPORT    const IntSurf_SequenceOfPntOn2S& Assign(const IntSurf_SequenceOfPntOn2S& Other) ;
   const IntSurf_SequenceOfPntOn2S& operator =(const IntSurf_SequenceOfPntOn2S& Other) 
{
  return Assign(Other);
}
  
  Standard_EXPORT     void Append(const IntSurf_PntOn2S& T) ;
  
        void Append(IntSurf_SequenceOfPntOn2S& S) ;
  
  Standard_EXPORT     void Prepend(const IntSurf_PntOn2S& T) ;
  
        void Prepend(IntSurf_SequenceOfPntOn2S& S) ;
  
        void InsertBefore(const Standard_Integer Index,const IntSurf_PntOn2S& T) ;
  
        void InsertBefore(const Standard_Integer Index,IntSurf_SequenceOfPntOn2S& S) ;
  
  Standard_EXPORT     void InsertAfter(const Standard_Integer Index,const IntSurf_PntOn2S& T) ;
  
        void InsertAfter(const Standard_Integer Index,IntSurf_SequenceOfPntOn2S& S) ;
  
  Standard_EXPORT    const IntSurf_PntOn2S& First() const;
  
  Standard_EXPORT    const IntSurf_PntOn2S& Last() const;
  
        void Split(const Standard_Integer Index,IntSurf_SequenceOfPntOn2S& Sub) ;
  
  Standard_EXPORT    const IntSurf_PntOn2S& Value(const Standard_Integer Index) const;
   const IntSurf_PntOn2S& operator()(const Standard_Integer Index) const
{
  return Value(Index);
}
  
  Standard_EXPORT     void SetValue(const Standard_Integer Index,const IntSurf_PntOn2S& I) ;
  
  Standard_EXPORT     IntSurf_PntOn2S& ChangeValue(const Standard_Integer Index) ;
    IntSurf_PntOn2S& operator()(const Standard_Integer Index) 
{
  return ChangeValue(Index);
}
  
  Standard_EXPORT     void Remove(const Standard_Integer Index) ;
  
  Standard_EXPORT     void Remove(const Standard_Integer FromIndex,const Standard_Integer ToIndex) ;





protected:





private:

  
  Standard_EXPORT   IntSurf_SequenceOfPntOn2S(const IntSurf_SequenceOfPntOn2S& Other);




};

#define SeqItem IntSurf_PntOn2S
#define SeqItem_hxx <IntSurf_PntOn2S.hxx>
#define TCollection_SequenceNode IntSurf_SequenceNodeOfSequenceOfPntOn2S
#define TCollection_SequenceNode_hxx <IntSurf_SequenceNodeOfSequenceOfPntOn2S.hxx>
#define Handle_TCollection_SequenceNode Handle_IntSurf_SequenceNodeOfSequenceOfPntOn2S
#define TCollection_SequenceNode_Type_() IntSurf_SequenceNodeOfSequenceOfPntOn2S_Type_()
#define TCollection_Sequence IntSurf_SequenceOfPntOn2S
#define TCollection_Sequence_hxx <IntSurf_SequenceOfPntOn2S.hxx>

#include <TCollection_Sequence.lxx>

#undef SeqItem
#undef SeqItem_hxx
#undef TCollection_SequenceNode
#undef TCollection_SequenceNode_hxx
#undef Handle_TCollection_SequenceNode
#undef TCollection_SequenceNode_Type_
#undef TCollection_Sequence
#undef TCollection_Sequence_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
