// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

#include <Standard_DomainError.hxx>


inline void IntSurf_Transition::SetValue (const Standard_Boolean Tangent,
				   const IntSurf_TypeTrans Type) {
  tangent = Tangent;
  typetra = Type;
}


inline void IntSurf_Transition::SetValue (const Standard_Boolean Tangent,
				   const IntSurf_Situation Situ,
				   const Standard_Boolean Oppos) {

  tangent = Tangent;
  typetra = IntSurf_Touch;
  situat = Situ;
  oppos = Oppos;
}


inline void IntSurf_Transition::SetValue () {

  typetra = IntSurf_Undecided;
}


inline IntSurf_TypeTrans IntSurf_Transition::TransitionType () const {

  return typetra;
}


inline Standard_Boolean IntSurf_Transition::IsTangent () const {

  if (typetra == IntSurf_Undecided) {Standard_DomainError::Raise();}
  return tangent;
}


inline IntSurf_Situation IntSurf_Transition::Situation () const {

  if (typetra != IntSurf_Touch) {Standard_DomainError::Raise();}
  return situat;
}


inline Standard_Boolean IntSurf_Transition::IsOpposite () const {

  if (typetra != IntSurf_Touch) {Standard_DomainError::Raise();}
  return oppos;
}



