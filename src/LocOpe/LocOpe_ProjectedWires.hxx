// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _LocOpe_ProjectedWires_HeaderFile
#define _LocOpe_ProjectedWires_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_LocOpe_ProjectedWires_HeaderFile
#include <Handle_LocOpe_ProjectedWires.hxx>
#endif

#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
class TopoDS_Edge;
class TopoDS_Face;
class TopoDS_Vertex;
class TopoDS_Shape;



class LocOpe_ProjectedWires : public MMgt_TShared {

public:

  
  Standard_EXPORT   virtual  void InitEdgeIterator()  = 0;
  
  Standard_EXPORT   virtual  Standard_Boolean MoreEdge()  = 0;
  
  Standard_EXPORT   virtual  TopoDS_Edge Edge()  = 0;
  //! Returns the face of the shape on which the current <br>
//!          edge is projected. <br>
  Standard_EXPORT   virtual  TopoDS_Face OnFace()  = 0;
  //! If the   current  edge is  projected  on  an edge, <br>
//!          returns <Standard_True> and sets the value of <E>. <br>
//!          Otherwise, returns <Standard_False>. <br>
  Standard_EXPORT   virtual  Standard_Boolean OnEdge(TopoDS_Edge& E)  = 0;
  
  Standard_EXPORT   virtual  void NextEdge()  = 0;
  
  Standard_EXPORT   virtual  Standard_Boolean OnVertex(const TopoDS_Vertex& Vwire,TopoDS_Vertex& Vshape)  = 0;
  //! If the vertex <V> lies on  an edge of the original <br>
//!          shape,  returns     <Standard_True> and   sets the <br>
//!          concerned edge in  <E>,  and the parameter on  the <br>
//!          edge in <P>. <br>
//!          Else returns <Standard_False>. <br>
  Standard_EXPORT   virtual  Standard_Boolean OnEdge(const TopoDS_Vertex& V,TopoDS_Edge& E,Standard_Real& P)  = 0;
  //! tells is the face to be split by section or not <br>
  Standard_EXPORT   virtual  Standard_Boolean IsFaceWithSection(const TopoDS_Shape& aFace) const = 0;




  DEFINE_STANDARD_RTTI(LocOpe_ProjectedWires)

protected:




private: 




};





// other Inline functions and methods (like "C++: function call" methods)


#endif
