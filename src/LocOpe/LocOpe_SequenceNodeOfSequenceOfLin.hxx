// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _LocOpe_SequenceNodeOfSequenceOfLin_HeaderFile
#define _LocOpe_SequenceNodeOfSequenceOfLin_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_LocOpe_SequenceNodeOfSequenceOfLin_HeaderFile
#include <Handle_LocOpe_SequenceNodeOfSequenceOfLin.hxx>
#endif

#ifndef _gp_Lin_HeaderFile
#include <gp_Lin.hxx>
#endif
#ifndef _TCollection_SeqNode_HeaderFile
#include <TCollection_SeqNode.hxx>
#endif
#ifndef _TCollection_SeqNodePtr_HeaderFile
#include <TCollection_SeqNodePtr.hxx>
#endif
class gp_Lin;
class LocOpe_SequenceOfLin;



class LocOpe_SequenceNodeOfSequenceOfLin : public TCollection_SeqNode {

public:

  
      LocOpe_SequenceNodeOfSequenceOfLin(const gp_Lin& I,const TCollection_SeqNodePtr& n,const TCollection_SeqNodePtr& p);
  
        gp_Lin& Value() const;




  DEFINE_STANDARD_RTTI(LocOpe_SequenceNodeOfSequenceOfLin)

protected:




private: 


gp_Lin myValue;


};

#define SeqItem gp_Lin
#define SeqItem_hxx <gp_Lin.hxx>
#define TCollection_SequenceNode LocOpe_SequenceNodeOfSequenceOfLin
#define TCollection_SequenceNode_hxx <LocOpe_SequenceNodeOfSequenceOfLin.hxx>
#define Handle_TCollection_SequenceNode Handle_LocOpe_SequenceNodeOfSequenceOfLin
#define TCollection_SequenceNode_Type_() LocOpe_SequenceNodeOfSequenceOfLin_Type_()
#define TCollection_Sequence LocOpe_SequenceOfLin
#define TCollection_Sequence_hxx <LocOpe_SequenceOfLin.hxx>

#include <TCollection_SequenceNode.lxx>

#undef SeqItem
#undef SeqItem_hxx
#undef TCollection_SequenceNode
#undef TCollection_SequenceNode_hxx
#undef Handle_TCollection_SequenceNode
#undef TCollection_SequenceNode_Type_
#undef TCollection_Sequence
#undef TCollection_Sequence_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
