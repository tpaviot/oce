// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _PColStd_SeqNodeOfHSequenceOfHExtendedString_HeaderFile
#define _PColStd_SeqNodeOfHSequenceOfHExtendedString_HeaderFile

#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_PColStd_SeqNodeOfHSequenceOfHExtendedString_HeaderFile
#include <Handle_PColStd_SeqNodeOfHSequenceOfHExtendedString.hxx>
#endif

#ifndef _Handle_PCollection_HExtendedString_HeaderFile
#include <Handle_PCollection_HExtendedString.hxx>
#endif
#ifndef _Handle_PColStd_SeqNodeOfHSequenceOfHExtendedString_HeaderFile
#include <Handle_PColStd_SeqNodeOfHSequenceOfHExtendedString.hxx>
#endif
#ifndef _PMMgt_PManaged_HeaderFile
#include <PMMgt_PManaged.hxx>
#endif
#ifndef _Handle_PColStd_HSequenceOfHExtendedString_HeaderFile
#include <Handle_PColStd_HSequenceOfHExtendedString.hxx>
#endif
class PCollection_HExtendedString;
class PColStd_HSequenceOfHExtendedString;
class PColStd_SeqExplorerOfHSequenceOfHExtendedString;


class PColStd_SeqNodeOfHSequenceOfHExtendedString : public PMMgt_PManaged {

public:

  
  Standard_EXPORT   PColStd_SeqNodeOfHSequenceOfHExtendedString(const Handle(PColStd_SeqNodeOfHSequenceOfHExtendedString)& TheLast,const Handle(PCollection_HExtendedString)& TheItem);
  
  Standard_EXPORT   PColStd_SeqNodeOfHSequenceOfHExtendedString(const Handle(PCollection_HExtendedString)& TheItem,const Handle(PColStd_SeqNodeOfHSequenceOfHExtendedString)& TheFirst);
  
  Standard_EXPORT   PColStd_SeqNodeOfHSequenceOfHExtendedString(const Handle(PColStd_SeqNodeOfHSequenceOfHExtendedString)& ThePrevious,const Handle(PColStd_SeqNodeOfHSequenceOfHExtendedString)& TheNext,const Handle(PCollection_HExtendedString)& TheItem);
  
  Standard_EXPORT     Handle_PCollection_HExtendedString Value() const;
  
  Standard_EXPORT     Handle_PColStd_SeqNodeOfHSequenceOfHExtendedString Next() const;
  
  Standard_EXPORT     Handle_PColStd_SeqNodeOfHSequenceOfHExtendedString Previous() const;
  
  Standard_EXPORT     void SetValue(const Handle(PCollection_HExtendedString)& AnItem) ;
  
  Standard_EXPORT     void SetNext(const Handle(PColStd_SeqNodeOfHSequenceOfHExtendedString)& ANode) ;
  
  Standard_EXPORT     void SetPrevious(const Handle(PColStd_SeqNodeOfHSequenceOfHExtendedString)& ANode) ;

  PColStd_SeqNodeOfHSequenceOfHExtendedString( )
{
  
}
PColStd_SeqNodeOfHSequenceOfHExtendedString(const Storage_stCONSTclCOM& a) : PMMgt_PManaged(a)
{
  
}
    Handle(PColStd_SeqNodeOfHSequenceOfHExtendedString) _CSFDB_GetPColStd_SeqNodeOfHSequenceOfHExtendedStringMyPrevious() const { return MyPrevious; }
    void _CSFDB_SetPColStd_SeqNodeOfHSequenceOfHExtendedStringMyPrevious(const Handle(PColStd_SeqNodeOfHSequenceOfHExtendedString)& p) { MyPrevious = p; }
    Handle(PCollection_HExtendedString) _CSFDB_GetPColStd_SeqNodeOfHSequenceOfHExtendedStringMyItem() const { return MyItem; }
    void _CSFDB_SetPColStd_SeqNodeOfHSequenceOfHExtendedStringMyItem(const Handle(PCollection_HExtendedString)& p) { MyItem = p; }
    Handle(PColStd_SeqNodeOfHSequenceOfHExtendedString) _CSFDB_GetPColStd_SeqNodeOfHSequenceOfHExtendedStringMyNext() const { return MyNext; }
    void _CSFDB_SetPColStd_SeqNodeOfHSequenceOfHExtendedStringMyNext(const Handle(PColStd_SeqNodeOfHSequenceOfHExtendedString)& p) { MyNext = p; }

friend class PColStd_HSequenceOfHExtendedString;
friend class PColStd_SeqExplorerOfHSequenceOfHExtendedString;


  DEFINE_STANDARD_RTTI(PColStd_SeqNodeOfHSequenceOfHExtendedString)

protected:




private: 


Handle_PColStd_SeqNodeOfHSequenceOfHExtendedString MyPrevious;
Handle_PCollection_HExtendedString MyItem;
Handle_PColStd_SeqNodeOfHSequenceOfHExtendedString MyNext;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
