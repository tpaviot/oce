// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BooleanOperations_Explorer_HeaderFile
#define _BooleanOperations_Explorer_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _BooleanOperations_PShapesDataStructure_HeaderFile
#include <BooleanOperations_PShapesDataStructure.hxx>
#endif
#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _TopAbs_ShapeEnum_HeaderFile
#include <TopAbs_ShapeEnum.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
class BooleanOperations_ShapesDataStructure;


//!  the explorer associated  to the Data Structure to <br>
//!          retrieve   subshapes of a  given   shape stored in <br>
//!          ShapesDataStructure. <br>
class BooleanOperations_Explorer  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   BooleanOperations_Explorer(const BooleanOperations_ShapesDataStructure& SDS);
  
  Standard_EXPORT   virtual  void Delete() ;
Standard_EXPORT virtual ~BooleanOperations_Explorer()  {Delete();}
  
  Standard_EXPORT   virtual  void Init(const Standard_Integer aShape,const TopAbs_ShapeEnum TargetToFind,const TopAbs_ShapeEnum TargetToAvoid = TopAbs_SHAPE) ;
  
  Standard_EXPORT   virtual  void Next() ;
  
  Standard_EXPORT     Standard_Boolean More() const;
  
  Standard_EXPORT   virtual  Standard_Integer Current() ;
  
  Standard_EXPORT   virtual  void Dump(Standard_OStream& S) const;





protected:



BooleanOperations_PShapesDataStructure myShapesDataStructure;
Standard_Address myStack;
Standard_Integer myTopOfStack;
Standard_Integer mySizeOfStack;
TopAbs_ShapeEnum myTargetToFind;
TopAbs_ShapeEnum myTargetToAvoid;
Standard_Boolean hasMore;


private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
