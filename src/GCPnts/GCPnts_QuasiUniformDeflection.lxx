// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

#include <StdFail_NotDone.hxx>

//=======================================================================
//function : IsDone
//purpose  : 
//=======================================================================

inline Standard_Boolean GCPnts_QuasiUniformDeflection::IsDone () const
{
  return myDone;
}

//=======================================================================
//function : Deflection
//purpose  : 
//=======================================================================

inline Standard_Real GCPnts_QuasiUniformDeflection::Deflection () const
{ 
  StdFail_NotDone_Raise_if(!myDone, 
			 "GCPnts_QuasiUniformDeflection::Deflection()");
  return myDeflection;
}

//=======================================================================
//function : NbPoints
//purpose  : 
//=======================================================================

inline Standard_Integer GCPnts_QuasiUniformDeflection::NbPoints () const
{ 
  StdFail_NotDone_Raise_if(!myDone, 
			 "GCPnts_QuasiUniformDeflection::NbPoints()");
  return myParams.Length();
}

//=======================================================================
//function : Parameter
//purpose  : 
//=======================================================================

inline Standard_Real GCPnts_QuasiUniformDeflection::Parameter
                      (const Standard_Integer Index) const
{ 
  StdFail_NotDone_Raise_if(!myDone, 
                             "GCPnts_QuasiUniformDeflection::Parameter()");
  return myParams(Index);
}

