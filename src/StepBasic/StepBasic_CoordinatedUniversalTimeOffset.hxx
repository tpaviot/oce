// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StepBasic_CoordinatedUniversalTimeOffset_HeaderFile
#define _StepBasic_CoordinatedUniversalTimeOffset_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_StepBasic_CoordinatedUniversalTimeOffset_HeaderFile
#include <Handle_StepBasic_CoordinatedUniversalTimeOffset.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _StepBasic_AheadOrBehind_HeaderFile
#include <StepBasic_AheadOrBehind.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif



class StepBasic_CoordinatedUniversalTimeOffset : public MMgt_TShared {

public:

  //! Returns a CoordinatedUniversalTimeOffset <br>
  Standard_EXPORT   StepBasic_CoordinatedUniversalTimeOffset();
  
  Standard_EXPORT   virtual  void Init(const Standard_Integer aHourOffset,const Standard_Boolean hasAminuteOffset,const Standard_Integer aMinuteOffset,const StepBasic_AheadOrBehind aSense) ;
  
  Standard_EXPORT     void SetHourOffset(const Standard_Integer aHourOffset) ;
  
  Standard_EXPORT     Standard_Integer HourOffset() const;
  
  Standard_EXPORT     void SetMinuteOffset(const Standard_Integer aMinuteOffset) ;
  
  Standard_EXPORT     void UnSetMinuteOffset() ;
  
  Standard_EXPORT     Standard_Integer MinuteOffset() const;
  
  Standard_EXPORT     Standard_Boolean HasMinuteOffset() const;
  
  Standard_EXPORT     void SetSense(const StepBasic_AheadOrBehind aSense) ;
  
  Standard_EXPORT     StepBasic_AheadOrBehind Sense() const;




  DEFINE_STANDARD_RTTI(StepBasic_CoordinatedUniversalTimeOffset)

protected:




private: 


Standard_Integer hourOffset;
Standard_Integer minuteOffset;
StepBasic_AheadOrBehind sense;
Standard_Boolean hasMinuteOffset;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
