// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StepBasic_ProductConceptContext_HeaderFile
#define _StepBasic_ProductConceptContext_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_StepBasic_ProductConceptContext_HeaderFile
#include <Handle_StepBasic_ProductConceptContext.hxx>
#endif

#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _StepBasic_ApplicationContextElement_HeaderFile
#include <StepBasic_ApplicationContextElement.hxx>
#endif
#ifndef _Handle_StepBasic_ApplicationContext_HeaderFile
#include <Handle_StepBasic_ApplicationContext.hxx>
#endif
class TCollection_HAsciiString;
class StepBasic_ApplicationContext;


//! Representation of STEP entity ProductConceptContext <br>
class StepBasic_ProductConceptContext : public StepBasic_ApplicationContextElement {

public:

  //! Empty constructor <br>
  Standard_EXPORT   StepBasic_ProductConceptContext();
  //! Initialize all fields (own and inherited) <br>
  Standard_EXPORT     void Init(const Handle(TCollection_HAsciiString)& aApplicationContextElement_Name,const Handle(StepBasic_ApplicationContext)& aApplicationContextElement_FrameOfReference,const Handle(TCollection_HAsciiString)& aMarketSegmentType) ;
  //! Returns field MarketSegmentType <br>
  Standard_EXPORT     Handle_TCollection_HAsciiString MarketSegmentType() const;
  //! Set field MarketSegmentType <br>
  Standard_EXPORT     void SetMarketSegmentType(const Handle(TCollection_HAsciiString)& MarketSegmentType) ;




  DEFINE_STANDARD_RTTI(StepBasic_ProductConceptContext)

protected:




private: 


Handle_TCollection_HAsciiString theMarketSegmentType;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
