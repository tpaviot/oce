// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Geom2dGcc_MyCurveTool_HeaderFile
#define _Geom2dGcc_MyCurveTool_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _GeomAbs_CurveType_HeaderFile
#include <GeomAbs_CurveType.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Geom2dAdaptor_Curve;
class Geom2dGcc_CurveTool;
class Adaptor3d_OffsetCurve;
class gp_Lin2d;
class gp_Circ2d;
class gp_Elips2d;
class gp_Parab2d;
class gp_Hypr2d;
class gp_Pnt2d;
class gp_Vec2d;



class Geom2dGcc_MyCurveTool  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   static  GeomAbs_CurveType TheType(const Adaptor3d_OffsetCurve& C) ;
  
  Standard_EXPORT   static  gp_Lin2d Line(const Adaptor3d_OffsetCurve& C) ;
  
  Standard_EXPORT   static  gp_Circ2d Circle(const Adaptor3d_OffsetCurve& C) ;
  
  Standard_EXPORT   static  gp_Elips2d Ellipse(const Adaptor3d_OffsetCurve& C) ;
  
  Standard_EXPORT   static  gp_Parab2d Parabola(const Adaptor3d_OffsetCurve& C) ;
  
  Standard_EXPORT   static  gp_Hypr2d Hyperbola(const Adaptor3d_OffsetCurve& C) ;
  
  Standard_EXPORT   static  Standard_Real FirstParameter(const Adaptor3d_OffsetCurve& C) ;
  
  Standard_EXPORT   static  Standard_Real LastParameter(const Adaptor3d_OffsetCurve& C) ;
  
  Standard_EXPORT   static  Standard_Real EpsX(const Adaptor3d_OffsetCurve& C,const Standard_Real Tol) ;
  
  Standard_EXPORT   static  Standard_Integer NbSamples(const Adaptor3d_OffsetCurve& C) ;
  
  Standard_EXPORT   static  gp_Pnt2d Value(const Adaptor3d_OffsetCurve& C,const Standard_Real X) ;
  
  Standard_EXPORT   static  void D1(const Adaptor3d_OffsetCurve& C,const Standard_Real U,gp_Pnt2d& P,gp_Vec2d& T) ;
  
  Standard_EXPORT   static  void D2(const Adaptor3d_OffsetCurve& C,const Standard_Real U,gp_Pnt2d& P,gp_Vec2d& T,gp_Vec2d& N) ;
  
  Standard_EXPORT   static  Standard_Boolean IsComposite(const Adaptor3d_OffsetCurve& C) ;
  
  Standard_EXPORT   static  Standard_Integer GetIntervals(const Adaptor3d_OffsetCurve& C) ;
  
  Standard_EXPORT   static  void GetInterval(const Adaptor3d_OffsetCurve& C,const Standard_Integer Index,Standard_Real& U1,Standard_Real& U2) ;
  
  Standard_EXPORT   static  void SetCurrentInterval(Adaptor3d_OffsetCurve& C,const Standard_Integer Index) ;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
