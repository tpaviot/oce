// Created by: Peter KURNEV
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

//=======================================================================
//function : 
//purpose  : 
//=======================================================================
  inline BOPDS_Point::BOPDS_Point()
{
  myPnt.SetCoord(99.,99.,99.);
  myPnt2D1.SetCoord(99.,99.);
  myPnt2D2=myPnt2D1;
  myIndex=-1;
}
//=======================================================================
//function : ~
//purpose  : 
//=======================================================================
  inline BOPDS_Point::~BOPDS_Point()
{
}
//=======================================================================
//function : SetIndex
//purpose  : 
//=======================================================================
  inline void BOPDS_Point::SetIndex(const Standard_Integer theIndex)
{
  myIndex=theIndex;
}
//=======================================================================
//function : Index
//purpose  : 
//=======================================================================
  inline Standard_Integer BOPDS_Point::Index()const
{
  return myIndex;
}
//=======================================================================
//function : SetPnt
//purpose  : 
//=======================================================================
  inline void BOPDS_Point::SetPnt(const gp_Pnt& thePnt)
{
  myPnt=thePnt;
}
//=======================================================================
//function : Pnt
//purpose  : 
//=======================================================================
  inline const gp_Pnt& BOPDS_Point::Pnt()const
{
  return myPnt;
}
//=======================================================================
//function : SetPnt2D1
//purpose  : 
//=======================================================================
  inline void BOPDS_Point::SetPnt2D1(const gp_Pnt2d& thePnt)
{
  myPnt2D1=thePnt;
}
//=======================================================================
//function : Pnt2D1
//purpose  : 
//=======================================================================
  inline const gp_Pnt2d& BOPDS_Point::Pnt2D1()const
{
  return myPnt2D1;
}
//=======================================================================
//function : SetPnt2D2
//purpose  : 
//=======================================================================
  inline void BOPDS_Point::SetPnt2D2(const gp_Pnt2d& thePnt)
{
  myPnt2D2=thePnt;
}
//=======================================================================
//function : Pnt2D2
//purpose  : 
//=======================================================================
  inline const gp_Pnt2d& BOPDS_Point::Pnt2D2()const
{
  return myPnt2D2;
}
