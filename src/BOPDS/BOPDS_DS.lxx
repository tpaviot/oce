// Created by: Peter KURNEV
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

#include <BOPDS_PassKey.hxx>
//=======================================================================
//function : InterfVV
//purpose  : 
//=======================================================================
  inline BOPDS_VectorOfInterfVV& BOPDS_DS::InterfVV()
{
  return myInterfVV;
}
//=======================================================================
//function : InterfVE
//purpose  : 
//=======================================================================
  inline BOPDS_VectorOfInterfVE& BOPDS_DS::InterfVE()
{
  return myInterfVE;
}
//=======================================================================
//function : InterfVF
//purpose  : 
//=======================================================================
  inline BOPDS_VectorOfInterfVF& BOPDS_DS::InterfVF()
{
  return myInterfVF;
}//=======================================================================
//function : InterfEE
//purpose  : 
//=======================================================================
  inline BOPDS_VectorOfInterfEE& BOPDS_DS::InterfEE()
{
  return myInterfEE;
}
//=======================================================================
//function : InterfEF
//purpose  : 
//=======================================================================
  inline BOPDS_VectorOfInterfEF& BOPDS_DS::InterfEF()
{
  return myInterfEF;
}
//=======================================================================
//function : InterfFF
//purpose  : 
//=======================================================================
  inline BOPDS_VectorOfInterfFF& BOPDS_DS::InterfFF()
{
  return myInterfFF;
}
//=======================================================================
//function : AddInterf
//purpose  : 
//=======================================================================
  inline void BOPDS_DS::AddInterf(const Standard_Integer theI1,
				  const Standard_Integer theI2)
{
  BOPDS_PassKey aPK;
  //
  aPK.SetIds(theI1, theI2);
  myInterfTB.Add(aPK);
}
//=======================================================================
//function : HasInterf
//purpose  : 
//=======================================================================
  inline Standard_Boolean BOPDS_DS::HasInterf(const Standard_Integer theI1,
					      const Standard_Integer theI2)const
{
  BOPDS_PassKey aPK;
  //
  aPK.SetIds(theI1, theI2);
  return myInterfTB.Contains(aPK);
}
//=======================================================================
//function : Interferences
//purpose  : 
//=======================================================================
  inline const BOPDS_MapOfPassKey& BOPDS_DS::Interferences()const
{
  return myInterfTB;
}
