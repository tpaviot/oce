// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _VrmlConverter_PointAspect_HeaderFile
#define _VrmlConverter_PointAspect_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_VrmlConverter_PointAspect_HeaderFile
#include <Handle_VrmlConverter_PointAspect.hxx>
#endif

#ifndef _Handle_Vrml_Material_HeaderFile
#include <Handle_Vrml_Material.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
class Vrml_Material;


//! qualifies the aspect properties for <br>
//!          the VRML conversation of points. <br>
class VrmlConverter_PointAspect : public MMgt_TShared {

public:

  //! create a default PointAspect. <br>
//!  Default value: HasMaterial  =  False  - a  line  hasn't  own  material (color) <br>
  Standard_EXPORT   VrmlConverter_PointAspect();
  
  Standard_EXPORT   VrmlConverter_PointAspect(const Handle(Vrml_Material)& aMaterial,const Standard_Boolean OnOff);
  
  Standard_EXPORT     void SetMaterial(const Handle(Vrml_Material)& aMaterial) ;
  
  Standard_EXPORT     Handle_Vrml_Material Material() const;
  //! defines the necessary of writing  own  Material from Vrml into  output  OStream. <br>
//!          By default False  -  the material is not writing into OStream, <br>
//!          True  -  the material is writing. <br>
  Standard_EXPORT     void SetHasMaterial(const Standard_Boolean OnOff) ;
  //! returns True if the  materials is  writing into OStream. <br>
  Standard_EXPORT     Standard_Boolean HasMaterial() const;




  DEFINE_STANDARD_RTTI(VrmlConverter_PointAspect)

protected:




private: 


Handle_Vrml_Material myMaterial;
Standard_Boolean myHasMaterial;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
