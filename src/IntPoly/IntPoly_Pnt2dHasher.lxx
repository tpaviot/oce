// Created on: 1995-07-20
// Created by: Stagiaire Alain JOURDAIN
// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <IntPoly_IndexedMapOfPnt2d.hxx>
#include <gp_Pnt2d.hxx>
#include <TColStd_MapRealHasher.hxx>
#include <Precision.hxx>

//=======================================================================
//function : HashCode
//purpose  : 
//=======================================================================

inline Standard_Integer IntPoly_Pnt2dHasher::HashCode(const gp_Pnt2d& Point,
						      const Standard_Integer upper)
{
  return TColStd_MapRealHasher::HashCode(Point.X()+Point.Y(),upper);
}


//=======================================================================
//function : IsEqual
//purpose  : 
//=======================================================================

inline Standard_Boolean IntPoly_Pnt2dHasher::IsEqual(const gp_Pnt2d& Point1,
						     const gp_Pnt2d& Point2)
{
  return ((Point1.X() == Point2.X()) && (Point1.Y() == Point2.Y()));
}
