// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IntAna_ListOfCurve_HeaderFile
#define _IntAna_ListOfCurve_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Handle_IntAna_ListNodeOfListOfCurve_HeaderFile
#include <Handle_IntAna_ListNodeOfListOfCurve.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_NoSuchObject;
class IntAna_ListIteratorOfListOfCurve;
class IntAna_Curve;
class IntAna_ListNodeOfListOfCurve;



class IntAna_ListOfCurve  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   IntAna_ListOfCurve();
  
  Standard_EXPORT     void Assign(const IntAna_ListOfCurve& Other) ;
    void operator=(const IntAna_ListOfCurve& Other) 
{
  Assign(Other);
}
  
  Standard_EXPORT     Standard_Integer Extent() const;
  
  Standard_EXPORT     void Clear() ;
~IntAna_ListOfCurve()
{
  Clear();
}
  
        Standard_Boolean IsEmpty() const;
  
  Standard_EXPORT     void Prepend(const IntAna_Curve& I) ;
  
  Standard_EXPORT     void Prepend(const IntAna_Curve& I,IntAna_ListIteratorOfListOfCurve& theIt) ;
  
  Standard_EXPORT     void Prepend(IntAna_ListOfCurve& Other) ;
  
  Standard_EXPORT     void Append(const IntAna_Curve& I) ;
  
  Standard_EXPORT     void Append(const IntAna_Curve& I,IntAna_ListIteratorOfListOfCurve& theIt) ;
  
  Standard_EXPORT     void Append(IntAna_ListOfCurve& Other) ;
  
  Standard_EXPORT     IntAna_Curve& First() const;
  
  Standard_EXPORT     IntAna_Curve& Last() const;
  
  Standard_EXPORT     void RemoveFirst() ;
  
  Standard_EXPORT     void Remove(IntAna_ListIteratorOfListOfCurve& It) ;
  
  Standard_EXPORT     void InsertBefore(const IntAna_Curve& I,IntAna_ListIteratorOfListOfCurve& It) ;
  
  Standard_EXPORT     void InsertBefore(IntAna_ListOfCurve& Other,IntAna_ListIteratorOfListOfCurve& It) ;
  
  Standard_EXPORT     void InsertAfter(const IntAna_Curve& I,IntAna_ListIteratorOfListOfCurve& It) ;
  
  Standard_EXPORT     void InsertAfter(IntAna_ListOfCurve& Other,IntAna_ListIteratorOfListOfCurve& It) ;


friend class IntAna_ListIteratorOfListOfCurve;



protected:





private:

  
  Standard_EXPORT   IntAna_ListOfCurve(const IntAna_ListOfCurve& Other);


Standard_Address myFirst;
Standard_Address myLast;


};

#define Item IntAna_Curve
#define Item_hxx <IntAna_Curve.hxx>
#define TCollection_ListNode IntAna_ListNodeOfListOfCurve
#define TCollection_ListNode_hxx <IntAna_ListNodeOfListOfCurve.hxx>
#define TCollection_ListIterator IntAna_ListIteratorOfListOfCurve
#define TCollection_ListIterator_hxx <IntAna_ListIteratorOfListOfCurve.hxx>
#define Handle_TCollection_ListNode Handle_IntAna_ListNodeOfListOfCurve
#define TCollection_ListNode_Type_() IntAna_ListNodeOfListOfCurve_Type_()
#define TCollection_List IntAna_ListOfCurve
#define TCollection_List_hxx <IntAna_ListOfCurve.hxx>

#include <TCollection_List.lxx>

#undef Item
#undef Item_hxx
#undef TCollection_ListNode
#undef TCollection_ListNode_hxx
#undef TCollection_ListIterator
#undef TCollection_ListIterator_hxx
#undef Handle_TCollection_ListNode
#undef TCollection_ListNode_Type_
#undef TCollection_List
#undef TCollection_List_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
