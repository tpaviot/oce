// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _GeomFill_CoonsAlgPatch_HeaderFile
#define _GeomFill_CoonsAlgPatch_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_GeomFill_CoonsAlgPatch_HeaderFile
#include <Handle_GeomFill_CoonsAlgPatch.hxx>
#endif

#ifndef _Handle_GeomFill_Boundary_HeaderFile
#include <Handle_GeomFill_Boundary.hxx>
#endif
#ifndef _gp_Pnt_HeaderFile
#include <gp_Pnt.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Handle_Law_Function_HeaderFile
#include <Handle_Law_Function.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class GeomFill_Boundary;
class Law_Function;
class gp_Pnt;
class gp_Vec;


//! Provides  evaluation   methods on an   algorithmic <br>
//!          patch   defined by  its   boundaries and  blending <br>
//!          functions. <br>
class GeomFill_CoonsAlgPatch : public MMgt_TShared {

public:

  //! Constructs the  algorithmic   patch. By   Default  the <br>
//!          constructed blending functions are linear. <br>
//!  Warning: No control is done on the bounds. <br>
//!          B1/B3 and B2/B4 must be same range and well oriented. <br>
  Standard_EXPORT   GeomFill_CoonsAlgPatch(const Handle(GeomFill_Boundary)& B1,const Handle(GeomFill_Boundary)& B2,const Handle(GeomFill_Boundary)& B3,const Handle(GeomFill_Boundary)& B4);
  //! Give the blending functions. <br>
  Standard_EXPORT     void Func(Handle(Law_Function)& f1,Handle(Law_Function)& f2) const;
  //! Set the blending functions. <br>
  Standard_EXPORT     void SetFunc(const Handle(Law_Function)& f1,const Handle(Law_Function)& f2) ;
  //! Computes  the  value   on the  algorithmic    patch at <br>
//!          parameters U and V. <br>
  Standard_EXPORT     gp_Pnt Value(const Standard_Real U,const Standard_Real V) const;
  //! Computes   the  d/dU   partial   derivative  on    the <br>
//!          algorithmic patch at parameters U and V. <br>
  Standard_EXPORT     gp_Vec D1U(const Standard_Real U,const Standard_Real V) const;
  //! Computes    the  d/dV    partial    derivative on  the <br>
//!          algorithmic patch at parameters U and V. <br>
  Standard_EXPORT     gp_Vec D1V(const Standard_Real U,const Standard_Real V) const;
  //! Computes the   d2/dUdV  partial  derivative   on   the <br>
//!          algorithmic  patch made with linear blending functions <br>
//!          at parameter U and V. <br>
  Standard_EXPORT     gp_Vec DUV(const Standard_Real U,const Standard_Real V) const;
  
  Standard_EXPORT    const gp_Pnt& Corner(const Standard_Integer I) const;
  
  Standard_EXPORT    const Handle_GeomFill_Boundary& Bound(const Standard_Integer I) const;
  
  Standard_EXPORT    const Handle_Law_Function& Func(const Standard_Integer I) const;




  DEFINE_STANDARD_RTTI(GeomFill_CoonsAlgPatch)

protected:




private: 


Handle_GeomFill_Boundary bound[4];
gp_Pnt c[4];
Standard_Real gap[4];
Handle_Law_Function a[2];


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
