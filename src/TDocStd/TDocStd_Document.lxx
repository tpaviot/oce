// Created on: 2002-11-19
// Created by: Vladimir ANIKIN
// Copyright (c) 2002-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <TDF_Data.hxx>

//=======================================================================
//function : SetNestedTransactionMode
//purpose  : Sets nested transaction mode if isAllowed == Standard_True
//=======================================================================

inline void
  TDocStd_Document::SetNestedTransactionMode (const Standard_Boolean isAllowed)
{
  myIsNestedTransactionMode = isAllowed;
}

//=======================================================================
//function : SetNestedTransactionMode
//purpose  : Sets nested transaction mode if isAllowed == Standard_True
//=======================================================================

inline Standard_Boolean
  TDocStd_Document::IsNestedTransactionMode () const
{
  return myIsNestedTransactionMode;
}

//=======================================================================
//function : IsModified
//purpose  : returns True if document differs from the state of last saving.
//           this method have to be called only wroking in the transaction mode
//=======================================================================

inline Standard_Boolean
  TDocStd_Document::IsChanged () const
{
  return myData->Time() != mySaveTime;
}

//=======================================================================
//function : SetSaved
//purpose  : This method have to be called to show document that it has been saved
//=======================================================================

inline void
  TDocStd_Document::SetSaved ()
{
  mySaveTime = myData->Time();
}

//=======================================================================
//function : SetModificationMode
//purpose  : if theTransactionOnly is True changes is denied outside transactions
//=======================================================================

inline void TDocStd_Document::SetModificationMode
  (const Standard_Boolean theTransactionOnly)
{
  myOnlyTransactionModification = theTransactionOnly;

  // deny or allow modifications acording to transaction state
  if(myOnlyTransactionModification) {
    myData->AllowModification(myUndoTransaction.IsOpen());
  }
  else {
    myData->AllowModification(Standard_True);
  }
}

//=======================================================================
//function : ModificationMode
//purpose  : returns True if changes allowed only inside transactions
//=======================================================================

inline Standard_Boolean TDocStd_Document::ModificationMode() const
{
  return myOnlyTransactionModification;
}

//=======================================================================
//function : SetSavedTime
//purpose  : Say to document what it is not saved. Use value, returned earlier by GetSavedTime().
//=======================================================================
inline void TDocStd_Document::SetSavedTime (const Standard_Integer theTime)
{
  mySaveTime = theTime;
}

//=======================================================================
//function : GetSavedTime
//purpose  : Returns value of <mySavedTime> to be used later in SetSavedTime()
//=======================================================================
inline Standard_Integer TDocStd_Document::GetSavedTime () const
{
  return mySaveTime;
}
