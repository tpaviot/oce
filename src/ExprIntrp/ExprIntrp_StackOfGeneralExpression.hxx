// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _ExprIntrp_StackOfGeneralExpression_HeaderFile
#define _ExprIntrp_StackOfGeneralExpression_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_Expr_GeneralExpression_HeaderFile
#include <Handle_Expr_GeneralExpression.hxx>
#endif
#ifndef _Handle_ExprIntrp_StackNodeOfStackOfGeneralExpression_HeaderFile
#include <Handle_ExprIntrp_StackNodeOfStackOfGeneralExpression.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_NoSuchObject;
class ExprIntrp_StackIteratorOfStackOfGeneralExpression;
class Expr_GeneralExpression;
class ExprIntrp_StackNodeOfStackOfGeneralExpression;



class ExprIntrp_StackOfGeneralExpression  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   ExprIntrp_StackOfGeneralExpression();
  
  Standard_EXPORT    const ExprIntrp_StackOfGeneralExpression& Assign(const ExprIntrp_StackOfGeneralExpression& Other) ;
   const ExprIntrp_StackOfGeneralExpression& operator =(const ExprIntrp_StackOfGeneralExpression& Other) 
{
  return Assign(Other);
}
  
        Standard_Boolean IsEmpty() const;
  
        Standard_Integer Depth() const;
  
  Standard_EXPORT    const Handle_Expr_GeneralExpression& Top() const;
  
  Standard_EXPORT     void Push(const Handle(Expr_GeneralExpression)& I) ;
  
  Standard_EXPORT     void Pop() ;
  
  Standard_EXPORT     void Clear() ;
~ExprIntrp_StackOfGeneralExpression()
{
  Clear();
}
  
  Standard_EXPORT     Handle_Expr_GeneralExpression& ChangeTop() ;


friend class ExprIntrp_StackIteratorOfStackOfGeneralExpression;



protected:





private:

  
  Standard_EXPORT   ExprIntrp_StackOfGeneralExpression(const ExprIntrp_StackOfGeneralExpression& Other);


Standard_Address myTop;
Standard_Integer myDepth;


};

#define Item Handle_Expr_GeneralExpression
#define Item_hxx <Expr_GeneralExpression.hxx>
#define TCollection_StackNode ExprIntrp_StackNodeOfStackOfGeneralExpression
#define TCollection_StackNode_hxx <ExprIntrp_StackNodeOfStackOfGeneralExpression.hxx>
#define TCollection_StackIterator ExprIntrp_StackIteratorOfStackOfGeneralExpression
#define TCollection_StackIterator_hxx <ExprIntrp_StackIteratorOfStackOfGeneralExpression.hxx>
#define Handle_TCollection_StackNode Handle_ExprIntrp_StackNodeOfStackOfGeneralExpression
#define TCollection_StackNode_Type_() ExprIntrp_StackNodeOfStackOfGeneralExpression_Type_()
#define TCollection_Stack ExprIntrp_StackOfGeneralExpression
#define TCollection_Stack_hxx <ExprIntrp_StackOfGeneralExpression.hxx>

#include <TCollection_Stack.lxx>

#undef Item
#undef Item_hxx
#undef TCollection_StackNode
#undef TCollection_StackNode_hxx
#undef TCollection_StackIterator
#undef TCollection_StackIterator_hxx
#undef Handle_TCollection_StackNode
#undef TCollection_StackNode_Type_
#undef TCollection_Stack
#undef TCollection_Stack_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
