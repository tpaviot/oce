// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Transfer_ActorOfProcessForTransient_HeaderFile
#define _Transfer_ActorOfProcessForTransient_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Transfer_ActorOfProcessForTransient_HeaderFile
#include <Handle_Transfer_ActorOfProcessForTransient.hxx>
#endif

#ifndef _Handle_Transfer_ActorOfProcessForTransient_HeaderFile
#include <Handle_Transfer_ActorOfProcessForTransient.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfTransient_HeaderFile
#include <Handle_TColStd_HSequenceOfTransient.hxx>
#endif
#ifndef _Handle_Transfer_ProcessForTransient_HeaderFile
#include <Handle_Transfer_ProcessForTransient.hxx>
#endif
#ifndef _Handle_Transfer_IndexedDataMapNodeOfTransferMapOfProcessForTransient_HeaderFile
#include <Handle_Transfer_IndexedDataMapNodeOfTransferMapOfProcessForTransient.hxx>
#endif
#ifndef _Handle_Transfer_Binder_HeaderFile
#include <Handle_Transfer_Binder.hxx>
#endif
#ifndef _Handle_Transfer_SimpleBinderOfTransient_HeaderFile
#include <Handle_Transfer_SimpleBinderOfTransient.hxx>
#endif
class Standard_DomainError;
class Standard_Transient;
class TColStd_MapTransientHasher;
class TColStd_HSequenceOfTransient;
class Transfer_ProcessForTransient;
class Transfer_TransferMapOfProcessForTransient;
class Transfer_IndexedDataMapNodeOfTransferMapOfProcessForTransient;
class Transfer_IteratorOfProcessForTransient;
class Transfer_Binder;
class Transfer_SimpleBinderOfTransient;



class Transfer_ActorOfProcessForTransient : public MMgt_TShared {

public:

  
  Standard_EXPORT   Transfer_ActorOfProcessForTransient();
  
  Standard_EXPORT   virtual  Standard_Boolean Recognize(const Handle(Standard_Transient)& start) ;
  
  Standard_EXPORT   virtual  Handle_Transfer_Binder Transferring(const Handle(Standard_Transient)& start,const Handle(Transfer_ProcessForTransient)& TP) ;
  
  Standard_EXPORT     Handle_Transfer_SimpleBinderOfTransient TransientResult(const Handle(Standard_Transient)& res) const;
  
  Standard_EXPORT     Handle_Transfer_Binder NullResult() const;
  
  Standard_EXPORT     void SetLast(const Standard_Boolean mode = Standard_True) ;
  
  Standard_EXPORT     Standard_Boolean IsLast() const;
  
  Standard_EXPORT     void SetNext(const Handle(Transfer_ActorOfProcessForTransient)& next) ;
  
  Standard_EXPORT     Handle_Transfer_ActorOfProcessForTransient Next() const;




  DEFINE_STANDARD_RTTI(Transfer_ActorOfProcessForTransient)

protected:




private: 


Handle_Transfer_ActorOfProcessForTransient thenext;
Standard_Boolean thelast;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
