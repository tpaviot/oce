// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Transfer_ActorOfFinderProcess_HeaderFile
#define _Transfer_ActorOfFinderProcess_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Transfer_ActorOfFinderProcess_HeaderFile
#include <Handle_Transfer_ActorOfFinderProcess.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Transfer_ActorOfProcessForFinder_HeaderFile
#include <Transfer_ActorOfProcessForFinder.hxx>
#endif
#ifndef _Handle_Transfer_Binder_HeaderFile
#include <Handle_Transfer_Binder.hxx>
#endif
#ifndef _Handle_Transfer_Finder_HeaderFile
#include <Handle_Transfer_Finder.hxx>
#endif
#ifndef _Handle_Transfer_ProcessForFinder_HeaderFile
#include <Handle_Transfer_ProcessForFinder.hxx>
#endif
#ifndef _Handle_Transfer_FinderProcess_HeaderFile
#include <Handle_Transfer_FinderProcess.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
class Transfer_Binder;
class Transfer_Finder;
class Transfer_ProcessForFinder;
class Transfer_FinderProcess;
class Standard_Transient;


//! The original class was renamed. Compatibility only <br>
//! <br>
//!         ModeTrans : a simple way of transmitting a transfer mode from <br>
//!         a user. To be interpreted for each norm <br>
class Transfer_ActorOfFinderProcess : public Transfer_ActorOfProcessForFinder {

public:

  
  Standard_EXPORT   Transfer_ActorOfFinderProcess();
  //! Returns the Transfer Mode, modifiable <br>
  Standard_EXPORT     Standard_Integer& ModeTrans() ;
  
  Standard_EXPORT   virtual  Handle_Transfer_Binder Transferring(const Handle(Transfer_Finder)& start,const Handle(Transfer_ProcessForFinder)& TP) ;
  
  Standard_EXPORT   virtual  Handle_Transfer_Binder Transfer(const Handle(Transfer_Finder)& start,const Handle(Transfer_FinderProcess)& TP) ;
  
  Standard_EXPORT   virtual  Handle_Standard_Transient TransferTransient(const Handle(Standard_Transient)& start,const Handle(Transfer_FinderProcess)& TP) ;




  DEFINE_STANDARD_RTTI(Transfer_ActorOfFinderProcess)

protected:


Standard_Integer themodetrans;


private: 




};





// other Inline functions and methods (like "C++: function call" methods)


#endif
