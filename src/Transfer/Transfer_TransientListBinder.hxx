// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Transfer_TransientListBinder_HeaderFile
#define _Transfer_TransientListBinder_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Transfer_TransientListBinder_HeaderFile
#include <Handle_Transfer_TransientListBinder.hxx>
#endif

#ifndef _Handle_TColStd_HSequenceOfTransient_HeaderFile
#include <Handle_TColStd_HSequenceOfTransient.hxx>
#endif
#ifndef _Transfer_Binder_HeaderFile
#include <Transfer_Binder.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_Standard_Type_HeaderFile
#include <Handle_Standard_Type.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class TColStd_HSequenceOfTransient;
class Standard_TypeMismatch;
class Standard_OutOfRange;
class Standard_Type;
class Standard_Transient;


//! This binder binds several (a list of) Transients with a starting <br>
//!           entity, when this entity itself corresponds to a simple list <br>
//!           of Transients. Each part is not seen as a sub-result of an <br>
//!           independant componant, but as an item of a built-in list <br>
class Transfer_TransientListBinder : public Transfer_Binder {

public:

  
  Standard_EXPORT   Transfer_TransientListBinder();
  
  Standard_EXPORT   Transfer_TransientListBinder(const Handle(TColStd_HSequenceOfTransient)& list);
  
  Standard_EXPORT   virtual  Standard_Boolean IsMultiple() const;
  
  Standard_EXPORT     Handle_Standard_Type ResultType() const;
  
  Standard_EXPORT     Standard_CString ResultTypeName() const;
  //! Adds an item to the result list <br>
  Standard_EXPORT     void AddResult(const Handle(Standard_Transient)& res) ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfTransient Result() const;
  //! Changes an already defined sub-result <br>
  Standard_EXPORT     void SetResult(const Standard_Integer num,const Handle(Standard_Transient)& res) ;
  
  Standard_EXPORT     Standard_Integer NbTransients() const;
  
  Standard_EXPORT    const Handle_Standard_Transient& Transient(const Standard_Integer num) const;




  DEFINE_STANDARD_RTTI(Transfer_TransientListBinder)

protected:




private: 


Handle_TColStd_HSequenceOfTransient theres;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
