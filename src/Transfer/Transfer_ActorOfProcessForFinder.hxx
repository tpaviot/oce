// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Transfer_ActorOfProcessForFinder_HeaderFile
#define _Transfer_ActorOfProcessForFinder_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Transfer_ActorOfProcessForFinder_HeaderFile
#include <Handle_Transfer_ActorOfProcessForFinder.hxx>
#endif

#ifndef _Handle_Transfer_ActorOfProcessForFinder_HeaderFile
#include <Handle_Transfer_ActorOfProcessForFinder.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Handle_Transfer_Finder_HeaderFile
#include <Handle_Transfer_Finder.hxx>
#endif
#ifndef _Handle_Transfer_HSequenceOfFinder_HeaderFile
#include <Handle_Transfer_HSequenceOfFinder.hxx>
#endif
#ifndef _Handle_Transfer_ProcessForFinder_HeaderFile
#include <Handle_Transfer_ProcessForFinder.hxx>
#endif
#ifndef _Handle_Transfer_IndexedDataMapNodeOfTransferMapOfProcessForFinder_HeaderFile
#include <Handle_Transfer_IndexedDataMapNodeOfTransferMapOfProcessForFinder.hxx>
#endif
#ifndef _Handle_Transfer_Binder_HeaderFile
#include <Handle_Transfer_Binder.hxx>
#endif
#ifndef _Handle_Transfer_SimpleBinderOfTransient_HeaderFile
#include <Handle_Transfer_SimpleBinderOfTransient.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
class Standard_DomainError;
class Transfer_Finder;
class Transfer_FindHasher;
class Transfer_HSequenceOfFinder;
class Transfer_ProcessForFinder;
class Transfer_TransferMapOfProcessForFinder;
class Transfer_IndexedDataMapNodeOfTransferMapOfProcessForFinder;
class Transfer_IteratorOfProcessForFinder;
class Transfer_Binder;
class Transfer_SimpleBinderOfTransient;
class Standard_Transient;



class Transfer_ActorOfProcessForFinder : public MMgt_TShared {

public:

  
  Standard_EXPORT   Transfer_ActorOfProcessForFinder();
  
  Standard_EXPORT   virtual  Standard_Boolean Recognize(const Handle(Transfer_Finder)& start) ;
  
  Standard_EXPORT   virtual  Handle_Transfer_Binder Transferring(const Handle(Transfer_Finder)& start,const Handle(Transfer_ProcessForFinder)& TP) ;
  
  Standard_EXPORT     Handle_Transfer_SimpleBinderOfTransient TransientResult(const Handle(Standard_Transient)& res) const;
  
  Standard_EXPORT     Handle_Transfer_Binder NullResult() const;
  
  Standard_EXPORT     void SetLast(const Standard_Boolean mode = Standard_True) ;
  
  Standard_EXPORT     Standard_Boolean IsLast() const;
  
  Standard_EXPORT     void SetNext(const Handle(Transfer_ActorOfProcessForFinder)& next) ;
  
  Standard_EXPORT     Handle_Transfer_ActorOfProcessForFinder Next() const;




  DEFINE_STANDARD_RTTI(Transfer_ActorOfProcessForFinder)

protected:




private: 


Handle_Transfer_ActorOfProcessForFinder thenext;
Standard_Boolean thelast;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
