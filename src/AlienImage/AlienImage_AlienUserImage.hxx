// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _AlienImage_AlienUserImage_HeaderFile
#define _AlienImage_AlienUserImage_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_AlienImage_AlienUserImage_HeaderFile
#include <Handle_AlienImage_AlienUserImage.hxx>
#endif

#ifndef _AlienImage_AlienImage_HeaderFile
#include <AlienImage_AlienImage.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Handle_Image_Image_HeaderFile
#include <Handle_Image_Image.hxx>
#endif
class Standard_TypeMismatch;
class OSD_File;
class Image_Image;


//! This class defines an Alien user image. <br>
//! Alien Image is X11 .xwd image or SGI .rgb image for examples <br>
class AlienImage_AlienUserImage : public AlienImage_AlienImage {

public:

  //! Read content of a  UserAlienImage object from a file . <br>
//!         Returns True if sucess . <br>
  Standard_EXPORT   virtual  Standard_Boolean Read(OSD_File& afile)  = 0;
  //! Read content of a UserAlienImage object from a file . <br>
//!          Returns True if file is a AlienImage file . <br>
  Standard_EXPORT     Standard_Boolean Read(const Standard_CString afile) ;
  //! Write content of a UserAlienImage object to a file . <br>
  Standard_EXPORT   virtual  Standard_Boolean Write(OSD_File& afile) const = 0;
  //! Write content of a UserAlienImage object to a file . <br>
  Standard_EXPORT     Standard_Boolean Write(const Standard_CString afile) const;
  //! convert a AidaAlienData object to a Image object. <br>
  Standard_EXPORT   virtual  Handle_Image_Image ToImage() const = 0;
  //! convert a Image object to a AidaAlienData object. <br>
  Standard_EXPORT   virtual  void FromImage(const Handle(Image_Image)& anImage)  = 0;




  DEFINE_STANDARD_RTTI(AlienImage_AlienUserImage)

protected:

  
  Standard_EXPORT   AlienImage_AlienUserImage();



private: 




};





// other Inline functions and methods (like "C++: function call" methods)


#endif
