// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _AlienImage_X11XWDAlienData_HeaderFile
#define _AlienImage_X11XWDAlienData_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_AlienImage_X11XWDAlienData_HeaderFile
#include <Handle_AlienImage_X11XWDAlienData.hxx>
#endif

#ifndef _AlienImage_X11XWDFileHeader_HeaderFile
#include <AlienImage_X11XWDFileHeader.hxx>
#endif
#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _AlienImage_AlienImageData_HeaderFile
#include <AlienImage_AlienImageData.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_Image_Image_HeaderFile
#include <Handle_Image_Image.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_Image_PseudoColorImage_HeaderFile
#include <Handle_Image_PseudoColorImage.hxx>
#endif
#ifndef _Handle_Image_ColorImage_HeaderFile
#include <Handle_Image_ColorImage.hxx>
#endif
class Standard_OutOfRange;
class Standard_TypeMismatch;
class OSD_File;
class TCollection_AsciiString;
class Image_Image;
class Image_PseudoColorImage;
class Image_ColorImage;


//! This class defines a X11 Alien image. <br>
class AlienImage_X11XWDAlienData : public AlienImage_AlienImageData {

public:

  
  Standard_EXPORT   AlienImage_X11XWDAlienData();
  //! Frees memory allocated by X11XWDAlienData <br>
  Standard_EXPORT     void Clear() ;
~AlienImage_X11XWDAlienData()
{
  Clear();
}
  //! Read content of a  X11XWDAlienData object from a file <br>
//!          Returns True if file is a XWD file . <br>
  Standard_EXPORT     Standard_Boolean Read(OSD_File& afile) ;
  //! Write content of a  X11XWDAlienData object to a file <br>
  Standard_EXPORT     Standard_Boolean Write(OSD_File& afile) const;
  //! Set Image name . <br>
  Standard_EXPORT   virtual  void SetName(const TCollection_AsciiString& aName) ;
  //! Get Image name . <br>
  Standard_EXPORT   virtual const TCollection_AsciiString& Name() const;
  //! convert a X11XWDAlienData object to a Image object. <br>
  Standard_EXPORT     Handle_Image_Image ToImage() const;
  //! convert a Image object to a X11XWDAlienData object. <br>
  Standard_EXPORT     void FromImage(const Handle(Image_Image)& anImage) ;



  DEFINE_STANDARD_RTTI(AlienImage_X11XWDAlienData)

protected:


AlienImage_X11XWDFileHeader myHeader;
Standard_Address myColors;
Standard_Address myData;


private: 

  
  Standard_EXPORT     Standard_Integer Pixel(const Standard_Integer X,const Standard_Integer Y) const;
  
  Standard_EXPORT     void SetPixel(const Standard_Integer X,const Standard_Integer Y,const Standard_Integer Value) ;
  //! Compute the imaga data size in byte <br>
//!          from header information <br>
  Standard_EXPORT     Standard_Integer DataSize() const;
  //! Compute the red shift for TrueColor X11XWDImage <br>
  Standard_EXPORT     Standard_Integer RedShift() const;
  //! Compute the red shift for TrueColor X11XWDImage <br>
  Standard_EXPORT     Standard_Integer GreenShift() const;
  //! Compute the red shift for TrueColor X11XWDImage <br>
  Standard_EXPORT     Standard_Integer BlueShift() const;
  //! convert a Image object to a AlienImage object. <br>
  Standard_EXPORT     Handle_Image_PseudoColorImage ToPseudoColorImage() const;
  //! convert a Image object to a AlienImage object. <br>
  Standard_EXPORT     Handle_Image_ColorImage ToColorImage() const;
  //! convert a Image object to a X11XWDAlienData object. <br>
  Standard_EXPORT     void FromPseudoColorImage(const Handle(Image_PseudoColorImage)& anImage) ;
  //! convert a Image object to a X11XWDAlienData object. <br>
  Standard_EXPORT     void FromColorImage(const Handle(Image_ColorImage)& anImage) ;



};





// other Inline functions and methods (like "C++: function call" methods)


#endif
