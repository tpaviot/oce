// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _AlienImage_AidaAlienImage_HeaderFile
#define _AlienImage_AidaAlienImage_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_AlienImage_AidaAlienImage_HeaderFile
#include <Handle_AlienImage_AidaAlienImage.hxx>
#endif

#ifndef _Handle_AlienImage_AidaAlienData_HeaderFile
#include <Handle_AlienImage_AidaAlienData.hxx>
#endif
#ifndef _AlienImage_AlienUserImage_HeaderFile
#include <AlienImage_AlienUserImage.hxx>
#endif
#ifndef _Handle_Image_Image_HeaderFile
#include <Handle_Image_Image.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Image_DitheringMethod_HeaderFile
#include <Image_DitheringMethod.hxx>
#endif
#ifndef _Handle_Aspect_ColorMap_HeaderFile
#include <Handle_Aspect_ColorMap.hxx>
#endif
class AlienImage_AidaAlienData;
class Image_Image;
class OSD_File;
class Aspect_ColorMap;


//! This class defines an Aida Alien image ( BYTEMAPS ). <br>
class AlienImage_AidaAlienImage : public AlienImage_AlienUserImage {

public:

  
  Standard_EXPORT   AlienImage_AidaAlienImage();
  //! Frees memory allocated by AidaAlienImage <br>
  Standard_EXPORT     void Clear() ;
  //! convert a AidaAlienImage object to a Image object. <br>
  Standard_EXPORT     Handle_Image_Image ToImage() const;
  //! convert a Image object to a AidaAlienImage object. <br>
  Standard_EXPORT     void FromImage(const Handle(Image_Image)& anImage) ;
  //! Read content of a AidaAlienImage object from a file . <br>
//!          Returns True if file is a Aida file . <br>
  Standard_EXPORT     Standard_Boolean Read(OSD_File& afile) ;
  //! Write content of a  AidaAlienImage object to a file . <br>
  Standard_EXPORT     Standard_Boolean Write(OSD_File& afile) const;
  //! Set the ImageDitheringMethod and the ColorMap when <br>
//!          FromImage is called with a ColorImage . <br>
//!	      Aida BYTEMAPS file handle only PseudoColorImage . <br>
//!          Default value is DM_NearestColor, <br>
//!		ColorCubeColorMap( 40, 5,1, 8,6, 3,54 ) <br>
  Standard_EXPORT     void SetColorImageDitheringMethod(const Image_DitheringMethod aMethod,const Handle(Aspect_ColorMap)& aColorMap) ;




  DEFINE_STANDARD_RTTI(AlienImage_AidaAlienImage)

protected:




private: 


Handle_AlienImage_AidaAlienData myData;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
