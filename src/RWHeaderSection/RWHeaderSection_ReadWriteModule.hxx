// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _RWHeaderSection_ReadWriteModule_HeaderFile
#define _RWHeaderSection_ReadWriteModule_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_RWHeaderSection_ReadWriteModule_HeaderFile
#include <Handle_RWHeaderSection_ReadWriteModule.hxx>
#endif

#ifndef _StepData_ReadWriteModule_HeaderFile
#include <StepData_ReadWriteModule.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_StepData_StepReaderData_HeaderFile
#include <Handle_StepData_StepReaderData.hxx>
#endif
#ifndef _Handle_Interface_Check_HeaderFile
#include <Handle_Interface_Check.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
class TCollection_AsciiString;
class TColStd_SequenceOfAsciiString;
class StepData_StepReaderData;
class Interface_Check;
class Standard_Transient;
class StepData_StepWriter;


//! General module to read and write HeaderSection entities <br>
class RWHeaderSection_ReadWriteModule : public StepData_ReadWriteModule {

public:

  
  Standard_EXPORT   RWHeaderSection_ReadWriteModule();
  //! associates a positive Case Number to each type of HeaderSection entity, <br>
//! given as a String defined in the EXPRESS form <br>
  Standard_EXPORT     Standard_Integer CaseStep(const TCollection_AsciiString& atype) const;
  //! associates a positive Case Number to each type of HeaderSection Complex entity, <br>
//! given as a String defined in the EXPRESS form <br>
  Standard_EXPORT   virtual  Standard_Integer CaseStep(const TColStd_SequenceOfAsciiString& types) const;
  //! returns True if the Case Number corresponds to a Complex Type <br>
  Standard_EXPORT   virtual  Standard_Boolean IsComplex(const Standard_Integer CN) const;
  //! returns a StepType (defined in EXPRESS form which belongs to a <br>
//! Type of Entity, identified by its CaseNumber determined by Protocol <br>
  Standard_EXPORT    const TCollection_AsciiString& StepType(const Standard_Integer CN) const;
  
  Standard_EXPORT     void ReadStep(const Standard_Integer CN,const Handle(StepData_StepReaderData)& data,const Standard_Integer num,Handle(Interface_Check)& ach,const Handle(Standard_Transient)& ent) const;
  
  Standard_EXPORT     void WriteStep(const Standard_Integer CN,StepData_StepWriter& SW,const Handle(Standard_Transient)& ent) const;




  DEFINE_STANDARD_RTTI(RWHeaderSection_ReadWriteModule)

protected:




private: 




};





// other Inline functions and methods (like "C++: function call" methods)


#endif
