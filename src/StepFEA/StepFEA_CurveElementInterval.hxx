// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StepFEA_CurveElementInterval_HeaderFile
#define _StepFEA_CurveElementInterval_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_StepFEA_CurveElementInterval_HeaderFile
#include <Handle_StepFEA_CurveElementInterval.hxx>
#endif

#ifndef _Handle_StepFEA_CurveElementLocation_HeaderFile
#include <Handle_StepFEA_CurveElementLocation.hxx>
#endif
#ifndef _Handle_StepBasic_EulerAngles_HeaderFile
#include <Handle_StepBasic_EulerAngles.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
class StepFEA_CurveElementLocation;
class StepBasic_EulerAngles;


//! Representation of STEP entity CurveElementInterval <br>
class StepFEA_CurveElementInterval : public MMgt_TShared {

public:

  //! Empty constructor <br>
  Standard_EXPORT   StepFEA_CurveElementInterval();
  //! Initialize all fields (own and inherited) <br>
  Standard_EXPORT     void Init(const Handle(StepFEA_CurveElementLocation)& aFinishPosition,const Handle(StepBasic_EulerAngles)& aEuAngles) ;
  //! Returns field FinishPosition <br>
  Standard_EXPORT     Handle_StepFEA_CurveElementLocation FinishPosition() const;
  //! Set field FinishPosition <br>
  Standard_EXPORT     void SetFinishPosition(const Handle(StepFEA_CurveElementLocation)& FinishPosition) ;
  //! Returns field EuAngles <br>
  Standard_EXPORT     Handle_StepBasic_EulerAngles EuAngles() const;
  //! Set field EuAngles <br>
  Standard_EXPORT     void SetEuAngles(const Handle(StepBasic_EulerAngles)& EuAngles) ;




  DEFINE_STANDARD_RTTI(StepFEA_CurveElementInterval)

protected:




private: 


Handle_StepFEA_CurveElementLocation theFinishPosition;
Handle_StepBasic_EulerAngles theEuAngles;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
