// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Bisector_Curve_HeaderFile
#define _Bisector_Curve_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Bisector_Curve_HeaderFile
#include <Handle_Bisector_Curve.hxx>
#endif

#ifndef _Geom2d_Curve_HeaderFile
#include <Geom2d_Curve.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class gp_Pnt2d;



class Bisector_Curve : public Geom2d_Curve {

public:

  
  Standard_EXPORT   virtual  Standard_Real Parameter(const gp_Pnt2d& P) const = 0;
  
  Standard_EXPORT   virtual  Standard_Boolean IsExtendAtStart() const = 0;
  
  Standard_EXPORT   virtual  Standard_Boolean IsExtendAtEnd() const = 0;
  //! If necessary,  breaks the  curve in  intervals  of <br>
//!          continuity  <C1>.    And  returns   the number   of <br>
//!          intervals. <br>
  Standard_EXPORT   virtual  Standard_Integer NbIntervals() const = 0;
  //! Returns  the  first  parameter    of  the  current <br>
//!          interval. <br>
  Standard_EXPORT   virtual  Standard_Real IntervalFirst(const Standard_Integer Index) const = 0;
  //! Returns  the  last  parameter    of  the  current <br>
//!          interval. <br>
  Standard_EXPORT   virtual  Standard_Real IntervalLast(const Standard_Integer Index) const = 0;




  DEFINE_STANDARD_RTTI(Bisector_Curve)

protected:




private: 




};





// other Inline functions and methods (like "C++: function call" methods)


#endif
