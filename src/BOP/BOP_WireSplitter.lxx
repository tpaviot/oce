// Created on: 2009-12-15
// Created by: Sergey ZERCHANINOV
// Copyright (c) 2009-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


//=======================================================================
// function: BOP_WireSplitter::BOP_WireSplitter
// purpose: 
//=======================================================================
inline BOP_WireSplitter::BOP_WireSplitter()
: myIsDone(Standard_False),
  myNothingToDo(Standard_False)
{
}

//=======================================================================
// function: SetFace
// purpose: 
//=======================================================================
inline void BOP_WireSplitter::SetFace(const TopoDS_Face& aFace)
{
  myFace=aFace;
}

//=======================================================================
// function: Face
// purpose: 
//=======================================================================
inline const TopoDS_Face& BOP_WireSplitter::Face() const
{
  return myFace;
}

//=======================================================================
// function: IsNothingToDo
// purpose: 
//=======================================================================
inline Standard_Boolean BOP_WireSplitter::IsNothingToDo() const
{
  return myNothingToDo;
}

//=======================================================================
// function: IsDone
// purpose: 
//=======================================================================
inline Standard_Boolean BOP_WireSplitter::IsDone() const
{
  return myIsDone;
}

//=======================================================================
// function: Shapes
// purpose: 
//=======================================================================
inline const BOPTColStd_ListOfListOfShape& BOP_WireSplitter::Shapes() const
{
  return myShapes;
}
