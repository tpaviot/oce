// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StepVisual_ViewVolume_HeaderFile
#define _StepVisual_ViewVolume_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_StepVisual_ViewVolume_HeaderFile
#include <Handle_StepVisual_ViewVolume.hxx>
#endif

#ifndef _StepVisual_CentralOrParallel_HeaderFile
#include <StepVisual_CentralOrParallel.hxx>
#endif
#ifndef _Handle_StepGeom_CartesianPoint_HeaderFile
#include <Handle_StepGeom_CartesianPoint.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_StepVisual_PlanarBox_HeaderFile
#include <Handle_StepVisual_PlanarBox.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
class StepGeom_CartesianPoint;
class StepVisual_PlanarBox;



class StepVisual_ViewVolume : public MMgt_TShared {

public:

  //! Returns a ViewVolume <br>
  Standard_EXPORT   StepVisual_ViewVolume();
  
  Standard_EXPORT   virtual  void Init(const StepVisual_CentralOrParallel aProjectionType,const Handle(StepGeom_CartesianPoint)& aProjectionPoint,const Standard_Real aViewPlaneDistance,const Standard_Real aFrontPlaneDistance,const Standard_Boolean aFrontPlaneClipping,const Standard_Real aBackPlaneDistance,const Standard_Boolean aBackPlaneClipping,const Standard_Boolean aViewVolumeSidesClipping,const Handle(StepVisual_PlanarBox)& aViewWindow) ;
  
  Standard_EXPORT     void SetProjectionType(const StepVisual_CentralOrParallel aProjectionType) ;
  
  Standard_EXPORT     StepVisual_CentralOrParallel ProjectionType() const;
  
  Standard_EXPORT     void SetProjectionPoint(const Handle(StepGeom_CartesianPoint)& aProjectionPoint) ;
  
  Standard_EXPORT     Handle_StepGeom_CartesianPoint ProjectionPoint() const;
  
  Standard_EXPORT     void SetViewPlaneDistance(const Standard_Real aViewPlaneDistance) ;
  
  Standard_EXPORT     Standard_Real ViewPlaneDistance() const;
  
  Standard_EXPORT     void SetFrontPlaneDistance(const Standard_Real aFrontPlaneDistance) ;
  
  Standard_EXPORT     Standard_Real FrontPlaneDistance() const;
  
  Standard_EXPORT     void SetFrontPlaneClipping(const Standard_Boolean aFrontPlaneClipping) ;
  
  Standard_EXPORT     Standard_Boolean FrontPlaneClipping() const;
  
  Standard_EXPORT     void SetBackPlaneDistance(const Standard_Real aBackPlaneDistance) ;
  
  Standard_EXPORT     Standard_Real BackPlaneDistance() const;
  
  Standard_EXPORT     void SetBackPlaneClipping(const Standard_Boolean aBackPlaneClipping) ;
  
  Standard_EXPORT     Standard_Boolean BackPlaneClipping() const;
  
  Standard_EXPORT     void SetViewVolumeSidesClipping(const Standard_Boolean aViewVolumeSidesClipping) ;
  
  Standard_EXPORT     Standard_Boolean ViewVolumeSidesClipping() const;
  
  Standard_EXPORT     void SetViewWindow(const Handle(StepVisual_PlanarBox)& aViewWindow) ;
  
  Standard_EXPORT     Handle_StepVisual_PlanarBox ViewWindow() const;




  DEFINE_STANDARD_RTTI(StepVisual_ViewVolume)

protected:




private: 


StepVisual_CentralOrParallel projectionType;
Handle_StepGeom_CartesianPoint projectionPoint;
Standard_Real viewPlaneDistance;
Standard_Real frontPlaneDistance;
Standard_Boolean frontPlaneClipping;
Standard_Real backPlaneDistance;
Standard_Boolean backPlaneClipping;
Standard_Boolean viewVolumeSidesClipping;
Handle_StepVisual_PlanarBox viewWindow;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
