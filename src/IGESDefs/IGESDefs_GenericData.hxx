// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESDefs_GenericData_HeaderFile
#define _IGESDefs_GenericData_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IGESDefs_GenericData_HeaderFile
#include <Handle_IGESDefs_GenericData.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Handle_TColStd_HArray1OfInteger_HeaderFile
#include <Handle_TColStd_HArray1OfInteger.hxx>
#endif
#ifndef _Handle_TColStd_HArray1OfTransient_HeaderFile
#include <Handle_TColStd_HArray1OfTransient.hxx>
#endif
#ifndef _IGESData_IGESEntity_HeaderFile
#include <IGESData_IGESEntity.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Handle_IGESData_IGESEntity_HeaderFile
#include <Handle_IGESData_IGESEntity.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class TCollection_HAsciiString;
class TColStd_HArray1OfInteger;
class TColStd_HArray1OfTransient;
class Standard_DimensionMismatch;
class Standard_OutOfRange;
class Standard_NullObject;
class Standard_Transient;
class IGESData_IGESEntity;


//! defines IGES Generic Data, Type <406> Form <27> <br>
//!          in package IGESDefs <br>
//!          Used to communicate information defined by the system <br>
//!          operator while creating the model. The information is <br>
//!          system specific and does not map into one of the <br>
//!          predefined properties or associativities. Properties <br>
//!          and property values can be defined by multiple <br>
//!          instances of this property. <br>
class IGESDefs_GenericData : public IGESData_IGESEntity {

public:

  
  Standard_EXPORT   IGESDefs_GenericData();
  //! This method is used to set the fields of the class <br>
//!           GenericData <br>
//!       - nbPropVal : Number of property values <br>
//!       - aName     : Property Name <br>
//!       - allTypes  : Property Types <br>
//!       - allValues : Property Values <br>
  Standard_EXPORT     void Init(const Standard_Integer nbPropVal,const Handle(TCollection_HAsciiString)& aName,const Handle(TColStd_HArray1OfInteger)& allTypes,const Handle(TColStd_HArray1OfTransient)& allValues) ;
  //! returns the number of property values <br>
  Standard_EXPORT     Standard_Integer NbPropertyValues() const;
  //! returns property name <br>
  Standard_EXPORT     Handle_TCollection_HAsciiString Name() const;
  //! returns the number of TYPE/VALUE pairs <br>
  Standard_EXPORT     Standard_Integer NbTypeValuePairs() const;
  //! returns the Index'th property value data type <br>
//! raises exception if Index <= 0 or Index > NbTypeValuePairs() <br>
  Standard_EXPORT     Standard_Integer Type(const Standard_Integer Index) const;
  //!    HArray1OfInteger (length 1), HArray1OfReal (length 1) for <br>
//!    Integer, Real, Boolean (= Integer 0/1), <br>
//!    HAsciiString for String (the value itself), <br>
//!    IGESEntity for Entity (the value itself) <br>
  Standard_EXPORT     Handle_Standard_Transient Value(const Standard_Integer Index) const;
  //! Returns Attribute Value <AttrNum, rank ValueNum> as an Integer <br>//!   Error if Index out of Range, or not an Integer <br>
  Standard_EXPORT     Standard_Integer ValueAsInteger(const Standard_Integer ValueNum) const;
  //! Returns Attribute Value <AttrNum, rank ValueNum> as a Real <br>//!   Error if Index out of Range, or not a Real <br>
  Standard_EXPORT     Standard_Real ValueAsReal(const Standard_Integer ValueNum) const;
  //! Returns Attribute Value <AttrNum, rank ValueNum> as an Integer <br>
  Standard_EXPORT     Handle_TCollection_HAsciiString ValueAsString(const Standard_Integer ValueNum) const;
  //! Returns Attribute Value <AttrNum, rank ValueNum> as an Entity <br>//!   Error if Index out of Range, or not a Entity <br>
  Standard_EXPORT     Handle_IGESData_IGESEntity ValueAsEntity(const Standard_Integer ValueNum) const;
  //! Returns Attribute Value <AttrNum, rank ValueNum> as a Boolean <br>//!   Error if Index out of Range, or not a Logical <br>
  Standard_EXPORT     Standard_Boolean ValueAsLogical(const Standard_Integer ValueNum) const;




  DEFINE_STANDARD_RTTI(IGESDefs_GenericData)

protected:




private: 


Standard_Integer theNbPropertyValues;
Handle_TCollection_HAsciiString theName;
Handle_TColStd_HArray1OfInteger theTypes;
Handle_TColStd_HArray1OfTransient theValues;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
