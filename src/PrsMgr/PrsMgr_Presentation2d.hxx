// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _PrsMgr_Presentation2d_HeaderFile
#define _PrsMgr_Presentation2d_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_PrsMgr_Presentation2d_HeaderFile
#include <Handle_PrsMgr_Presentation2d.hxx>
#endif

#ifndef _Handle_Graphic2d_GraphicObject_HeaderFile
#include <Handle_Graphic2d_GraphicObject.hxx>
#endif
#ifndef _PrsMgr_Presentation_HeaderFile
#include <PrsMgr_Presentation.hxx>
#endif
#ifndef _Handle_PrsMgr_PresentationManager2d_HeaderFile
#include <Handle_PrsMgr_PresentationManager2d.hxx>
#endif
#ifndef _PrsMgr_KindOfPrs_HeaderFile
#include <PrsMgr_KindOfPrs.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class Graphic2d_GraphicObject;
class PrsMgr_PresentationManager2d;
class PrsMgr_PresentableObject;


//! A framework to manage 2D displays, graphic entities <br>
//! and their updates. Plotters, Highlights, Minima <br>
//! maxima, immediate display. <br>
class PrsMgr_Presentation2d : public PrsMgr_Presentation {

public:

  
  Standard_EXPORT     PrsMgr_KindOfPrs KindOfPresentation() const;
  //! Destructor. <br>
  Standard_EXPORT   virtual  void Destroy() ;
~PrsMgr_Presentation2d()
{
  Destroy();
}
  //! removes the whole content of the presentation. <br>
  Standard_EXPORT   virtual  void Clear() ;
  //! Specifies an Offset applied to the original color <br>
//!	    index of all primitives in the graphic object <me>. <br>
//!  Warning: To reset the real color of the primitives <br>
//!	    you have to call this method with <anOffset> = 0. <br>
  Standard_EXPORT     void SetOffset(const Standard_Integer anOffset) ;
  //! Returns the Offset applied to the original color <br>
//!	    index of all primitives in the graphic object <me>. <br>
  Standard_EXPORT     Standard_Integer Offset() const;
  
  Standard_EXPORT     Handle_Graphic2d_GraphicObject Presentation() const;

friend class PrsMgr_PresentationManager2d;
friend class PrsMgr_PresentableObject;


  DEFINE_STANDARD_RTTI(PrsMgr_Presentation2d)

protected:




private: 

  //! Creates a framework to manage displays and graphic <br>
//! entities with the 2D view aStructureManager. <br>
  Standard_EXPORT   PrsMgr_Presentation2d(const Handle(PrsMgr_PresentationManager2d)& aPresentationManager2d);
  
  Standard_EXPORT     void Display() ;
  
  Standard_EXPORT     void Erase() const;
  
  Standard_EXPORT     void Highlight() ;
  
  Standard_EXPORT     void Unhighlight() const;
  
  Standard_EXPORT     Standard_Boolean IsDisplayed() const;
  
  Standard_EXPORT     Standard_Boolean IsHighlighted() const;
  
  Standard_EXPORT     Standard_Integer DisplayPriority() const;
  
  Standard_EXPORT     void SetDisplayPriority(const Standard_Integer aNewPrior) ;
  //! Set Z layer ID for the presentation <br>
  Standard_EXPORT     void SetZLayer(const Standard_Integer theLayerId) ;
  //! Get Z layer ID for the presentation <br>
  Standard_EXPORT     Standard_Integer GetZLayer() const;
  
  Standard_EXPORT     void Highlight(const Standard_Integer anIndex) const;
  //! Allows the drawing on a plotter of the graphic object <br>
//! aPresentableObject with the display mode aMode. <br>
  Standard_EXPORT     void EnablePlot() const;
  //! Forbids the drawing on a plotter of the graphic object <br>
//! aPresentableObject with the display mode aMode. <br>
  Standard_EXPORT     void DisablePlot() const;
  //! Returns true if the graphic object aPresentableObject <br>
//! with the display mode aMode can be plotted. <br>
  Standard_EXPORT     Standard_Boolean IsPlottable() const;

Handle_Graphic2d_GraphicObject myStructure;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
