// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _GeometryTest_HeaderFile
#define _GeometryTest_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

class Draw_Interpretor;


//! this  package  provides  commands for  curves  and <br>
//!          surface. <br>
class GeometryTest  {
public:

  DEFINE_STANDARD_ALLOC

  //! defines all geometric commands. <br>
  Standard_EXPORT   static  void AllCommands(Draw_Interpretor& I) ;
  //! defines curve commands. <br>
  Standard_EXPORT   static  void CurveCommands(Draw_Interpretor& I) ;
  //! defines fair curve commands. <br>
  Standard_EXPORT   static  void FairCurveCommands(Draw_Interpretor& I) ;
  //! defines surface commands. <br>
  Standard_EXPORT   static  void SurfaceCommands(Draw_Interpretor& I) ;
  //! defines cosntrained curves commands. <br>
  Standard_EXPORT   static  void ConstraintCommands(Draw_Interpretor& I) ;
  //! defines commands to test the Geom2dAPI <br>
//!          - Intersection <br>
//!          - Extrema <br>
//!          - Projection <br>
//!          - Approximation, interpolation <br>
  Standard_EXPORT   static  void API2dCommands(Draw_Interpretor& I) ;
  //! defines commands to test the Geom2dAPI <br>
//!          - Intersection <br>
//!          - Extrema <br>
//!          - Projection <br>
//!          - Approximation, interpolation <br>
  Standard_EXPORT   static  void APICommands(Draw_Interpretor& I) ;
  //! defines commands to check local <br>
//!          continuity between curves or surfaces <br>
  Standard_EXPORT   static  void ContinuityCommands(Draw_Interpretor& I) ;
  //! defines     command  to    test  the    polyhedral <br>
//!          triangulations and the polygons from the Poly package. <br>
  Standard_EXPORT   static  void PolyCommands(Draw_Interpretor& I) ;
  //! defines commands to test projection of geometric objects <br>
  Standard_EXPORT   static  void TestProjCommands(Draw_Interpretor& I) ;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
