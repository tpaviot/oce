// Created on: 2007-07-04
// Created by: Pavel TELKOV
// Copyright (c) 2007-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <Message_Msg.hxx>

#ifndef _TCollection_HAsciiString_HeaderFile
#include <TCollection_HAsciiString.hxx>
#endif
#ifndef _TCollection_HExtendedString_HeaderFile
#include <TCollection_HExtendedString.hxx>
#endif

//=======================================================================
//function : Arg (TCollection_AsciiString)
//purpose  : 
//=======================================================================

inline Message_Msg& Message_Msg::Arg (const TCollection_AsciiString& theString)
{
  return Arg (theString.ToCString());
}

//=======================================================================
//function : Arg (TCollection_HAsciiString)
//purpose  : 
//=======================================================================

inline Message_Msg& Message_Msg::Arg (const Handle(TCollection_HAsciiString)& theString)
{
  return Arg (theString->String().ToCString());
}

//=======================================================================
//function : Arg (TCollection_HExtendedString)
//purpose  : 
//=======================================================================

inline Message_Msg& Message_Msg::Arg (const Handle(TCollection_HExtendedString)& theString)
{
  return Arg (theString->String());
}

//=======================================================================
//function : Original
//purpose  : 
//=======================================================================

inline const TCollection_ExtendedString& Message_Msg::Original() const
{
  return myOriginal;
}
 
//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

inline const TCollection_ExtendedString& Message_Msg::Value() const
{
  return myMessageBody;
}
 
//=======================================================================
//function : IsEdited
//purpose  : 
//=======================================================================

inline Standard_Boolean Message_Msg::IsEdited() const
{
  return !myOriginal.IsEqual( myMessageBody );
}
