// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Message_ListOfMsg_HeaderFile
#define _Message_ListOfMsg_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Handle_Message_ListNodeOfListOfMsg_HeaderFile
#include <Handle_Message_ListNodeOfListOfMsg.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_NoSuchObject;
class Message_ListIteratorOfListOfMsg;
class Message_Msg;
class Message_ListNodeOfListOfMsg;



class Message_ListOfMsg  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   Message_ListOfMsg();
  
  Standard_EXPORT     void Assign(const Message_ListOfMsg& Other) ;
    void operator=(const Message_ListOfMsg& Other) 
{
  Assign(Other);
}
  
  Standard_EXPORT     Standard_Integer Extent() const;
  
  Standard_EXPORT     void Clear() ;
~Message_ListOfMsg()
{
  Clear();
}
  
        Standard_Boolean IsEmpty() const;
  
  Standard_EXPORT     void Prepend(const Message_Msg& I) ;
  
  Standard_EXPORT     void Prepend(const Message_Msg& I,Message_ListIteratorOfListOfMsg& theIt) ;
  
  Standard_EXPORT     void Prepend(Message_ListOfMsg& Other) ;
  
  Standard_EXPORT     void Append(const Message_Msg& I) ;
  
  Standard_EXPORT     void Append(const Message_Msg& I,Message_ListIteratorOfListOfMsg& theIt) ;
  
  Standard_EXPORT     void Append(Message_ListOfMsg& Other) ;
  
  Standard_EXPORT     Message_Msg& First() const;
  
  Standard_EXPORT     Message_Msg& Last() const;
  
  Standard_EXPORT     void RemoveFirst() ;
  
  Standard_EXPORT     void Remove(Message_ListIteratorOfListOfMsg& It) ;
  
  Standard_EXPORT     void InsertBefore(const Message_Msg& I,Message_ListIteratorOfListOfMsg& It) ;
  
  Standard_EXPORT     void InsertBefore(Message_ListOfMsg& Other,Message_ListIteratorOfListOfMsg& It) ;
  
  Standard_EXPORT     void InsertAfter(const Message_Msg& I,Message_ListIteratorOfListOfMsg& It) ;
  
  Standard_EXPORT     void InsertAfter(Message_ListOfMsg& Other,Message_ListIteratorOfListOfMsg& It) ;


friend class Message_ListIteratorOfListOfMsg;



protected:





private:

  
  Standard_EXPORT   Message_ListOfMsg(const Message_ListOfMsg& Other);


Standard_Address myFirst;
Standard_Address myLast;


};

#define Item Message_Msg
#define Item_hxx <Message_Msg.hxx>
#define TCollection_ListNode Message_ListNodeOfListOfMsg
#define TCollection_ListNode_hxx <Message_ListNodeOfListOfMsg.hxx>
#define TCollection_ListIterator Message_ListIteratorOfListOfMsg
#define TCollection_ListIterator_hxx <Message_ListIteratorOfListOfMsg.hxx>
#define Handle_TCollection_ListNode Handle_Message_ListNodeOfListOfMsg
#define TCollection_ListNode_Type_() Message_ListNodeOfListOfMsg_Type_()
#define TCollection_List Message_ListOfMsg
#define TCollection_List_hxx <Message_ListOfMsg.hxx>

#include <TCollection_List.lxx>

#undef Item
#undef Item_hxx
#undef TCollection_ListNode
#undef TCollection_ListNode_hxx
#undef TCollection_ListIterator
#undef TCollection_ListIterator_hxx
#undef Handle_TCollection_ListNode
#undef TCollection_ListNode_Type_
#undef TCollection_List
#undef TCollection_List_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
