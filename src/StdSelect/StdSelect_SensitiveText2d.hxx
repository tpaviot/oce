// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StdSelect_SensitiveText2d_HeaderFile
#define _StdSelect_SensitiveText2d_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_StdSelect_SensitiveText2d_HeaderFile
#include <Handle_StdSelect_SensitiveText2d.hxx>
#endif

#ifndef _TCollection_ExtendedString_HeaderFile
#include <TCollection_ExtendedString.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Bnd_Box2d_HeaderFile
#include <Bnd_Box2d.hxx>
#endif
#ifndef _Select2D_SensitiveEntity_HeaderFile
#include <Select2D_SensitiveEntity.hxx>
#endif
#ifndef _Handle_SelectBasics_EntityOwner_HeaderFile
#include <Handle_SelectBasics_EntityOwner.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_Select2D_Projector_HeaderFile
#include <Handle_Select2D_Projector.hxx>
#endif
class SelectBasics_EntityOwner;
class TCollection_ExtendedString;
class Select2D_Projector;
class SelectBasics_ListOfBox2d;
class TColgp_Array1OfPnt2d;
class Bnd_Box2d;


//!  A framework to define a sensitive text entity for 2D views. <br>
class StdSelect_SensitiveText2d : public Select2D_SensitiveEntity {

public:

  //! Constructs a sensitive 2D text object defined by the <br>
//! owner anOwnerId, the string aString, the point <br>
//! defined by the parameters XPos and YPos, the angle <br>
//! Angle and the font index aFontIndex. <br>
  Standard_EXPORT   StdSelect_SensitiveText2d(const Handle(SelectBasics_EntityOwner)& anOwnerId,const TCollection_ExtendedString& aString,const Standard_Real XPox,const Standard_Real YPos,const Standard_Real Angle = 0,const Standard_Integer aFontIndex = -1);
  //! returns Standard_True <br>
        Standard_Boolean NeedsConversion() const;
  //! gets the size of the text in the 2d view <br>
  Standard_EXPORT   virtual  void Convert(const Handle(Select2D_Projector)& aTextProj) ;
  //! to be implemented specifically by each type of <br>
//!          sensitive  primitive . <br>
//! <br>
  Standard_EXPORT     void Areas(SelectBasics_ListOfBox2d& aresult) ;
  
  Standard_EXPORT     Standard_Boolean Matches(const Standard_Real X,const Standard_Real Y,const Standard_Real aTol,Standard_Real& DMin) ;
  
  Standard_EXPORT     Standard_Boolean Matches(const Standard_Real XMin,const Standard_Real YMin,const Standard_Real XMax,const Standard_Real YMax,const Standard_Real aTol) ;
  
  Standard_EXPORT     Standard_Boolean Matches(const TColgp_Array1OfPnt2d& Polyline,const Bnd_Box2d& aBox,const Standard_Real aTol) ;




  DEFINE_STANDARD_RTTI(StdSelect_SensitiveText2d)

protected:




private: 


TCollection_ExtendedString mytext;
Standard_Real myxpos;
Standard_Real myypos;
Standard_Real myangle;
Standard_Integer myfont;
Bnd_Box2d myinitbox;


};


#include <StdSelect_SensitiveText2d.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
