// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StdSelect_ViewerSelector2d_HeaderFile
#define _StdSelect_ViewerSelector2d_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_StdSelect_ViewerSelector2d_HeaderFile
#include <Handle_StdSelect_ViewerSelector2d.hxx>
#endif

#ifndef _Handle_Select2D_Projector_HeaderFile
#include <Handle_Select2D_Projector.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_Graphic2d_GraphicObject_HeaderFile
#include <Handle_Graphic2d_GraphicObject.hxx>
#endif
#ifndef _SelectMgr_ViewerSelector_HeaderFile
#include <SelectMgr_ViewerSelector.hxx>
#endif
#ifndef _Handle_SelectMgr_Selection_HeaderFile
#include <Handle_SelectMgr_Selection.hxx>
#endif
#ifndef _Handle_V2d_View_HeaderFile
#include <Handle_V2d_View.hxx>
#endif
class Select2D_Projector;
class Graphic2d_GraphicObject;
class SelectMgr_Selection;
class V2d_View;


//! A viewer selection framework. <br>
//! The objects defined in this framework can be passed to a selection manager. <br>
class StdSelect_ViewerSelector2d : public SelectMgr_ViewerSelector {

public:

  //! Constructs an empty viewer selection framework. <br>
  Standard_EXPORT   StdSelect_ViewerSelector2d();
  //! Constructs the viewer selection framework defined by <br>
//! the projector aProjector. <br>
  Standard_EXPORT   StdSelect_ViewerSelector2d(const Handle(Select2D_Projector)& aProjector);
  //! Sets a pixel tolerance for the selection. <br>
//!         will be converted for picking in a view. <br>
  Standard_EXPORT     void Set(const Standard_Integer aSensitivity) ;
  //! Sets the new projector aProjector. <br>
  Standard_EXPORT     void Set(const Handle(Select2D_Projector)& aProjector) ;
  
  Standard_EXPORT     void Convert(const Handle(SelectMgr_Selection)& aSelection) ;
  //! Returns the pixel coordinates of the mouse Xpix, Ypix <br>
//! in the view aView. <br>
  Standard_EXPORT     void Pick(const Standard_Integer XPix,const Standard_Integer YPix,const Handle(V2d_View)& aView) ;
  //! Returns the minimum and maximum pixel coordinates <br>
//! XPMin, YPMin and XPMax, YPMax defining a 2D area in the view aView. <br>
  Standard_EXPORT     void Pick(const Standard_Integer XPMin,const Standard_Integer YPMin,const Standard_Integer XPMax,const Standard_Integer YPMax,const Handle(V2d_View)& aView) ;
  //! Returns the projector which defines this framework. <br>
        Handle_Select2D_Projector Projector() const;
  //! Displays the active areas in the given view; <br>
  Standard_EXPORT     void DisplayAreas(const Handle(V2d_View)& aView) ;
  //! Clear the displayed sensitive areas from this framework.. <br>
  Standard_EXPORT     void ClearAreas() ;




  DEFINE_STANDARD_RTTI(StdSelect_ViewerSelector2d)

protected:




private: 


Handle_Select2D_Projector myprj;
Standard_Integer mypixtol;
Handle_Graphic2d_GraphicObject mygo;


};


#include <StdSelect_ViewerSelector2d.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
