// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepMesh_CircleTool_HeaderFile
#define _BRepMesh_CircleTool_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _BRepMesh_BaseAllocator_HeaderFile
#include <BRepMesh_BaseAllocator.hxx>
#endif
#ifndef _BRepMesh_CellFilter_HeaderFile
#include <BRepMesh_CellFilter.hxx>
#endif
#ifndef _BRepMesh_CircleInspector_HeaderFile
#include <BRepMesh_CircleInspector.hxx>
#endif
#ifndef _gp_XY_HeaderFile
#include <gp_XY.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _BRepMesh_ListOfInteger_HeaderFile
#include <BRepMesh_ListOfInteger.hxx>
#endif
class gp_XY;
class gp_Circ2d;


//! Create sort   and  destroy the  circles    used in <br>
//!          triangulation. <br>
class BRepMesh_CircleTool  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   BRepMesh_CircleTool(const BRepMesh_BaseAllocator& theAlloc);
  //! Constructs a CircleTool with the maximal dimension <br>
//!          of  the occuped  space and  an  evaluation of  the <br>
//!          number of circles. <br>
  Standard_EXPORT   BRepMesh_CircleTool(const Standard_Integer numberOfComponents,const BRepMesh_BaseAllocator& theAlloc);
  //! Constructs a CircleTool with the maximal dimension <br>
//!          of  the occuped  space and  an  evaluation of  the <br>
//!          number of circles. <br>
  Standard_EXPORT     void Initialize(const Standard_Integer numberOfComponents) ;
  //! Sets new size for cellfilter <br>
  Standard_EXPORT     void SetCellSize(const Standard_Real theSize) ;
  //! Sets new size for cellfilter <br>
  Standard_EXPORT     void SetCellSize(const Standard_Real theXSize,const Standard_Real theYSize) ;
  //! Sets min and max size for circle <br>
  Standard_EXPORT     void SetMinMaxSize(const gp_XY& theMin,const gp_XY& theMax) ;
  //! Adds and binds circle to the tool. <br>
  Standard_EXPORT     void Add(const gp_Circ2d& theCirc,const Standard_Integer theIndex) ;
  //! Computes adds and binds circle to the tool. <br>
  Standard_EXPORT     Standard_Boolean Add(const gp_XY& p1,const gp_XY& p2,const gp_XY& p3,const Standard_Integer theIndex) ;
  //! Adds implicit zero circle <br>
  Standard_EXPORT     void MocAdd(const Standard_Integer theIndex) ;
  //! Deletes a circle from the tool. <br>
  Standard_EXPORT     void Delete(const Standard_Integer theIndex) ;
  //! Select the circles which contains thePnt. <br>
  Standard_EXPORT     BRepMesh_ListOfInteger& Select(const gp_XY& thePnt) ;





protected:





private:



Standard_Real Tolerance;
BRepMesh_BaseAllocator Allocator;
BRepMesh_CellFilter CellFilter;
BRepMesh_CircleInspector Selector;
gp_XY FaceMax;
gp_XY FaceMin;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
