// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepMesh_VertexTool_HeaderFile
#define _BRepMesh_VertexTool_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _BRepMesh_BaseAllocator_HeaderFile
#include <BRepMesh_BaseAllocator.hxx>
#endif
#ifndef _BRepMesh_VertexCellFilter_HeaderFile
#include <BRepMesh_VertexCellFilter.hxx>
#endif
#ifndef _BRepMesh_VertexInspector_HeaderFile
#include <BRepMesh_VertexInspector.hxx>
#endif
#ifndef _BRepMesh_DataMapOfIntegerListOfInteger_HeaderFile
#include <BRepMesh_DataMapOfIntegerListOfInteger.hxx>
#endif
#ifndef _TColStd_Array1OfReal_HeaderFile
#include <TColStd_Array1OfReal.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _BRepMesh_ListOfInteger_HeaderFile
#include <BRepMesh_ListOfInteger.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
class BRepMesh_Vertex;
class gp_XY;


//! Describes the data structure necessary for the <br>
//!          mesh algorithm and contains the vertices in UV space. <br>
class BRepMesh_VertexTool  {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   BRepMesh_VertexTool(const BRepMesh_BaseAllocator& theAlloc);
  //! Constructs a VertexTool with an  evaluation of the <br>
//!          number of vertices. <br>
  Standard_EXPORT   BRepMesh_VertexTool(const Standard_Integer nbComp,const BRepMesh_BaseAllocator& theAlloc);
  //! Sets new size for cellfilter. <br>
  Standard_EXPORT     void SetCellSize(const Standard_Real theSize) ;
  //! Sets new size for cellfilter. <br>
  Standard_EXPORT     void SetCellSize(const Standard_Real theXSize,const Standard_Real theYSize) ;
  //! Sets new size for cellfilter. <br>
  Standard_EXPORT     void SetTolerance(const Standard_Real theTol) ;
  //! Sets new size for cellfilter. <br>
  Standard_EXPORT     void SetTolerance(const Standard_Real theTolX,const Standard_Real theTolY) ;
  //! Adds a vertex to the tool. <br>
  Standard_EXPORT     Standard_Integer Add(const BRepMesh_Vertex& theVertex,const BRepMesh_ListOfInteger& theParams) ;
  //! Adds a vertex to the tool. <br>
  Standard_EXPORT     Standard_Integer Add(const BRepMesh_Vertex& theVertex) ;
  //! Deletes a vertex from the tool. <br>
  Standard_EXPORT     void Delete(const Standard_Integer theIndex) ;
  //! Returns data assigned to theIndex. <br>
  Standard_EXPORT     BRepMesh_ListOfInteger& FindFromIndex(const Standard_Integer theIndex) const;
    BRepMesh_ListOfInteger& operator()(const Standard_Integer theIndex) const
{
  return FindFromIndex(theIndex);
}
  //! Selects the vertex by theIndex. <br>
  Standard_EXPORT    const BRepMesh_Vertex& FindKey(const Standard_Integer theIndex) ;
  //! Returns an index of theVertex. <br>
  Standard_EXPORT     Standard_Integer FindIndex(const BRepMesh_Vertex& theVertex) ;
  //! Returns a number of vertices. <br>
  Standard_EXPORT     Standard_Integer Extent() const;
  //! Returns True when the map contains no keys. <br>
  Standard_EXPORT     Standard_Boolean IsEmpty() const;
  //! Substitutes vertex with Index on <br>
//!          theVertex with attributes theData. <br>
  Standard_EXPORT     void Substitute(const Standard_Integer Index,const BRepMesh_Vertex& theVertex,const BRepMesh_ListOfInteger& theData) ;
  //! Remove last node from the structure. <br>
  Standard_EXPORT     void RemoveLast() ;
  //! Returns the list with indexes of <br>
//!          vertices that have Movability attribute <br>
//!          equal to BRepMesh_Deleted and can be <br>
//!          replaced with another node. <br>
  Standard_EXPORT    const BRepMesh_ListOfInteger& GetListOfDelNodes() const;
  //! Prints statistics. <br>
  Standard_EXPORT     void Statistics(Standard_OStream& S) const;





protected:





private:

  
  Standard_EXPORT     void ExpandPoint(const gp_XY& thePnt,gp_XY& theMinPnt,gp_XY& theMaxPnt) ;


BRepMesh_BaseAllocator myAllocator;
BRepMesh_VertexCellFilter myCellFilter;
BRepMesh_VertexInspector mySelector;
BRepMesh_DataMapOfIntegerListOfInteger myLinksMap;
TColStd_Array1OfReal myTol;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
