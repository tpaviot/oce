// Copyright (c) 1998-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

// =======================================================================
// function : Mode
// purpose  :
// =======================================================================
inline Standard_Integer SelectMgr_Selection::Mode() const
{
  return myMode;
}

// =======================================================================
// function : Init
// purpose  :
// =======================================================================
inline void SelectMgr_Selection::Init()
{
  myEntityIter.Init (myEntities);
}

// =======================================================================
// function : More
// purpose  :
// =======================================================================
inline Standard_Boolean SelectMgr_Selection::More() const
{
  return myEntityIter.More();
}

// =======================================================================
// function : Next
// purpose  :
// =======================================================================
inline void SelectMgr_Selection::Next()
{
  myEntityIter.Next();
}

// =======================================================================
// function : Sensitive
// purpose  :
// =======================================================================
inline const Handle(SelectMgr_SensitiveEntity)& SelectMgr_Selection::Sensitive() const
{
  return myEntityIter.Value();
}

// =======================================================================
// function : UpdateStatus
// purpose  :
// =======================================================================
inline void SelectMgr_Selection::UpdateStatus(const SelectMgr_TypeOfUpdate theStatus)
{
  myUpdateStatus = theStatus;
}

// =======================================================================
// function : UpdateStatus
// purpose  :
// =======================================================================
inline SelectMgr_TypeOfUpdate SelectMgr_Selection::UpdateStatus() const
{
  return myUpdateStatus;
}

// =======================================================================
// function : UpdateBVHStatus
// purpose  :
// =======================================================================
inline void SelectMgr_Selection::UpdateBVHStatus (const SelectMgr_TypeOfBVHUpdate theStatus)
{
  myBVHUpdateStatus = theStatus;
}

// =======================================================================
// function : BVHUpdateStatus
// purpose  :
// =======================================================================
inline SelectMgr_TypeOfBVHUpdate SelectMgr_Selection::BVHUpdateStatus() const
{
  return myBVHUpdateStatus;
}
