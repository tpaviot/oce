// Created on: 1993-06-03
// Created by: Laurent BUCHARD
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.



#include ThePolygon_hxx


//=================================================================
inline const TheBoundingBox& IntCurveSurface_PolygonTool::Bounding
  (const ThePolygon& thePolygon)
{
  return thePolygon.Bounding();
}
//=================================================================
inline Standard_Real IntCurveSurface_PolygonTool::DeflectionOverEstimation
  (const ThePolygon& thePolygon)
{
  return thePolygon.DeflectionOverEstimation();
}
//=================================================================
inline Standard_Boolean IntCurveSurface_PolygonTool::Closed 
  (const ThePolygon& thePolygon)
{
  return thePolygon.Closed();
}
//=================================================================
inline Standard_Integer IntCurveSurface_PolygonTool::NbSegments
  (const ThePolygon& thePolygon)
{
  return thePolygon.NbSegments();
}
//=================================================================
inline const ThePoint& IntCurveSurface_PolygonTool::BeginOfSeg
  (const ThePolygon& thePolygon,
   const Standard_Integer Index)
{
  return thePolygon.BeginOfSeg(Index);
}
//=================================================================
inline const ThePoint& IntCurveSurface_PolygonTool::EndOfSeg
  (const ThePolygon& thePolygon,
   const Standard_Integer Index)
{
  return thePolygon.EndOfSeg(Index);
}
//=================================================================


