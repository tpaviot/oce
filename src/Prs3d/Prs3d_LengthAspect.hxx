// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Prs3d_LengthAspect_HeaderFile
#define _Prs3d_LengthAspect_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Prs3d_LengthAspect_HeaderFile
#include <Handle_Prs3d_LengthAspect.hxx>
#endif

#ifndef _Handle_Prs3d_LineAspect_HeaderFile
#include <Handle_Prs3d_LineAspect.hxx>
#endif
#ifndef _Handle_Prs3d_ArrowAspect_HeaderFile
#include <Handle_Prs3d_ArrowAspect.hxx>
#endif
#ifndef _Handle_Prs3d_TextAspect_HeaderFile
#include <Handle_Prs3d_TextAspect.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Prs3d_CompositeAspect_HeaderFile
#include <Prs3d_CompositeAspect.hxx>
#endif
class Prs3d_LineAspect;
class Prs3d_ArrowAspect;
class Prs3d_TextAspect;


//! defines the attributes when drawing a Length Presentation. <br>
class Prs3d_LengthAspect : public Prs3d_CompositeAspect {

public:

  //! Constructs an empty framework to define the display of lengths. <br>
  Standard_EXPORT   Prs3d_LengthAspect();
  //! Returns the settings for the display of lines used in presentation of lengths. <br>
  Standard_EXPORT     Handle_Prs3d_LineAspect LineAspect() const;
  //! Sets the display attributes of lines used in presentation of lengths. <br>
  Standard_EXPORT     void SetLineAspect(const Handle(Prs3d_LineAspect)& anAspect) ;
  //! Returns the settings for displaying a right-pointing arrow. <br>
  Standard_EXPORT     Handle_Prs3d_ArrowAspect Arrow1Aspect() const;
  //!   Sets the display attributes of the first arrow used in presentation of lengths. <br>
  Standard_EXPORT     void SetArrow1Aspect(const Handle(Prs3d_ArrowAspect)& anAspect) ;
  //! Returns the settings for displaying a left-pointing arrow. <br>
  Standard_EXPORT     Handle_Prs3d_ArrowAspect Arrow2Aspect() const;
  //! Sets the display attributes of the second arrow used in presentation of lengths. <br>
  Standard_EXPORT     void SetArrow2Aspect(const Handle(Prs3d_ArrowAspect)& anAspect) ;
  //! Returns the settings for the display of text used in presentation of lengths. <br>
  Standard_EXPORT     Handle_Prs3d_TextAspect TextAspect() const;
  //! Sets the display attributes of text used in presentation of lengths. <br>
  Standard_EXPORT     void SetTextAspect(const Handle(Prs3d_TextAspect)& anAspect) ;
  //! Sets the DrawFirstArrow attributes to active. <br>
  Standard_EXPORT     void SetDrawFirstArrow(const Standard_Boolean draw) ;
  //! Returns true if the first arrow can be drawn. <br>
  Standard_EXPORT     Standard_Boolean DrawFirstArrow() const;
  //! Sets the DrawSecondArrow attributes to active. <br>
  Standard_EXPORT     void SetDrawSecondArrow(const Standard_Boolean draw) ;
  //! Returns true if the second arrow can be drawn. <br>
  Standard_EXPORT     Standard_Boolean DrawSecondArrow() const;




  DEFINE_STANDARD_RTTI(Prs3d_LengthAspect)

protected:




private: 


Handle_Prs3d_LineAspect myLineAspect;
Handle_Prs3d_ArrowAspect myArrow1Aspect;
Handle_Prs3d_ArrowAspect myArrow2Aspect;
Handle_Prs3d_TextAspect myTextAspect;
Standard_Boolean myDrawFirstArrow;
Standard_Boolean myDrawSecondArrow;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
