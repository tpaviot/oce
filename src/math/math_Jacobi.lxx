// Copyright (c) 1997-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

// math_Jacobi.lxx

#include <StdFail_NotDone.hxx>
#include <math_Vector.hxx>
#include <math_Matrix.hxx>

inline Standard_Boolean math_Jacobi::IsDone() const { return Done; }

inline Standard_OStream& operator<<(Standard_OStream& o,
				    const math_Jacobi& J) 
{
  J.Dump(o);
  return o;
}

inline const math_Vector& math_Jacobi::Values () const{
  StdFail_NotDone_Raise_if(!Done, " ");
  return EigenValues;
}

inline  Standard_Real math_Jacobi::Value (const Standard_Integer Num) const{
  StdFail_NotDone_Raise_if(!Done, " ");
  return EigenValues(Num);
}
    

inline const math_Matrix& math_Jacobi::Vectors() const{
  StdFail_NotDone_Raise_if(!Done, " ");
  return EigenVectors;
}


inline  void  math_Jacobi::Vector (const Standard_Integer Num, math_Vector& V) const{
  StdFail_NotDone_Raise_if(!Done, " ");
  V = EigenVectors.Col(Num);
}


