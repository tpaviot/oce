// Created on: 2000-12-18
// Created by: Galina KULIKOVA
// Copyright (c) 2000-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


//=======================================================================
//function : SetMaxTolerance
//purpose  : 
//=======================================================================

inline  void BRepBuilderAPI_Sewing::SetMaxTolerance(const Standard_Real theMaxToler) 
{
  myMaxTolerance = theMaxToler;
}

//=======================================================================
//function : MaxTolerance
//purpose  : 
//=======================================================================

inline  Standard_Real BRepBuilderAPI_Sewing::MaxTolerance() const
{
  return  myMaxTolerance;
}

//=======================================================================
//function : Tolerance
//purpose  : 
//=======================================================================

inline  Standard_Real BRepBuilderAPI_Sewing::Tolerance() const
{
  return myTolerance;
}

 
//=======================================================================
//function : SetTolerance
//purpose  : 
//=======================================================================

inline  void BRepBuilderAPI_Sewing::SetTolerance(const Standard_Real theToler) 
{
  myTolerance = theToler;
} 

//=======================================================================
//function : SetMinTolerance
//purpose  : 
//=======================================================================

inline  void BRepBuilderAPI_Sewing::SetMinTolerance(const Standard_Real theMinToler) 
{
  myMinTolerance = theMinToler;
}

//=======================================================================
//function : MinTolerance
//purpose  : 
//=======================================================================

inline  Standard_Real BRepBuilderAPI_Sewing::MinTolerance() const 
{
  return  myMinTolerance;
}
 
//=======================================================================
//function : SetFaceMode
//purpose  : 
//=======================================================================

inline  void BRepBuilderAPI_Sewing::SetFaceMode(const Standard_Boolean theFaceMode) 
{
  myFaceMode = theFaceMode;
}
 
//=======================================================================
//function : FaceMode
//purpose  : 
//=======================================================================

inline  Standard_Boolean BRepBuilderAPI_Sewing::FaceMode() const
{
  return myFaceMode;
}
 
//=======================================================================
//function : SetFloatingEdgesMode
//purpose  : 
//=======================================================================

inline  void BRepBuilderAPI_Sewing::SetFloatingEdgesMode(const Standard_Boolean theFloatingEdgesMode) 
{
  myFloatingEdgesMode = theFloatingEdgesMode;
}
 
//=======================================================================
//function : FloatingEdgesMode
//purpose  : 
//=======================================================================

inline  Standard_Boolean BRepBuilderAPI_Sewing::FloatingEdgesMode() const
{
  return myFloatingEdgesMode;
}
 
/*
//=======================================================================
//function : SetCuttingFloatingEdgesMode
//purpose  : 
//=======================================================================

inline  void BRepBuilderAPI_Sewing::SetCuttingFloatingEdgesMode(const Standard_Boolean theCuttingFloatingEdgesMode) 
{
  myCuttingFloatingEdgesMode = theCuttingFloatingEdgesMode;
}
 
//=======================================================================
//function : CuttingFloatingEdgesMode
//purpose  : 
//=======================================================================

inline  Standard_Boolean BRepBuilderAPI_Sewing::CuttingFloatingEdgesMode() const
{
  return myCuttingFloatingEdgesMode;
}
*/

//=======================================================================
//function : SameParameterMode
//purpose  : 
//=======================================================================

inline  Standard_Boolean BRepBuilderAPI_Sewing::SameParameterMode() const
{
  return mySameParameterMode;
}
 
//=======================================================================
//function : SetSameParameterMode
//purpose  : 
//=======================================================================

inline  void BRepBuilderAPI_Sewing::SetSameParameterMode(const Standard_Boolean SameParameterMode) 
{
  mySameParameterMode = SameParameterMode;
}

//=======================================================================
//function : SetLocalTolerancesMode
//purpose  : 
//=======================================================================

inline  void BRepBuilderAPI_Sewing::SetLocalTolerancesMode(const Standard_Boolean theLocalTolerancesMode) 
{
  myLocalToleranceMode = theLocalTolerancesMode;
}
 
//=======================================================================
//function : LocalTolerancesMode
//purpose  : 
//=======================================================================

inline  Standard_Boolean BRepBuilderAPI_Sewing::LocalTolerancesMode() const
{
  return myLocalToleranceMode; 
}

//=======================================================================
//function : SetNonManifoldMode
//purpose  : 
//=======================================================================

inline void BRepBuilderAPI_Sewing::SetNonManifoldMode(const Standard_Boolean theNonManifoldMode)
{
  myNonmanifold = theNonManifoldMode;
}

//=======================================================================
//function : NonManifoldMode
//purpose  : 
//=======================================================================

inline  Standard_Boolean BRepBuilderAPI_Sewing::NonManifoldMode() const
{
  return myNonmanifold;
}
