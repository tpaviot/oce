// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESSelect_SignColor_HeaderFile
#define _IGESSelect_SignColor_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IGESSelect_SignColor_HeaderFile
#include <Handle_IGESSelect_SignColor.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _IFSelect_Signature_HeaderFile
#include <IFSelect_Signature.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
#ifndef _Handle_Interface_InterfaceModel_HeaderFile
#include <Handle_Interface_InterfaceModel.hxx>
#endif
class Standard_Transient;
class Interface_InterfaceModel;


//! Gives Color attached to an entity <br>
//!           Several forms are possible, according to <mode> <br>
//!           1 : number : "Dnn" for entity, "Snn" for standard, "(none)" for 0 <br>
//!           2 : name : Of standard color, or of the color entity, or "(none)" <br>
//!               (if the color entity has no name, its label is taken) <br>
//!           3 : RGB values, form R:nn,G:nn,B:nn <br>
//!           4 : RED value   : an integer <br>
//!           5 : GREEN value : an integer <br>
//!           6 : BLUE value  : an integer <br>
//!           Other computable values can be added if needed : <br>
//!           CMY values, Percentages for Hue, Lightness, Saturation <br>
class IGESSelect_SignColor : public IFSelect_Signature {

public:

  //! Creates a SignColor <br>
//!           mode : see above for the meaning <br>
//!           modes 4,5,6 give a numeric integer value <br>
//!           Name is initialised according to the mode <br>
  Standard_EXPORT   IGESSelect_SignColor(const Standard_Integer mode);
  //! Returns the value (see above) <br>
  Standard_EXPORT     Standard_CString Value(const Handle(Standard_Transient)& ent,const Handle(Interface_InterfaceModel)& model) const;




  DEFINE_STANDARD_RTTI(IGESSelect_SignColor)

protected:




private: 


Standard_Integer themode;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
