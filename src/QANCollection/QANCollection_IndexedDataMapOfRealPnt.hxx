// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _QANCollection_IndexedDataMapOfRealPnt_HeaderFile
#define _QANCollection_IndexedDataMapOfRealPnt_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _TCollection_BasicMap_HeaderFile
#include <TCollection_BasicMap.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Handle_QANCollection_IndexedDataMapNodeOfIndexedDataMapOfRealPnt_HeaderFile
#include <Handle_QANCollection_IndexedDataMapNodeOfIndexedDataMapOfRealPnt.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
class Standard_DomainError;
class Standard_OutOfRange;
class Standard_NoSuchObject;
class gp_Pnt;
class TColStd_MapRealHasher;
class QANCollection_IndexedDataMapNodeOfIndexedDataMapOfRealPnt;



class QANCollection_IndexedDataMapOfRealPnt  : public TCollection_BasicMap {
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT   QANCollection_IndexedDataMapOfRealPnt(const Standard_Integer NbBuckets = 1);
  
  Standard_EXPORT     QANCollection_IndexedDataMapOfRealPnt& Assign(const QANCollection_IndexedDataMapOfRealPnt& Other) ;
    QANCollection_IndexedDataMapOfRealPnt& operator =(const QANCollection_IndexedDataMapOfRealPnt& Other) 
{
  return Assign(Other);
}
  
  Standard_EXPORT     void ReSize(const Standard_Integer NbBuckets) ;
  
  Standard_EXPORT     void Clear() ;
~QANCollection_IndexedDataMapOfRealPnt()
{
  Clear();
}
  
  Standard_EXPORT     Standard_Integer Add(const Standard_Real& K,const gp_Pnt& I) ;
  
  Standard_EXPORT     void Substitute(const Standard_Integer I,const Standard_Real& K,const gp_Pnt& T) ;
  
  Standard_EXPORT     void RemoveLast() ;
  
  Standard_EXPORT     Standard_Boolean Contains(const Standard_Real& K) const;
  
  Standard_EXPORT    const Standard_Real& FindKey(const Standard_Integer I) const;
  
  Standard_EXPORT    const gp_Pnt& FindFromIndex(const Standard_Integer I) const;
   const gp_Pnt& operator ()(const Standard_Integer I) const
{
  return FindFromIndex(I);
}
  
  Standard_EXPORT     gp_Pnt& ChangeFromIndex(const Standard_Integer I) ;
    gp_Pnt& operator ()(const Standard_Integer I) 
{
  return ChangeFromIndex(I);
}
  
  Standard_EXPORT     Standard_Integer FindIndex(const Standard_Real& K) const;
  
  Standard_EXPORT    const gp_Pnt& FindFromKey(const Standard_Real& K) const;
  
  Standard_EXPORT     gp_Pnt& ChangeFromKey(const Standard_Real& K) ;
  
  Standard_EXPORT     Standard_Address FindFromKey1(const Standard_Real& K) const;
  
  Standard_EXPORT     Standard_Address ChangeFromKey1(const Standard_Real& K) ;





protected:





private:

  
  Standard_EXPORT   QANCollection_IndexedDataMapOfRealPnt(const QANCollection_IndexedDataMapOfRealPnt& Other);




};





// other Inline functions and methods (like "C++: function call" methods)


#endif
