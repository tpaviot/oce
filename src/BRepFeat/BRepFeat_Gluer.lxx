// Created on: 1996-03-08
// Created by: Jacques GOUSSARD
// Copyright (c) 1996-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.



//=======================================================================
//function : BRepFeat_Gluer
//purpose  : 
//=======================================================================

inline BRepFeat_Gluer::BRepFeat_Gluer ()
{}


//=======================================================================
//function : BRepFeat_Gluer
//purpose  : 
//=======================================================================

inline BRepFeat_Gluer::BRepFeat_Gluer (const TopoDS_Shape& Snew,
				       const TopoDS_Shape& Sbase) :
   myGluer(Sbase,Snew) // Attention a l`inversion
{}


//=======================================================================
//function : Init
//purpose  : 
//=======================================================================

inline void BRepFeat_Gluer::Init(const TopoDS_Shape& Snew,
				 const TopoDS_Shape& Sbase)
{
   myGluer.Init(Sbase,Snew);
}


//=======================================================================
//function : Bind
//purpose  : 
//=======================================================================

inline void BRepFeat_Gluer::Bind(const TopoDS_Face& Fnew,
				 const TopoDS_Face& Fbase)
{
  myGluer.Bind(Fnew,Fbase);
}


//=======================================================================
//function : Bind
//purpose  : 
//=======================================================================

inline void BRepFeat_Gluer::Bind(const TopoDS_Edge& Enew,
				 const TopoDS_Edge& Ebase)
{
  myGluer.Bind(Enew,Ebase);
}


//=======================================================================
//function : OpeType
//purpose  : 
//=======================================================================

inline LocOpe_Operation BRepFeat_Gluer::OpeType() const
{
  return myGluer.OpeType();
}


//=======================================================================
//function : BasisShape
//purpose  : 
//=======================================================================

inline const TopoDS_Shape& BRepFeat_Gluer::BasisShape() const
{
  return myGluer.BasisShape();
}


//=======================================================================
//function : GluedShape
//purpose  : 
//=======================================================================

inline const TopoDS_Shape& BRepFeat_Gluer::GluedShape() const
{
  return myGluer.GluedShape();
}


