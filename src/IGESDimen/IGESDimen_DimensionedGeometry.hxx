// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESDimen_DimensionedGeometry_HeaderFile
#define _IGESDimen_DimensionedGeometry_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IGESDimen_DimensionedGeometry_HeaderFile
#include <Handle_IGESDimen_DimensionedGeometry.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_IGESData_IGESEntity_HeaderFile
#include <Handle_IGESData_IGESEntity.hxx>
#endif
#ifndef _Handle_IGESData_HArray1OfIGESEntity_HeaderFile
#include <Handle_IGESData_HArray1OfIGESEntity.hxx>
#endif
#ifndef _IGESData_IGESEntity_HeaderFile
#include <IGESData_IGESEntity.hxx>
#endif
class IGESData_IGESEntity;
class IGESData_HArray1OfIGESEntity;
class Standard_OutOfRange;


//! Defines IGES Dimensioned Geometry, Type <402> Form <13>, <br>
//!          in package IGESDimen <br>
//!          This entity has been replaced by the new form of  Dimensioned <br>
//!          Geometry Associativity Entity (Type 402, Form 21) and should no <br>
//!          longer be used by preprocessors. <br>
class IGESDimen_DimensionedGeometry : public IGESData_IGESEntity {

public:

  
  Standard_EXPORT   IGESDimen_DimensionedGeometry();
  
  Standard_EXPORT     void Init(const Standard_Integer nbDims,const Handle(IGESData_IGESEntity)& aDimension,const Handle(IGESData_HArray1OfIGESEntity)& entities) ;
  //! returns the number of dimensions <br>
  Standard_EXPORT     Standard_Integer NbDimensions() const;
  //! returns the number of associated geometry entities <br>
  Standard_EXPORT     Standard_Integer NbGeometryEntities() const;
  //! returns the Dimension entity <br>
  Standard_EXPORT     Handle_IGESData_IGESEntity DimensionEntity() const;
  //! returns the num'th Geometry entity <br>
//! raises exception if Index <= 0 or Index > NbGeometryEntities() <br>
  Standard_EXPORT     Handle_IGESData_IGESEntity GeometryEntity(const Standard_Integer Index) const;




  DEFINE_STANDARD_RTTI(IGESDimen_DimensionedGeometry)

protected:




private: 


Standard_Integer theNbDimensions;
Handle_IGESData_IGESEntity theDimension;
Handle_IGESData_HArray1OfIGESEntity theGeometryEntities;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
