// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESDimen_CurveDimension_HeaderFile
#define _IGESDimen_CurveDimension_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IGESDimen_CurveDimension_HeaderFile
#include <Handle_IGESDimen_CurveDimension.hxx>
#endif

#ifndef _Handle_IGESDimen_GeneralNote_HeaderFile
#include <Handle_IGESDimen_GeneralNote.hxx>
#endif
#ifndef _Handle_IGESData_IGESEntity_HeaderFile
#include <Handle_IGESData_IGESEntity.hxx>
#endif
#ifndef _Handle_IGESDimen_LeaderArrow_HeaderFile
#include <Handle_IGESDimen_LeaderArrow.hxx>
#endif
#ifndef _Handle_IGESDimen_WitnessLine_HeaderFile
#include <Handle_IGESDimen_WitnessLine.hxx>
#endif
#ifndef _IGESData_IGESEntity_HeaderFile
#include <IGESData_IGESEntity.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class IGESDimen_GeneralNote;
class IGESData_IGESEntity;
class IGESDimen_LeaderArrow;
class IGESDimen_WitnessLine;


//! defines CurveDimension, Type <204> Form <0> <br>
//!          in package IGESDimen <br>
//!          Used to dimension curves <br>
//!          Consists of one tail segment of nonzero length <br>
//!          beginning with an arrowhead and which serves to define <br>
//!          the orientation <br>
class IGESDimen_CurveDimension : public IGESData_IGESEntity {

public:

  
  Standard_EXPORT   IGESDimen_CurveDimension();
  //! This method is used to set the fields of the class <br>
//!           CurveDimension <br>
//!       - aNote         : General Note Entity <br>
//!       - aCurve        : First Curve Entity <br>
//!       - anotherCurve  : Second Curve Entity or a Null Handle <br>
//!       - aLeader       : First Leader Entity <br>
//!       - anotherLeader : Second Leader Entity <br>
//!       - aLine         : First Witness Line Entity or a Null <br>
//!                         Handle <br>
//!       - anotherLine   : Second Witness Line Entity or a Null <br>
//!                         Handle <br>
  Standard_EXPORT     void Init(const Handle(IGESDimen_GeneralNote)& aNote,const Handle(IGESData_IGESEntity)& aCurve,const Handle(IGESData_IGESEntity)& anotherCurve,const Handle(IGESDimen_LeaderArrow)& aLeader,const Handle(IGESDimen_LeaderArrow)& anotherLeader,const Handle(IGESDimen_WitnessLine)& aLine,const Handle(IGESDimen_WitnessLine)& anotherLine) ;
  //! returns the General Note Entity <br>
  Standard_EXPORT     Handle_IGESDimen_GeneralNote Note() const;
  //! returns the First curve Entity <br>
  Standard_EXPORT     Handle_IGESData_IGESEntity FirstCurve() const;
  //! returns False if theSecondCurve is a Null Handle. <br>
  Standard_EXPORT     Standard_Boolean HasSecondCurve() const;
  //! returns the Second curve Entity or a Null Handle. <br>
  Standard_EXPORT     Handle_IGESData_IGESEntity SecondCurve() const;
  //! returns the First Leader Entity <br>
  Standard_EXPORT     Handle_IGESDimen_LeaderArrow FirstLeader() const;
  //! returns the Second Leader Entity <br>
  Standard_EXPORT     Handle_IGESDimen_LeaderArrow SecondLeader() const;
  //! returns False if theFirstWitnessLine is a Null Handle. <br>
  Standard_EXPORT     Standard_Boolean HasFirstWitnessLine() const;
  //! returns the First Witness Line Entity or a Null Handle. <br>
  Standard_EXPORT     Handle_IGESDimen_WitnessLine FirstWitnessLine() const;
  //! returns False if theSecondWitnessLine is a Null Handle. <br>
  Standard_EXPORT     Standard_Boolean HasSecondWitnessLine() const;
  //! returns the Second Witness Line Entity or a Null Handle. <br>
  Standard_EXPORT     Handle_IGESDimen_WitnessLine SecondWitnessLine() const;




  DEFINE_STANDARD_RTTI(IGESDimen_CurveDimension)

protected:




private: 


Handle_IGESDimen_GeneralNote theNote;
Handle_IGESData_IGESEntity theFirstCurve;
Handle_IGESData_IGESEntity theSecondCurve;
Handle_IGESDimen_LeaderArrow theFirstLeader;
Handle_IGESDimen_LeaderArrow theSecondLeader;
Handle_IGESDimen_WitnessLine theFirstWitnessLine;
Handle_IGESDimen_WitnessLine theSecondWitnessLine;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
