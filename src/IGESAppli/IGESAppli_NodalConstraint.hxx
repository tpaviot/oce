// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESAppli_NodalConstraint_HeaderFile
#define _IGESAppli_NodalConstraint_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IGESAppli_NodalConstraint_HeaderFile
#include <Handle_IGESAppli_NodalConstraint.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_IGESAppli_Node_HeaderFile
#include <Handle_IGESAppli_Node.hxx>
#endif
#ifndef _Handle_IGESDefs_HArray1OfTabularData_HeaderFile
#include <Handle_IGESDefs_HArray1OfTabularData.hxx>
#endif
#ifndef _IGESData_IGESEntity_HeaderFile
#include <IGESData_IGESEntity.hxx>
#endif
#ifndef _Handle_IGESDefs_TabularData_HeaderFile
#include <Handle_IGESDefs_TabularData.hxx>
#endif
class IGESAppli_Node;
class IGESDefs_HArray1OfTabularData;
class Standard_OutOfRange;
class IGESDefs_TabularData;


//! defines NodalConstraint, Type <418> Form <0> <br>
//!          in package IGESAppli <br>
//!          Relates loads and/or constraints to specific nodes in <br>
//!          the Finite Element Model by creating a relation between <br>
//!          Node entities and Tabular Data Property that contains <br>
//!          the load or constraint data <br>
class IGESAppli_NodalConstraint : public IGESData_IGESEntity {

public:

  
  Standard_EXPORT   IGESAppli_NodalConstraint();
  //! This method is used to set the fields of the class <br>
//!           NodalConstraint <br>
//!       - aType      : Loads / Constraints <br>
//!       - aNode      : the Node <br>
//!       - allTabData : Tabular Data Property carrying the load <br>
//!                      or constraint vector <br>
  Standard_EXPORT     void Init(const Standard_Integer aType,const Handle(IGESAppli_Node)& aNode,const Handle(IGESDefs_HArray1OfTabularData)& allTabData) ;
  //! returns total number of cases <br>
  Standard_EXPORT     Standard_Integer NbCases() const;
  //! returns whether Loads (1) or Constraints (2) <br>
  Standard_EXPORT     Standard_Integer Type() const;
  //! returns the Node <br>
  Standard_EXPORT     Handle_IGESAppli_Node NodeEntity() const;
  //! returns Tabular Data Property carrying load or constraint vector <br>
//! raises exception if Index <= 0 or Index > NbCases <br>
  Standard_EXPORT     Handle_IGESDefs_TabularData TabularData(const Standard_Integer Index) const;




  DEFINE_STANDARD_RTTI(IGESAppli_NodalConstraint)

protected:




private: 


Standard_Integer theType;
Handle_IGESAppli_Node theNode;
Handle_IGESDefs_HArray1OfTabularData theTabularDataProps;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
