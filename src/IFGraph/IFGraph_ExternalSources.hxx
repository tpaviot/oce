// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IFGraph_ExternalSources_HeaderFile
#define _IFGraph_ExternalSources_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Interface_Graph_HeaderFile
#include <Interface_Graph.hxx>
#endif
#ifndef _Interface_GraphContent_HeaderFile
#include <Interface_GraphContent.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Interface_Graph;
class Standard_Transient;
class Interface_EntityIterator;


//! this class gives entities which are Source of entities of <br>
//!           a sub-part, but are not contained by this sub-part <br>
class IFGraph_ExternalSources  : public Interface_GraphContent {
public:

  DEFINE_STANDARD_ALLOC

  //! creates empty ExternalSources, ready to work <br>
  Standard_EXPORT   IFGraph_ExternalSources(const Interface_Graph& agraph);
  //! adds an entity and its shared ones to the list <br>
  Standard_EXPORT     void GetFromEntity(const Handle(Standard_Transient)& ent) ;
  //! adds a list of entities (as an iterator) with shared ones <br>
  Standard_EXPORT     void GetFromIter(const Interface_EntityIterator& iter) ;
  //! Allows to restart on a new data set <br>
  Standard_EXPORT     void ResetData() ;
  //! Evaluates external sources of a set of entities <br>
  Standard_EXPORT   virtual  void Evaluate() ;
  //! Returns True if no External Source are found <br>
//!           It means that we have a "root" set <br>
//!           (performs an Evaluation as necessary) <br>
  Standard_EXPORT     Standard_Boolean IsEmpty() ;





protected:





private:



Interface_Graph thegraph;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
