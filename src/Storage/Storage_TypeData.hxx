// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Storage_TypeData_HeaderFile
#define _Storage_TypeData_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Storage_TypeData_HeaderFile
#include <Handle_Storage_TypeData.hxx>
#endif

#ifndef _Storage_PType_HeaderFile
#include <Storage_PType.hxx>
#endif
#ifndef _Storage_Error_HeaderFile
#include <Storage_Error.hxx>
#endif
#ifndef _TCollection_AsciiString_HeaderFile
#include <TCollection_AsciiString.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfAsciiString.hxx>
#endif
class Standard_NoSuchObject;
class Storage_Schema;
class TCollection_AsciiString;
class TColStd_HSequenceOfAsciiString;



class Storage_TypeData : public MMgt_TShared {

public:

  
  Standard_EXPORT   Storage_TypeData();
  
  Standard_EXPORT     Standard_Integer NumberOfTypes() const;
  
  Standard_EXPORT     Standard_Boolean IsType(const TCollection_AsciiString& aName) const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfAsciiString Types() const;
  
  Standard_EXPORT     Storage_Error ErrorStatus() const;
  
  Standard_EXPORT     TCollection_AsciiString ErrorStatusExtension() const;
  
  Standard_EXPORT     void ClearErrorStatus() ;
  
  Standard_EXPORT     void Clear() ;


friend class Storage_Schema;


  DEFINE_STANDARD_RTTI(Storage_TypeData)

protected:




private: 

  //! add a type to the list <br>
  Standard_EXPORT     void AddType(const TCollection_AsciiString& aName,const Standard_Integer aTypeNum) ;
  //! returns the name of the type with number <aTypeNum> <br>
  Standard_EXPORT     TCollection_AsciiString Type(const Standard_Integer aTypeNum) const;
  //! returns the name of the type with number <aTypeNum> <br>
  Standard_EXPORT     Standard_Integer Type(const TCollection_AsciiString& aTypeName) const;
  
  Standard_EXPORT     void SetErrorStatus(const Storage_Error anError) ;
  
  Standard_EXPORT     void SetErrorStatusExtension(const TCollection_AsciiString& anErrorExt) ;

Storage_PType myPt;
Storage_Error myErrorStatus;
TCollection_AsciiString myErrorStatusExt;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
