// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESGeom_TransformationMatrix_HeaderFile
#define _IGESGeom_TransformationMatrix_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_IGESGeom_TransformationMatrix_HeaderFile
#include <Handle_IGESGeom_TransformationMatrix.hxx>
#endif

#ifndef _Handle_TColStd_HArray2OfReal_HeaderFile
#include <Handle_TColStd_HArray2OfReal.hxx>
#endif
#ifndef _IGESData_TransfEntity_HeaderFile
#include <IGESData_TransfEntity.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
class TColStd_HArray2OfReal;
class Standard_DimensionMismatch;
class Standard_OutOfRange;
class gp_GTrsf;


//! defines IGESTransformationMatrix, Type <124> Form <0> <br>
//!          in package IGESGeom <br>
//!          The transformation matrix entity transforms three-row column <br>
//!          vectors by means of matrix multiplication and then a vector <br>
//!          addition. This entity can be considered as an "operator" <br>
//!          entity in that it starts with the input vector, operates on <br>
//!          it as described above, and produces the output vector. <br>
class IGESGeom_TransformationMatrix : public IGESData_TransfEntity {

public:

  
  Standard_EXPORT   IGESGeom_TransformationMatrix();
  //! This method is used to set the fields of the class <br>
//!           TransformationMatrix <br>
//!       - aMatrix : 3 x 4 array containing elements of the <br>
//!                   transformation matrix <br>
//! raises exception if aMatrix is not 3 x 4 array <br>
  Standard_EXPORT     void Init(const Handle(TColStd_HArray2OfReal)& aMatrix) ;
  //! Changes FormNumber (indicates the Type of Transf : <br>
//!           Transformation 0-1 or Coordinate System 10-11-12) <br>
//!           Error if not in ranges [0-1] or [10-12] <br>
  Standard_EXPORT     void SetFormNumber(const Standard_Integer form) ;
  //! returns individual Data <br>
//! Errro if I not in [1-3] or J not in [1-4] <br>
  Standard_EXPORT     Standard_Real Data(const Standard_Integer I,const Standard_Integer J) const;
  //! returns the transformation matrix <br>
//! 4th row elements of GTrsf will always be 0, 0, 0, 1 (not defined) <br>
  Standard_EXPORT     gp_GTrsf Value() const;




  DEFINE_STANDARD_RTTI(IGESGeom_TransformationMatrix)

protected:




private: 


Handle_TColStd_HArray2OfReal theData;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
