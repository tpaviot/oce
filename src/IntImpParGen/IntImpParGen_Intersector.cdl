-- Created on: 1992-03-02
-- Created by: Laurent BUCHARD
-- Copyright (c) 1992-1999 Matra Datavision
-- Copyright (c) 1999-2012 OPEN CASCADE SAS
--
-- The content of this file is subject to the Open CASCADE Technology Public
-- License Version 6.5 (the "License"). You may not use the content of this file
-- except in compliance with the License. Please obtain a copy of the License
-- at http://www.opencascade.org and read it completely before using this file.
--
-- The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
-- main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
--
-- The Original Code and all software distributed under the License is
-- distributed on an "AS IS" basis, without warranty of any kind, and the
-- Initial Developer hereby disclaims all such warranties, including without
-- limitation, any warranties of merchantability, fitness for a particular
-- purpose or non-infringement. Please see the License for the specific terms
-- and conditions governing the rights and limitations under the License.



generic class Intersector from IntImpParGen ( 
	 ImpTool             as any; -- as ImpTool from IntImpParGen
	 ParCurve            as any;
	 ParTool             as any; -- as ParTool from IntImpParGen(ParCurve)   
         ProjectOnPCurveTool as any) -- as ProjectOnPCurveToolGen from IntCurve

inherits Intersection from IntRes2d

      	---Purpose: Calculates all the IntersectionPoints 
      	--          and IntersectionSegments between an implicit curve
      	--          (see class ImpTool) and a parametrised curve (see class
      	--          ParTool) on their domains.
      	--          The results of the intersection are stored in the 
      	--          Intersection class from IntRes2d.
      	--          The parametrised curve has to be bounded (the domain
      	--          of this curve must verify HasFirstPoint returns True
      	--          and HasLastPoint returns True).



uses IntersectionPoint             from IntRes2d,
     IntersectionSegment           from IntRes2d,
     SequenceOfIntersectionPoint   from IntRes2d,
     SequenceOfIntersectionSegment from IntRes2d,
     Domain                        from IntRes2d, 
     Pnt2d                         from gp,
     Array1OfReal                  from TColStd  


raises ConstructionError from Standard
 

    class MyImpParTool instantiates ImpParTool from IntImpParGen(
                   ImpTool,
                   ParCurve,    
                   ParTool);



is

    Create

    	---Purpose: Empty constructor.

    	returns Intersector from IntImpParGen;


    Create ( ITool      : ImpTool;        
             Dom1       : Domain from IntRes2d;         
             PCurve     : ParCurve;        
             Dom2       : Domain from IntRes2d;
    	     TolConf,Tol: Real from Standard)
    
	---Purpose: Intersection between an implicit curve and
	--          a parametrised curve.
	--          The exception ConstructionError is raised if the domain
	--          of the parametrised curve does not verify HasFirstPoint
	--          and HasLastPoint return True.
    
    	returns Intersector       from IntImpParGen
    	raises  ConstructionError from Standard;


    Perform (me: in out;
    	     ITool      : ImpTool;        
             Dom1       : Domain from IntRes2d;         
             PCurve     : ParCurve;        
             Dom2       : Domain from IntRes2d;
    	     TolConf,Tol: Real from Standard)
    
	---Purpose: Intersection between an implicit curve and
	--          a parametrised curve.
	--          The exception ConstructionError is raised if the domain
	--          of the parametrised curve does not verify HasFirstPoint
	--          and HasLastPoint return True.
    
    
    	raises ConstructionError from Standard
	is static;	

	 FindU  (   me   ; 
	            parameter    :            Real  from  Standard  ;
    	    	    point        :  in  out   Pnt2d from  gp; 
    	    	    TheParCurev  :            ParCurve; 
    	    	    TheImpTool   :            ImpTool)
	    returns  Real  from  Standard
	    is static ; 
		 	
	    
 	 FindV  (  me ;   
	           parameter          :           Real      from  Standard ; 
    	    	   point              :  in  out  Pnt2d     from  gp  ; 
    	           TheImpTool         :           ImpTool   ;
    	           ParCurve           :           ParCurve  ; 
		   TheParCurveDomain  :           Domain    from  IntRes2d  ; 
		   V0                 :           Real      from  Standard ; 
		   V1                 :           Real      from  Standard ; 
		   Tolerance          :           Real      from  Standard )
	    returns  Real  from  Standard 
	    is static; 

	  And_Domaine_Objet1_Intersections  (  me  ; 
	           TheImpTool         :           ImpTool   ; 
		   TheParCurve        :           ParCurve  ; 
		   TheImpCurveDomain  :           Domain    from  IntRes2d  ;  
		   TheParCurveDomain  :           Domain    from  IntRes2d  ;  
		   NbResultats        :  in  out  Integer  from  Standard  ; 
    	    	   Inter2_And_Domain2 :  in  out  Array1OfReal  from  TColStd  ;
		   Inter1             :  in  out  Array1OfReal  from  TColStd  ; 
		   Resultat1          :  in  out  Array1OfReal  from  TColStd  ; 
		   Resultat2          :  in  out  Array1OfReal  from  TColStd  ;  
		   EpsNul             :           Real  from  Standard ) 
	    is static; 
		   
		   
end Intersector;






