// Created on: 1995-06-21
// Created by: Christophe MARION
// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


//=======================================================================
//function : PolyHidingData
//purpose  : 
//=======================================================================

inline HLRAlgo_PolyHidingData::HLRAlgo_PolyHidingData ()
{}

//=======================================================================
//function : Set
//purpose  : 
//=======================================================================

inline void
HLRAlgo_PolyHidingData::Set (const Standard_Integer Index,
			     const Standard_Integer Minim,
			     const Standard_Integer Maxim,
			     const Standard_Real A,
			     const Standard_Real B,
			     const Standard_Real C,
			     const Standard_Real D)
{
  myMinMax[0] = Index;
  myMinMax[1] = Minim;
  myMinMax[2] = Maxim;
  myPlan[0]  = A;
  myPlan[1]  = B;
  myPlan[2]  = C;
  myPlan[3]  = D;
}

//=======================================================================
//function : IndexAndMinMax
//purpose  : 
//=======================================================================

inline Standard_Address
HLRAlgo_PolyHidingData::IndexAndMinMax() const
{ return (Standard_Address)myMinMax; }

//=======================================================================
//function : Plan
//purpose  : 
//=======================================================================

inline Standard_Address
HLRAlgo_PolyHidingData::Plan() const
{ return (Standard_Address)myPlan; }
