// Created on: 1993-01-11
// Created by: Christophe MARION
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.


#include <TColgp_HArray1OfXYZ.hxx>
#include <HLRAlgo_HArray1OfTData.hxx>
#include <HLRAlgo_HArray1OfPHDat.hxx>

//=======================================================================
//function : FaceIndex
//purpose  : 
//=======================================================================

inline void
HLRAlgo_PolyData::FaceIndex (const Standard_Integer I)
{ myIndices[0] = I; }

//=======================================================================
//function : FaceIndex
//purpose  : 
//=======================================================================

inline Standard_Integer
HLRAlgo_PolyData::FaceIndex () const
{ return myIndices[0]; }

//=======================================================================
//function : Nodes
//purpose  : 
//=======================================================================

inline TColgp_Array1OfXYZ &
HLRAlgo_PolyData::Nodes () const
{ return myHNodes->ChangeArray1(); }

//=======================================================================
//function : TData
//purpose  : 
//=======================================================================

inline HLRAlgo_Array1OfTData &
HLRAlgo_PolyData::TData () const
{ return myHTData->ChangeArray1(); }

//=======================================================================
//function : PHDat
//purpose  : 
//=======================================================================

inline HLRAlgo_Array1OfPHDat &
HLRAlgo_PolyData::PHDat () const
{ return myHPHDat->ChangeArray1(); }

//=======================================================================
//function : Hiding
//purpose  : 
//=======================================================================

inline Standard_Boolean HLRAlgo_PolyData::Hiding () const
{ return !myHPHDat.IsNull(); }

//=======================================================================
//function : Indices
//purpose  : 
//=======================================================================

inline Standard_Address HLRAlgo_PolyData::Indices ()
{ return (Standard_Address)myIndices; }
