// Created on: 1991-09-10
// Created by: Denis PASCAL
// Copyright (c) 1991-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

//		<dp>

#include <Standard_NoMoreObject.hxx>
#include <Standard_NoSuchObject.hxx>
#include <GraphDS_DataMapIteratorOfEntityRoleMap.hxx>

//=======================================================================
//function : GraphDS_RelationsIterator
//purpose  : 
//=======================================================================

GraphDS_RelationsIterator::GraphDS_RelationsIterator ()
{
}

//=======================================================================
//function : GraphDS_RelationsIterator
//purpose  : 
//=======================================================================

GraphDS_RelationsIterator::GraphDS_RelationsIterator 
  (const GraphDS_RelationGraph& G) 
{
  Initialize (G);
}

//=======================================================================
//function : GraphDS_RelationsIterator
//purpose  : 
//=======================================================================

GraphDS_RelationsIterator::GraphDS_RelationsIterator 
  (const GraphDS_RelationGraph& G,
   const Handle(GraphDS_Entity)& E)
{
  Initialize(G,E);
}

//=======================================================================
//function : GraphDS_RelationsIterator
//purpose  : 
//=======================================================================

GraphDS_RelationsIterator::GraphDS_RelationsIterator 
  (const GraphDS_RelationGraph& G,
   const Handle(GraphDS_Relation)& R)
{
  Initialize(G,R);
}


//=======================================================================
//function : Initialize
//purpose  : 
//=======================================================================

void GraphDS_RelationsIterator::Initialize
  (const GraphDS_RelationGraph& G) 
{
  myRelations.Initialize(G.myRelations);
}     


//=======================================================================
//function : Initialize
//purpose  : 
//=======================================================================

void GraphDS_RelationsIterator::Initialize
  (const GraphDS_RelationGraph&,
   const Handle(GraphDS_Entity)& E)
{
   myRelations.Initialize(E->GetRelations());
}


//=======================================================================
//function : Initialize
//purpose  : 
//=======================================================================

void GraphDS_RelationsIterator::Initialize
  (const GraphDS_RelationGraph&,
   const Handle(GraphDS_Relation)& R)
{
  myMap.Clear();

  Handle(GraphDS_Entity) ENT;  
  Handle(GraphDS_Relation) REL;
  GraphDS_DataMapIteratorOfEntityRoleMap itv; 
  TColStd_MapIteratorOfMapOfTransient itr;

  for (itv.Initialize(R->GetEntities());itv.More();itv.Next()) {
    ENT = Handle(GraphDS_Entity)::DownCast(itv.Key());
    if (itv.Value() != GraphDS_OnlyInput) {
      for (itr.Initialize(ENT->GetRelations()); itr.More(); itr.Next()) {
	REL = Handle(GraphDS_Relation)::DownCast(itr.Key());
	if (REL->IsInput(ENT)) myMap.Add(REL);
      }
    }
  }
  myRelations.Initialize(myMap);
}


//=======================================================================
//function : More
//purpose  : 
//=======================================================================

Standard_Boolean GraphDS_RelationsIterator::More () const
{
  return myRelations.More();
}


//=======================================================================
//function : Next
//purpose  : 
//=======================================================================

void GraphDS_RelationsIterator::Next () 
{
  myRelations.Next();
}
	

//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

const Handle(GraphDS_Relation)& GraphDS_RelationsIterator::Value () const 
{  
  return  *((Handle(GraphDS_Relation)*)& myRelations.Key());
  //return Handle(GraphDS_Relation)::DownCast(myRelations.Key());
}



