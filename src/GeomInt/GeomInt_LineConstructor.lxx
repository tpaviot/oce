// Created on: 1995-02-07
// Created by: Jacques GOUSSARD
// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.



//=======================================================================
//function : GeomInt_LineConstructor
//purpose  : 
//=======================================================================

inline GeomInt_LineConstructor::GeomInt_LineConstructor ()
 : done(Standard_False)
{
}


//=======================================================================
//function : Load
//purpose  : 
//=======================================================================

inline void GeomInt_LineConstructor::Load (const Handle(Adaptor3d_TopolTool)& D1,
                                           const Handle(Adaptor3d_TopolTool)& D2,
                                           const Handle(GeomAdaptor_HSurface)& S1,
                                           const Handle(GeomAdaptor_HSurface)& S2)
{
  myDom1 = D1;
  myDom2 = D2;
  myHS1  = S1;
  myHS2  = S2;
}


//=======================================================================
//function : IsDone
//purpose  : 
//=======================================================================

inline Standard_Boolean GeomInt_LineConstructor::IsDone () const
{
  return done;
}


//=======================================================================
//function : NbParts
//purpose  : 
//=======================================================================

inline Standard_Integer GeomInt_LineConstructor::NbParts () const
{
  if (!done) { StdFail_NotDone::Raise(); }
  return (seqp.Length() / 2);
}


//=======================================================================
//function : Part
//purpose  : 
//=======================================================================
inline void GeomInt_LineConstructor::Part (const Standard_Integer I,
                                           Standard_Real& WFirst,
                                           Standard_Real& WLast) const
{
  if (!done) { StdFail_NotDone::Raise(); }
  WFirst = seqp(2*I-1);
  WLast  = seqp(2*I);
}
