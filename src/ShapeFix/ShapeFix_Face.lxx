// Copyright (c) 1999-2012 OPEN CASCADE SAS
//
// The content of this file is subject to the Open CASCADE Technology Public
// License Version 6.5 (the "License"). You may not use the content of this file
// except in compliance with the License. Please obtain a copy of the License
// at http://www.opencascade.org and read it completely before using this file.
//
// The Initial Developer of the Original Code is Open CASCADE S.A.S., having its
// main offices at: 1, place des Freres Montgolfier, 78280 Guyancourt, France.
//
// The Original Code and all software distributed under the License is
// distributed on an "AS IS" basis, without warranty of any kind, and the
// Initial Developer hereby disclaims all such warranties, including without
// limitation, any warranties of merchantability, fitness for a particular
// purpose or non-infringement. Please see the License for the specific terms
// and conditions governing the rights and limitations under the License.

#include <ShapeExtend.hxx>

//=======================================================================
//function : FixWireMode
//purpose  : 
//=======================================================================

inline Standard_Integer& ShapeFix_Face::FixWireMode() 
{
  return myFixWireMode;
}

//=======================================================================
//function : FixOrientationMode
//purpose  : 
//=======================================================================

inline Standard_Integer& ShapeFix_Face::FixOrientationMode()
{
  return myFixOrientationMode;
}

//=======================================================================
//function : FixAddNaturalBoundMode
//purpose  : 
//=======================================================================

inline Standard_Integer& ShapeFix_Face::FixAddNaturalBoundMode()
{
  return myFixAddNaturalBoundMode;
}

//=======================================================================
//function : FixMissingSeamMode
//purpose  : 
//=======================================================================

inline Standard_Integer& ShapeFix_Face::FixMissingSeamMode()
{
  return myFixMissingSeamMode;
}

//=======================================================================
//function : FixSmallAreaWireMode
//purpose  : 
//=======================================================================

inline Standard_Integer& ShapeFix_Face::FixSmallAreaWireMode()
{
  return myFixSmallAreaWireMode;
}

//=======================================================================
//function : FixIntersectingWiresMode
//purpose  : 
//=======================================================================

inline Standard_Integer& ShapeFix_Face::FixIntersectingWiresMode()
{
  return myFixIntersectingWiresMode;
}

//=======================================================================
//function : FixLoopWiresMode
//purpose  : 
//=======================================================================

inline Standard_Integer& ShapeFix_Face::FixLoopWiresMode()
{
  return myFixLoopWiresMode;
}

//=======================================================================
//function : FixSplitFaceMode
//purpose  : 
//=======================================================================

inline Standard_Integer& ShapeFix_Face::FixSplitFaceMode()
{
  return myFixSplitFaceMode;
}

//=======================================================================
//function : AutoCorrectPrecisionMode
//purpose  : 
//=======================================================================

inline Standard_Integer& ShapeFix_Face::AutoCorrectPrecisionMode()
{
  return myAutoCorrectPrecisionMode;
}

//=======================================================================
//function : FixPeriodicDegeneratedMode
//purpose  : 
//=======================================================================

inline Standard_Integer& ShapeFix_Face::FixPeriodicDegeneratedMode()
{
  return myFixPeriodicDegenerated;
}

//=======================================================================
//function : Face
//purpose  : 
//=======================================================================

inline TopoDS_Face ShapeFix_Face::Face() const
{
  return myFace;
}
 
//=======================================================================
//function : Result
//purpose  : 
//=======================================================================

inline TopoDS_Shape ShapeFix_Face::Result() const
{
  return myResult;
}
 
//=======================================================================
//function : Status
//purpose  : 
//=======================================================================

inline  Standard_Boolean ShapeFix_Face::Status (const ShapeExtend_Status status) const
{
  return ShapeExtend::DecodeStatus ( myStatus, status ); 
}

//=======================================================================
//function : FixWireTool
//purpose  : 
//=======================================================================

inline Handle(ShapeFix_Wire) ShapeFix_Face::FixWireTool() 
{
  return myFixWire;
}
